@using System.Activities.Statements
@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.LotteryOverviewModel
@{
    ViewBag.Title = "Wahlverfahren";

    var IsAdmin = ViewBag.UserRight.IsCourseAdmin ||
                  (Model.Lottery.Owner != null && Model.Lottery.Owner.UserId.Equals(ViewBag.UserRight.User.Id));

    var showMenu = IsAdmin;
    var colDetails = "col-md-12";
    if (showMenu)
    {
        colDetails = "col-md-10";
    }

}


<div class="row">
    <div class="col-md-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i class="bi bi-grid"></i></a></li>
                @if (Model.Lottery.Organiser != null)
                {
                    <li class="breadcrumb-item"><a href="@Url.Action("Organiser", "Lottery", new { orgId = Model.Lottery.Organiser.Id })">@Model.Lottery.Organiser.ShortName</a></li>
                }
                @if (Model.Lottery.Semester != null)
                {
                    <li class="breadcrumb-item"><a href="@Url.Action("Organiser", "Lottery", new { semId = Model.Lottery.Semester.Id, orgId = Model.Lottery.Organiser.Id })">@Model.Lottery.Semester.Name</a></li>
                }
                <li class="breadcrumb-item active" aria-current="page">@Model.Lottery.Name</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row">
@if (showMenu)
{
    var attrDisabled = "";
    <div class="col-md-2">
        <div class="card mb-3">
            <div class="list-group">
                @if (!Model.Lottery.IsActive)
                {
                    <div class="list-group-item list-group-item-warning">
                        <i class="bi bi-lock"></i> Wahlverfahren für Studierende nicht sichtbar.
                    </div>
                }
            </div>
        </div>
        <div class="card mb-3">
            <div class="card-header">
                <h5 class="card-title">Vorbereitung</h5>
            </div>
            <div class="list-group">
                <a class="list-group-item list-group-item-actionn @attrDisabled" href="@Url.Action("EditGeneral", new {id = Model.Lottery.Id})">
                    <i class="bi bi-gear"></i> Allgemeine Angaben
                </a>
                <a class="list-group-item list-group-item-action @attrDisabled" href="@Url.Action("EditMethod", new {id = Model.Lottery.Id})">
                    <i class="bi bi-ticket"></i> Vergabemethode
                </a>
                <a class="list-group-item list-group-item-action @attrDisabled" href="@Url.Action("EditProperties", new {id = Model.Lottery.Id})">
                    <i class="bi bi-stopwatch"></i> Einstellungen
                </a>
                <a class="list-group-item list-group-item-action @attrDisabled" href="@Url.Action("Select", new {id = Model.Lottery.Id})">
                    <i class="bi bi-list-columns-reverse"></i> Zusammensetzung
                </a>
            </div>
        </div>
        <div class="card mb-3">
            <div class="card-header">
                <h5 class="card-title">Aktionen</h5>
            </div>
            <div class="list-group">
                <a class="list-group-item list-group-item-action @attrDisabled" href="@Url.Action("EditProperties", new {id = Model.Lottery.Id})">
                    <i class="bi bi-lock"></i> Freigabe
                </a>
                <a class="list-group-item list-group-item-action @attrDisabled" href="@Url.Action("AdminNewSubjects", new {id = Model.Lottery.Id})">
                    <i class="bi bi-play-circle"></i> Verlosung
                </a>
                <a class="list-group-item list-group-item-action disabled" href="@Url.Action("Lottery", "Mailing", new {id=Model.Lottery.Id})">
                    <i class="bi bi-envelope"></i> Nachricht
                </a>
            </div>
        </div>
        <div class="card mb-3">
            <div class="card-header">
                <h5 class="card-title">Auswertungen</h5>
            </div>
            <div class="list-group">
                <a class="list-group-item list-group-item-action @attrDisabled" href="@Url.Action("Courses", new {id = Model.Lottery.Id})">
                    <i class="bi bi-list"></i> Lehrveranstaltungen
                </a>
                <a class="list-group-item list-group-item-action @attrDisabled" href="@Url.Action("DrawingPots", new {id = Model.Lottery.Id})">
                    <i class="bi bi-basket"></i> Platzkontingente
                </a>
                <a class="list-group-item list-group-item-action @attrDisabled" href="@Url.Action("Students", new {id = Model.Lottery.Id})">
                    <i class="bi bi-people"></i> Teilnehmende
                </a>
                <a class="list-group-item list-group-item-action @attrDisabled" href="@Url.Action("Reports", new {id = Model.Lottery.Id})">
                    <i class="bi bi-file-lock"></i> Ziehungsberichte
                </a>
            </div>
        </div>
        <div class="card mb-3">
            <div class="card-header">
                <h5 class="card-title">Administration</h5>
            </div>
            <div class="list-group">
                <a href="@Url.Action("Delete", new {id = Model.Lottery.Id})" class="list-group-item list-group-item-action list-group-item-danger"><i class="bi bi-trash"></i> Löschen</a>
            </div>
        </div>
        <div class="card mb-3">
            <div class="list-group">
                @if (Model.Lottery.Owner != null)
                {
                    <div class="list-group-item">
                        Angelegt von: @Model.Lottery.Owner.FullName
                    </div>
                }
                else
                {
                    <div class="list-group-item list-group-item-danger">
                        Keine Information zu Besitzer vorhanden
                    </div>
                }
            </div>
        </div>
    </div>
}
<div class="@colDetails">
<div class="row">
<div class="col-md-12">
<div class="row">
    <div class="col-md-12">
        <div class="card mb-3">
            <div class="card-body">
                <div class="row">
                    <div class="col-12 mb-1">
                        <p class="card-title"><strong>@Model.Lottery.Name</strong></p>
                        @if (!Model.Lottery.IsFixed)
                        {
                            <p class="card-subtitle">Windhundverfahren</p>
                        }
                        else
                        {
                            <p class="card-subtitle"><i>Platzverlosung</i></p>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        @if (string.IsNullOrEmpty(Model.Lottery.Description))
                        {
                            <div><i>Keine Beschreibung vorhanden</i></div>
                        }
                        else
                        {
                            <div>@Html.Raw(Model.Lottery.Description)</div>
                        }
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-12">
                        <div class="list-group">
                            @if (Model.Student != null)
                            {
                                if (Model.Lottery.IsActive)
                                {
                                    var hasAccess = !((Model.Lottery.blockFullTime && !Model.Student.IsPartTime) ||
                                                       (Model.Lottery.blockPartTime && Model.Student.IsPartTime));

                                    if (hasAccess)
                                    {
                                        if (!Model.Lottery.IsFixed)
                                        {
                                            <div class="list-group-item">
                                                <h5 class="list-group-item-heading">Status meiner bisher getroffenen Wahl</h5>
                                                @if (Model.CoursesSelected.Any())
                                                {
                                                    var seats = Model.CoursesSelected.Where(x => !x.Subscription.OnWaitingList).ToList();
                                                    var waiting = Model.CoursesSelected.Where(x => x.Subscription.OnWaitingList).ToList();

                                                    if (seats.Any())
                                                    {
                                                        <h5 class="list-group-item-heading">Erhaltene Plätze</h5>
                                                        <div class="list-group-item-text">
                                                            <ul class="fa-ul">
                                                                @foreach (var seat in seats)
                                                                {
                                                                    <li><i class="fa fa-li fa-group"></i>@seat.Course.Name (@seat.Course.ShortName)</li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <h5 class="list-group-item-heading">Habe bisher keinen Platz erhalten.</h5>
                                                    }

                                                    if (waiting.Any())
                                                    {
                                                        <h5 class="list-group-item-heading">Meine Einträge auf Wartelisten</h5>
                                                        <div class="list-group-item-text">
                                                            <ul class="fa-ul">
                                                                @foreach (var seat in waiting)
                                                                {
                                                                    <li><i class="fa fa-li fa-hourglass-half"></i>@seat.Course.Name (@seat.Course.ShortName)</li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <h5 class="list-group-item-heading">Stehe auf keiner Warteliste.</h5>
                                                    }
                                                }
                                                else
                                                {
                                                    <h5 class="list-group-item-heading">Habe bisher keine Lehrveranstaltung ausgewählt.</h5>
                                                }

                                                @if (Model.Lottery.IsActiveFrom.Value <= DateTime.Now)
                                                {
                                                    <div class="btn-group" role="group">
                                                        <a href="@Url.Action("ChangeSelection", new { id = Model.Lottery.Id })" class="btn btn-outline-primary"><i class="fa fa-pencil"></i> Meine Auswahl ändern</a>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="list-group-item list-group-item-warning">
                                                        <h5 class="list-group-item-heading">Zeitraum für Eintragungen hat noch nicht begonnen</h5>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="list-group-item">
                                                @if (Model.Game != null)
                                                {
                                                    <h5 class="list-group-item-heading">Status meiner letzten Wahl (@Model.Game.Created)</h5>
                                                    <div class="list-group-item-text">
                                                        <ul class="fa-ul">
                                                            <li><i class="fa fa-li fa-bed"></i>Anzahl benötigter Plätze: @Model.Game.CoursesWanted</li>
                                                            @if (Model.Game.AcceptDefault)
                                                            {
                                                                <li><i class="fa fa-li fa-bed"></i>Akzeptiere auch Plätze in anderen Lehrveranstaltung</li>
                                                            }
                                                            else
                                                            {
                                                                <li><i class="fa fa-li fa-bed"></i>Akzeptiere bei Losverfahren keinen anderen Platz</li>
                                                            }
                                                        </ul>
                                                        @if (Model.CoursesSelected.Any())
                                                        {
                                                            var seats = Model.CoursesSelected.Where(x => !x.Subscription.OnWaitingList).ToList();
                                                            var waiting = Model.CoursesSelected.Where(x => x.Subscription.OnWaitingList).ToList();

                                                            if (seats.Any())
                                                            {
                                                                <h5 class="list-group-item-heading">Erhaltene Plätze</h5>
                                                                <div class="list-group-item-text">
                                                                    <ul class="fa-ul">
                                                                        @foreach (var seat in seats)
                                                                        {
                                                                            <li><i class="fa fa-li fa-group"></i>@seat.Course.Name (@seat.Course.ShortName)</li>
                                                                        }
                                                                    </ul>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <h5 class="list-group-item-heading">Habe bisher keinen Platz erhalten.</h5>
                                                            }

                                                            if (waiting.Any())
                                                            {
                                                                <h5 class="list-group-item-heading">Meine Einträge auf Wartelisten</h5>
                                                                <div class="list-group-item-text">
                                                                    <ul class="fa-ul">
                                                                        @foreach (var seat in waiting)
                                                                        {
                                                                            <li><i class="fa fa-li fa-hourglass-half"></i>@seat.Course.Name (@seat.Course.ShortName)</li>
                                                                        }
                                                                    </ul>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <h5 class="list-group-item-heading">Stehe auf keiner Warteliste.</h5>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <h5 class="list-group-item-heading">Habe bisher keine Plätze ausgewählt.</h5>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <h5><i>Bisher habe ich an diesem Wahlverfahren noch nicht teilgenommen</i></h5>
                                                }
                                            </div>
                                            if (DateTime.Now < Model.Lottery.IsActiveFrom.Value)
                                            {
                                                <div class="list-group-item list-group-item-warning">
                                                    <h5 class="list-group-item-heading">Zeitraum für Eintragungen hat noch nicht begonnen</h5>
                                                </div>
                                            }
                                            else if (Model.Lottery.IsFixed && DateTime.Now > Model.Lottery.IsActiveUntil.Value && DateTime.Now <= Model.Lottery.LastDrawing)
                                            {
                                                <div class="list-group-item list-group-item-danger">
                                                    <p>Aktuell läuft die Platzvergabe. In dieser Zeit ist kein Ein- oder Austragen möglich.</p>
                                                </div>
                                            }
                                            else
                                            {

                                                if (Model.Game != null && Model.CoursesSelected.Count(x => !x.Subscription.OnWaitingList) >= Model.Game.CoursesWanted &&
                                                    Model.Lottery.MaxConfirm > 0 && Model.Lottery.MaxExceptionConfirm > 0)
                                                {
                                                    <div class="list-group-item list-group-item-warning">
                                                        <h5 class="list-group-item-heading">Kontingent ausgeschöpft</h5>
                                                        <div class="list-group-item-text">
                                                            Habe mein Kontingent ausgeschöpft. Muss mich entweder aus einer Lehrveranstlatung austragen oder ein größeres Kontingent beantragen.
                                                        </div>
                                                        <a href="@Url.Action("DeleteCourses", new { id = Model.Lottery.Id })" class="btn btn-danger"><i class="bi bi-x-circle"></i> Aus Lehrveranstaltungen austragen</a>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="list-group-item">
                                                        <h5 class="list-group-item-heading">Auswahl Lehrveranstaltungen</h5>
                                                        <div class="list-group-item-text">
                                                            <ul>
                                                                @if (Model.Lottery.IsActiveFrom.Value <= DateTime.Now && DateTime.Now <= Model.Lottery.IsActiveUntil.Value)
                                                                {
                                                                    <li>Während des Eintragungszeitraums</li>
                                                                }
                                                                else if (DateTime.Now > Model.Lottery.LastDrawing)
                                                                {
                                                                    <li>Nacheintragung</li>
                                                                }
                                                                @if (Model.Game != null && Model.CoursesSelected.Count(x => !x.Subscription.OnWaitingList) < Model.Game.CoursesWanted)
                                                                {
                                                                    <li>Habe mein Kontingent noch nicht ausgeschöpft, d.h. ich kann meine Auswahl noch ändern.</li>
                                                                }
                                                            </ul>
                                                        </div>
                                                        <div class="btn-group" role="group">
                                                            <a href="@Url.Action("SelectCourses", new { id = Model.Lottery.Id })" class="btn btn-outline-primary"><i class="bi bi-pen"></i> Auswahl starten / ändern</a>
                                                            <a href="@Url.Action("DeleteCourses", new { id = Model.Lottery.Id })" class="btn btn-danger"><i class="bi bi-x-circle"></i> Aus Lehrveranstaltungen austragen</a>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (Model.Lottery.blockFullTime)
                                        {
                                            <div class="list-group-item list-group-item-danger">
                                                <p>Das Wahlverfahren steht aktuell für Studierende in Vollzeit nicht zur Verfügung</p>
                                            </div>
                                        }

                                        if (Model.Lottery.blockPartTime)
                                        {
                                            <div class="list-group-item list-group-item-danger">
                                                <p>Das Wahlverfahren steht aktuell für Studierende in Teilzeit nicht zur Verfügung</p>
                                            </div>
                                        }
                                    }
                                }
                                else
                                {
                                    <div class="list-group-item list-group-item-danger">
                                        <p>Das Wahlverfahren steht aktuell nicht zur Verfügung</p>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="list-group-item">
                                    <div class="alert alert-danger">
                                        Für die Teilnahme am Wahlverfahren muss ich Angaben zu meinem Studium machen. Bisher habe ich noch kein Studienangebot ausgewählt.
                                    </div>
                                    <a href="@Url.Action("Curricula", "Subscription")" class="btn btn-outline-primary">Zum Studienbuch <i class="bi bi-chevron-double-right"></i></a>
                                </div>

                            }
                        </div>
                    </div>
                </div>
                                
                <div class="row mt-3">
                    <div class="col-md-12">
                        <ul class="nav nav-tabs">
                            <li class="nav-item">
                                <a class="nav-link active" data-bs-toggle="tab" href="#schedule">Zeitplan</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#rules">Rahmenbedingungen</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#courses">Auswahl</a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active" id="schedule">
                                <div class="card">
                                    <div class="card-body">

                                        @if (Model.Lottery.IsFixed)
                                        {
                                            var dozTime = Model.Lottery.FirstDrawing - Model.Lottery.IsActiveUntil.Value;
                                            var hasDozPeriod = dozTime >= TimeSpan.FromMinutes(30);
                                            <div class="row">
                                                <div class="col-6">
                                                    Eintragungszeitraum
                                                </div>
                                                <div class="col-6">
                                                    @Html.TimeSpanWithDate(Model.Lottery.IsActiveFrom.Value, Model.Lottery.IsActiveUntil.Value)
                                                </div>
                                            </div>
                                            if (hasDozPeriod)
                                            {
                                                <div class="row">
                                                    <div class="col-6">
                                                        Vorauswahl durch Lehrende
                                                    </div>
                                                    <div class="col-6">
                                                        @Html.TimeSpanWithDate(Model.Lottery.IsActiveUntil.Value, Model.Lottery.FirstDrawing)
                                                    </div>
                                                </div>
                                            }

                                            <div class="row">
                                                <div class="col-6">
                                                    Durchführung der Verlosung
                                                </div>
                                                <div class="col-6">
                                                    @Html.TimeSpanWithDate(Model.Lottery.FirstDrawing, Model.Lottery.LastDrawing)
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-6">
                                                    Nachwahl
                                                </div>
                                                <div class="col-6">
                                                    ab @Model.Lottery.LastDrawing.ToString("dd.MM.yyyy HH:mm")
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane" id="rules">
                                <div class="card">
                                    <div class="card-body">

                                        @if (Model.Lottery.IsFixed)
                                        {
                                            <div class="row">
                                                <div class="col-4">
                                                    Wahlmöglichkeit
                                                </div>
                                                <div class="col-8">
                                                    <div>Ich muss mindestens @Model.Lottery.MinSubscription Lehrveranstaltung auswählen.</div>
                                                    <div>Ich kann maximal @Model.Lottery.MaxSubscription Lehrveranstaltungen auswählen.</div>
                                                </div>
                                            </div>
                                            if (Model.Lottery.MaxConfirm == 0 && Model.Lottery.MaxExceptionConfirm == 0)
                                            {

                                            }
                                            else
                                            {
                                                <div class="row">
                                                    <div class="col-4">
                                                        Priorisierung
                                                    </div>
                                                    <div class="col-8">
                                                        <div>Ich kann meine Auswahl priorisieren.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-4">
                                                        Platzzuteilung
                                                    </div>
                                                    <div class="col-8">
                                                        @if (Model.Lottery.MaxConfirm < Model.Lottery.MaxExceptionConfirm)
                                                        {
                                                            <div>Ich kann angeben, ob ich @Model.Lottery.MaxConfirm oder bis zu @Model.Lottery.MaxExceptionConfirm Plätze zugeteilt bekommen möchte</div>
                                                        }
                                                        else if (Model.Lottery.MaxConfirm == Model.Lottery.MaxExceptionConfirm)
                                                        {
                                                            if (Model.Lottery.MaxConfirm == 1)
                                                            {
                                                                <div>Durch die Platzverlosung erhalte ich @Model.Lottery.MaxConfirm Platz.</div>
                                                            }
                                                            else
                                                            {
                                                                <div>Durch die Platzverlosung erhalte ich @Model.Lottery.MaxConfirm Plätze.</div>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <div>FEHLER in Konfiguration</div>

                                                        }
                                                    </div>
                                                </div>
                                            }

                                            if (Model.Lottery.IsScheduled)
                                            {
                                                <div class="row">
                                                    <div class="col-4">
                                                        Sonderfall "ausgebucht"
                                                    </div>
                                                    <div class="col-8">
                                                        <div>Ich kann angeben, ob ich im Zweifel auch einen Platz in einer von mir nicht gewählten Lehrveranstaltung akzeptieren würde.</div>
                                                    </div>
                                                </div>
                                            }

                                            if (Model.Lottery.UseLapCount)
                                            {
                                                <div class="row">
                                                    <div class="col-4">
                                                        Verbindlichkeit
                                                    </div>
                                                    <div class="col-8">
                                                        <div>Ich kann mich aus mir zugeteilten Plätzen nicht austragen.</div>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="row">
                                                    <div class="col-4">
                                                        Verbindlichkeit
                                                    </div>
                                                    <div class="col-8">
                                                        <div>Ich kann mich in der Nachwahl auch wieder austragen und andere Lehrveranstaltungen wählen (abhängig vom dann eingesetzten Verfahren).</div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane" id="courses">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="list-group mt-1">
                                            @foreach (var course in Model.Courses)
                                            {
                                                <a href="@Url.Action("Details", "Course", new { id = course.Course.Id })" class="list-group-item list-group-item-action">@course.Course.ShortName | @course.Course.Name</a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
</div>
</div>
</div>




