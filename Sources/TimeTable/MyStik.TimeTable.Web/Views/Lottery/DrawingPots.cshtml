@model MyStik.TimeTable.DataServices.Lottery.DrawingService
@{
    ViewBag.Title = "Status " + Model.Lottery.Name;
    var colhead = Model.Lottery.MaxSubscription + 1;
}

@section styles
{
    <link href="@Url.Content("~/Assets/libs/datatables/dataTables.min.css")" rel="stylesheet" type="text/css" />
}



<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4>Wahlverfahren: "@Model.Lottery.Name" - Buchungslisten / Lostöpfe</h4>
                @if (!Model.Lottery.IsActive)
                {
                    <div class="alert alert-danger">Für Studierende nicht sichtbar</div>
                }
            </div>
            <div class="list-group">
                <div class="list-group-item">
                    <div class="btn-group" role="group">
                        <a href="@Url.Action("Details", new {id=Model.Lottery.Id})" class="btn btn-outline-primary"><i class="bi-chevron-left"></i> zurück</a>
                    </div>
                </div>
                <div class="list-group-item">
                    <h4>Legende / Symbole</h4>
                    <div class="row">
                        <div class="col-md-6">
                            <ul>
                                <li><i class="bi-ticket"></i> Anzahl der Plätze (Kapazität)</li>
                                <li><i class="bi-people"></i> Anzahl Teilnehmer</li>
                                <li><i class="bi-hourglass"></i> Anzahl Einträge auf Warteliste</li>
                            </ul>
                        </div>
                        <div class="col-md-6">
                            <ul>
                                <li><i class="bi-percent text-warning"></i> "Auslastung" - Verhältnis Anzahl Teilnehmer zu Kapazität</li>
                                <li><i class="bi-percent text-danger"></i> "Überbuchung" - Verhältnis freie Plätze zu Wartelisteneinträge mit Priorität 1</li>
                            </ul>
                        </div>
                    </div>
                </div>

            </div>
            <table id="tabPots" class="table">
                <thead>
                    <tr>
                        <th colspan="1">Lehrveranstaltung</th>
                        <th colspan="5">Buchungsliste</th>
                        @if (Model.Lottery.IsFixed)
                        {
                            <th colspan="@(colhead + 1)">Aufschlüsselung Teilnehmerliste</th>
                            <th colspan="@colhead">Aufschlüsselung Warteliste</th>
                        }
                    </tr>
                    <tr>
                        <th>Name</th>
                        <th>Bezeichnung</th>
                        <th><i class="bi-ticket"></i></th>
                        <th><i class="bi-people"></i></th>
                        <th><i class="bi-hourglass"></i></th>
                        <th><i class="bi-percent text-warning"></i></th>

                        @if (Model.Lottery.IsFixed)
                        {
                            <th><i class="bi-percent text-danger"></i></th>
                            <th>Keine Prio</th>
                            for (var i = 1; i <= Model.Lottery.MaxSubscription; i++)
                            {
                                <th>@i</th>
                            }
                            <th>Keine Prio</th>
                            for (var i = 1; i <= Model.Lottery.MaxSubscription; i++)
                            {
                                <th>@i</th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var lotPot in Model.LotPots.OrderByDescending(x => x.BookingRank).ThenByDescending(x => x.Lots.Count(y => y.Priority == 1)))
                    {
                        <tr>
                            <td>
                                <a href="@Url.Action("Details", "Course", new {id = lotPot.Course.Id})">@lotPot.Course.Name (@lotPot.Course.ShortName)</a>
                            </td>
                            <td>
                                @lotPot.Name
                            </td>
                            @if (lotPot.Capacity == int.MaxValue)
                            {
                                <td><i class="bi-infinity"></i></td>
                            }
                            else
                            {
                                <td>@lotPot.Capacity</td>
                            }

                            <td>@lotPot.BookingList.Participients.Count</td>
                            <td>@lotPot.BookingList.WaitingList.Count</td>

                            @if (lotPot.Capacity == int.MaxValue)
                            {
                                <td></td>
                            }
                            else
                            {
                                <td>@lotPot.OccupancyRate.ToString("0%")</td>
                            }

                            @if (Model.Lottery.IsFixed)
                            {

                                if (lotPot.Capacity == int.MaxValue)
                                {
                                    <td><i class="bi-infinity"></i></td>
                                }
                                else
                                {
                                    <td>@lotPot.BookingRank.ToString("0%")</td>
                                }


                                <td>@lotPot.BookingList.Participients.Count(x => x.Subscription.Priority == 0)</td>
                                for (var i = 1; i <= Model.Lottery.MaxSubscription; i++)
                                {
                                    <td>@lotPot.BookingList.Participients.Count(x => x.Subscription.Priority == i)</td>
                                }


                                <td>@lotPot.Lots.Count(x => x.Priority == 0)</td>
                                for (var i = 1; i <= Model.Lottery.MaxSubscription; i++)
                                {
                                    <td>@lotPot.Lots.Count(x => x.Priority == i)</td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


@section scripts
{
    <script src="@Url.Content("~/Assets/libs/datatables/dataTables.min.js")" type="text/javascript"></script>

    <script>
        $(document).ready(function () {
            var t = $('#tabPots').DataTable({
                "paging": false,
                "columnDefs": [{
                    "searchable": false,
                    "orderable": false,
                    "targets": 0
                }],
            });

        });
    </script>
}
