@using MyStik.TimeTable.Web.Services
@model MyStik.TimeTable.DataServices.Drawing.DrawingService
@{
    ViewBag.Title = "Testlauf";
    var iUser = 0;
    var userService = new UserInfoService();

    var nCols1 = Model.Lottery.MaxSubscription + 1;
    var nCols2 = Model.Lottery.MaxSubscription + 2;
}

<div class="panel panel-default">
    <div class="panel-body bg-fillter-study">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <h1>Wahlverfahren "@Model.Lottery.Name" - Testlauf</h1>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="panel panel-default panel-menu">
    <div class="panel-body">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-inline">
                        <div class="form-group">
                            <a href="@Url.Action("Details", new {id=Model.Lottery.Id})" class="btn btn-default">
                                <i class="fa fa-arrow-left"></i> Zurück
                            </a>
                        </div>
                        <div class="form-group">
                            <a href="@Url.Action("InitTest", new {id=Model.Lottery.Id})" class="btn btn-default">
                                <i class="fa fa-wrench"></i> Einstellungen
                            </a>
                        </div>
                        <div class="form-group">
                            <a href="@Url.Action("DrawLotPots", new {id=Model.Lottery.Id})" class="btn btn-default">
                                <i class="fa fa-play"></i> Ausführen ohne Speichern
                            </a>
                        </div>

                        <div class="form-group dropdown">
                            <button type="button" class="btn btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fa fa-random"></i> Testbenutzer <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a href="@Url.Action("InitTestUser", new {id = Model.Lottery.Id})">
                                        <i class="fa fa-user-plus"></i> Testbenutzer anlegen
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("SubscribeTest", new {id = Model.Lottery.Id})">
                                        <i class="fa fa-pencil"></i> Testbenutzer eintragen
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("ClearTest", new {id = Model.Lottery.Id})">
                                        <i class="fa fa-user-times"></i> Testbenutzer austragen
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">

            @if (ViewBag.Rounds != null)
            {
                <h1>Status: Ausgeführt mit @ViewBag.Rounds Iterationen</h1>
            }
            else
            {
                <h1>Status: Nicht ausgeführt</h1>
            }
            
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4>Lostöpfe</h4>
                    </div>
                    <table class="table table-condensed">
                        <thead>
                            <tr>
                                <th colspan="3">Lehrveranstaltung</th>
                                <th colspan="@nCols2">Vor dem Verteilungsdurchgang</th>
                                <th colspan="@nCols2">Nach dem Verteilungsdurchgang</th>
                            </tr>
                        <tr>
                            <th>Name</th>
                            <th>Lostopf</th>
                            <th><i class="fa fa-cubes"></i></th>
                            <th><i class="fa fa-cubes text-success"></i></th>
                            <th>BQ</th>
                            @for (var i = 1; i <= Model.Lottery.MaxSubscription; i++)
                            {
                                <th>@i</th>
                            }
                            <th><i class="fa fa-cubes text-success"></i></th>
                            @for (var i = 1; i <= Model.Lottery.MaxSubscription; i++)
                            {
                                <th>@i</th>
                            }
                            <th><i class="fa fa-frown-o"></i></th>
                        </tr>
                        </thead>
                        <tbody>
                            @foreach (var lotPot in Model.LotPots.OrderByDescending(x => x.BookingRank))
                            {
                                var seatsRemaining = lotPot.SeatsAvailable - lotPot.Lots.Count(x => !x.Subscription.OnWaitingList);
                                var rowColor = "";
                                if (seatsRemaining == 0)
                                {
                                    rowColor = "success";
                                }
                            <tr class="@rowColor">
                                <td>@lotPot.Course.Name (@lotPot.Course.ShortName)</td>
                                <td>
                                    @lotPot.Name
                                    @if (lotPot.Course.Occurrence.IsCoterie)
                                    {
                                        <i class="fa fa-lock text-danger"></i>
                                    }
                                    else
                                    {
                                        <i class="fa fa-unlock text-success"></i>

                                    }
                                </td>
                                <td>@lotPot.Capacity</td>
                                <td>@lotPot.SeatsAvailable</td>
                                <td>@lotPot.BookingRank.ToString("0%")</td>
                                @for (var i = 1; i <= Model.Lottery.MaxSubscription; i++)
                                {
                                    <td>@lotPot.Lots.Count(x => x.Priority == i)</td>
                                }
                                <td>@seatsRemaining</td>
                                @for (var i = 1; i <= Model.Lottery.MaxSubscription; i++)
                                {
                                    <td>@lotPot.Lots.Count(x => x.Priority == i && x.Subscription.OnWaitingList)</td>
                                }
                                <td>@lotPot.Lots.Count(x => x.Priority == 0)</td>
                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
            
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4>Eingetragene Studierende</h4>
                    </div>
                    <table class="table table-condensed">
                        <thead>
                        <tr>
                            <th rowspan="2">Name</th>
                            <th rowspan="2"><i class="fa fa-book"></i></th>
                            <th rowspan="2"><i class="fa fa-calendar-plus-o"></i></th>
                            <th rowspan="2"><i class="fa fa-user"></i></th>
                            <th rowspan="2"><i class="fa fa-frown-o"></i></th>
                            <th rowspan="2">Bereits erhaltene Plätze</th>
                            <th colspan="@Model.Lottery.MaxSubscription">Wartelisteneinträge (nach Priorität)</th>
                            <th rowspan="2">Pech</th>
                        </tr>
                        <tr>
                                @for (var i = 1; i <= Model.Lottery.MaxSubscription; i++)
                                {
                                    <th>@i</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var student in Model.Games)
                            {
                                var seats = student.Lots.Count(x => !x.Subscription.OnWaitingList);
                                var user = userService.GetUser(student.Game.UserId);

                                <tr>
                                    @if (user == null)
                                    {
                                        <td colspan="3">@student.Game.UserId</td>
                                    }
                                    else
                                    {
                                        <td>@user.FullName</td>
                                        <td>@student.Student.Curriculum.ShortName</td>
                                        <td>@student.Student.FirstSemester.Name</td>
                                    }
                                    @if (seats < student.Game.CoursesWanted)
                                    {
                                        <td class="warning">@seats (@student.Game.CoursesWanted)</td>
                                    }
                                    else if (seats > student.Game.CoursesWanted)
                                    {
                                        <td class="danger">@seats (@student.Game.CoursesWanted)</td>
                                    }
                                    else
                                    {
                                        <td class="success">@seats (@student.Game.CoursesWanted)</td>
                                    }
                                    @if (student.Game.AcceptDefault)
                                    {
                                        <td><i class="fa fa-random"></i></td>
                                    }
                                    else
                                    {
                                        <td><i class="fa fa-times text-danger"></i></td>
                                    }
                                    <td>
                                        @foreach (var seat in student.Seats)
                                        {
                                            if (!seat.Subscription.Priority.HasValue || seat.Subscription.Priority.Value == 0)
                                            {
                                                <div>@seat.Course.ShortName (*)</div>
                                            }
                                            else
                                            {
                                                <div>@seat.Course.ShortName (@seat.Subscription.Priority)</div>
                                            }
                                        }
                                    </td>
                                    @for (var i = 1; i <= Model.Lottery.MaxSubscription; i++)
                                    {
                                        var lot = student.Lots.FirstOrDefault(x => x.Priority == i);

                                        if (lot != null)
                                        {
                                            if (lot.IsTouched)
                                            {
                                                if (lot.IsValid)
                                                {
                                                    <td class="success">@lot.Course.ShortName</td>
                                                }
                                                else
                                                {
                                                    <td class="warning">@lot.Course.ShortName</td>
                                                }
                                            }
                                            else
                                            {
                                                <td class="danger">@lot.Course.ShortName</td>
                                            }
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                    }
                                    <td>
                                        @foreach (var lot in student.Lots.Where(x => x.Priority == 0))
                                        {
                                            <div>@lot.Course.ShortName (@lot.Message)</div>
                                        }
                                        @if (!string.IsNullOrEmpty(student.Message))
                                        {
                                            <div>@student.Message</div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            
            @if (ViewBag.Students != null)
            {
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4>Testbenutzer</h4>
                    </div>
                    <table class="table table-condensed">
                        <thead>
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Studiengang</th>
                            <th>Semester</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var student in ViewBag.Students)
                        {
                            var user = userService.GetUser(student.UserId);
                            iUser++;
                            <tr>
                                <td>@iUser</td>
                                <td>@user.FullName</td>
                                <td>@student.Curriculum.ShortName</td>
                                <td>@student.FirstSemester.Name</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            }

        </div>
    </div>
</div>
