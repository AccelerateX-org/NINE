@using System.Globalization
@using MyStik.TimeTable.Web.Helpers
@using MyStik.TimeTable.Web.Models
@using MyStik.TimeTable.Web.Services
@model MyStik.TimeTable.DataServices.Lottery.DrawingService
@{
    ViewBag.Title = "Status " + Model.Lottery.Name;
    var userService = new UserInfoService();
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h4>Wahlverfahren @Model.Lottery.Name - Ergebnis der Ziehung nach Studierenden</h4>
            </div>
            <div class="list-group">
                <div class="list-group-item">
                    <a href="@Url.Action("Details", new {id=Model.Lottery.Id})" class="btn btn-outline-primary">
                        <i class="fa fa-arrow-left"></i> Zurück
                    </a>
                    <a href="@Url.Action("RawData", new {id=Model.Lottery.Id})" class="btn btn-outline-primary">
                        <i class="fa fa-download"></i> Rohdaten
                    </a>
                </div>
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th rowspan="2">Name</th>
                        <th rowspan="2"><i class="fa fa-book"></i></th>
                        <th rowspan="2"><i class="fa fa-calendar-plus-o"></i></th>
                        <th rowspan="2"><i class="fa fa-bed text-primary"></i></th>
                        <th rowspan="2"><i class="fa fa-frown-o text-primary"></i></th>
                        <th rowspan="2">Vor Losdurchgang bereits vorhandene Plätze</th>
                        <th colspan="@Model.Lottery.MaxSubscription">Lose des Losdurchgangs (nach Priorität)</th>
                    </tr>
                    <tr>
                        @for (var i = 0; i <= Model.Lottery.MaxSubscription; i++)
                        {
                            <th>@i</th>
                        }
                    </tr>

                </thead>
                <tbody>
                    @foreach (var student in Model.Games)
                    {
                        var seats = student.Seats.Count(x => !x.Subscription.OnWaitingList);
                        var user = student.Student != null ? userService.GetUser(student.Student.UserId) : userService.GetUser(student.UserId);

                        <tr>
                            @if (student.Student == null)
                            {
                                <td colspan="3">@user.FullName</td>
                            }
                            else
                            {
                                if (user == null)
                                {
                                    <td>Kein Benutzerkonto</td>
                                }
                                else
                                {
                                    <td>@user.FullName</td>
                                }
                                <td>@student.Student.Curriculum.ShortName</td>
                                <td>@student.Student.FirstSemester.Name</td>
                            }

                            @if (student.LotteryGame != null)
                            {

                                if (seats < student.CoursesWanted)
                                {
                                    <td class="table-warning">@student.CoursesWanted</td>
                                }
                                else if (seats > student.CoursesWanted)
                                {
                                    <td class="table-danger">@student.CoursesWanted</td>
                                }
                                else
                                {
                                    <td class="table-success">@student.CoursesWanted</td>
                                }

                                if (student.AcceptDefault)
                                {
                                    <td><i class="fa fa-random"></i></td>
                                }
                                else
                                {
                                    <td><i class="fa fa-times text-danger"></i></td>
                                }
                            }
                            else
                            {
                                <td></td>
                                <td></td>
                            }

                            <td>
                                @foreach (var seat in student.Seats)
                                {

                                    <div>
                                        @seat.Course.ShortName
                                    <ul class="fa-ul">
                                        <li><i class="fa fa-li fa-clock"></i>@seat.Subscription.TimeStamp</li>
                                        <li><i class="fa fa-li fa-exclamation-circle"></i>Priorität: @seat.Priority</li>
                                        @if (!string.IsNullOrEmpty(seat.Subscription.HostRemark))
                                        {
                                            <li><i class="fa fa-li fa-file"></i>@Html.Raw(seat.Subscription.HostRemark)</li>
                                        }
                                    </ul>
                                </div>
                            }
                            </td>

                            @for (var i = 0; i <= Model.Lottery.MaxSubscription; i++)
                            {
                                var lot = student.Lots.FirstOrDefault(x => x.Priority == i);

                                if (lot != null)
                                {
                                    var txtClass = "";
                                    if (lot.IsTouched)
                                    {
                                        if (lot.Subscription.OnWaitingList)
                                        {
                                            txtClass = "table-warning";
                                        }
                                        else
                                        {
                                            txtClass = "table-success";
                                        }
                                    }
                                    <td class="@txtClass">
                                        <div>
                                            @lot.Course.ShortName
                                        <ul class="fa-ul">
                                            <li><i class="fa fa-li fa-clock"></i>@lot.Subscription.TimeStamp</li>
                                            @if (!string.IsNullOrEmpty(lot.Subscription.HostRemark))
                                            {
                                                <li><i class="fa fa-li fa-file"></i>@Html.Raw(lot.Subscription.HostRemark)</li>
                                            }
                                        </ul>
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td></td>
                            }
                        }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



