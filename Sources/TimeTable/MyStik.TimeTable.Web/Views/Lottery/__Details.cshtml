@model MyStik.TimeTable.DataServices.Lottery.DrawingService
@{
    ViewBag.Title = "Wahlverfahren " + Model.Lottery.Name;
}

<div class="panel panel-default">
    <div class="panel-body bg-fillter-study">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <h1>Wahlverfahren "@Model.Lottery.Name"</h1>
                </div>
            </div>
        </div>
    </div>
</div>

    <div class="panel panel-default panel-menu">
        <div class="panel-body">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-inline">
                            <div class="form-group">
                                <a href="@Url.Action("Index", new {id=Model.Lottery.Semester.Id})" class="btn btn-default">
                                    <i class="fa fa-arrow-left"></i> Zurück
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



<div class="container-fluid">
    <div class="row">
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>
                        <i class="fa fa-info-circle"></i> Beschreibung
                    </h4>
                </div>
                <div class="panel-body">
                    <ul class="fa-ul">
                        <li><i class="fa-li fa fa-university"></i>Veranstalter: @Model.Lottery.Organiser.ShortName</li>
                        @if (Model.Lottery.Owner != null)
                        {
                            <li><i class="fa-li fa fa-user-md"></i>Angelegt von: @Model.Lottery.Owner.FullName</li>
                        }
                        @if (Model.Lottery.IsAvailable)
                        {
                            <li><i class="fa-li fa fa-unlock"></i>Studierenden wird das Wahverfahren angezeigt.</li>
                        }
                        else
                        {
                            <li><i class="fa-li fa fa-lock"></i>Das Wahlverfahren ist für Studierende NICHT sichtbar.</li>
                        }
                        <li><i class="fa-li fa fa-pencil"></i>Studierende können zwischen @Model.Lottery.MinSubscription und @Model.Lottery.MaxSubscription Lehrveranstaltungen auswählen</li>
                        <li><i class="fa-li fa fa-ticket"></i>Studiernende können in @Model.Lottery.MaxConfirm bis @Model.Lottery.MaxExceptionConfirm Lehrveranstaltungen einen Platz erhalten.</li>
                        @if (Model.Lottery.IsActiveFrom.HasValue && Model.Lottery.IsActiveUntil.HasValue)
                        {
                            <li><i class="fa-li fa fa-shopping-cart"></i>Studierende können zwischen @Model.Lottery.IsActiveFrom.Value.ToShortDateString() - @Model.Lottery.IsActiveUntil.Value.ToShortDateString() Lehrveranstaltungen wählen</li>
                        }
                        else
                        {
                            <li><i class="fa-li fa fa-shopping-cart"></i>Studierende können jederzeit Lehrveranstaltungen wählen</li>
                        }
                        @if (Model.Lottery.IsScheduled)
                        {
                            <li><i class="fa-li fa fa-calendar-check-o"></i>Die Verteilungsdurchgänge werden zwischen dem @Model.Lottery.FirstDrawing.ToShortDateString() und @Model.Lottery.LastDrawing.ToShortDateString() jeweils um @Model.Lottery.DrawingTime automatisch ausgeführt.</li>
                        }
                        else
                        {
                            <li><i class="fa-li fa fa-calendar-check-o"></i>Die Verteilungsdurchgänge werden zwischen dem @Model.Lottery.FirstDrawing.ToShortDateString() und @Model.Lottery.LastDrawing.ToShortDateString() jeweils manuell ausgelöst.</li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="panel-default">
                <div class="panel-heading">
                    <h4>
                        <i class="fa fa-bar-chart-o"></i> Status
                    </h4>
                </div>
                <div class="list-group">
                    <a class="list-group-item" href="@Url.Action("Selection", new {id = Model.Lottery.Id})">
                            <h5 class="list-group-item-heading">@Model.Lottery.Occurrences.Count Lehrveranstaltungen</h5>
                        <div class="list-group-item-text">
                            Anzeige der Auswahl (Studierendensicht)
                        </div>
                    </a>
                    <div class="list-group-item list-group-item-info">
                            @if (Model.Lottery.IsScheduled)
                            {
                                if (Model.Lottery.LastDrawing < DateTime.Today)
                                {
                                    <h5 class="list-group-item-heading"><i class="fa fa-cog"></i> Kein Durchlauf mehr</h5>
                                }
                                else
                                {
                                    if (Model.Lottery.FirstDrawing > DateTime.Today)
                                    {
                                    <h5 class="list-group-item-heading"><i class="fa fa-cog"></i> Erster Durchlauf am @Model.Lottery.FirstDrawing.ToShortDateString() um  @Model.Lottery.DrawingTime</h5>
                                    }
                                    else
                                    {
                                    <h5 class="list-group-item-heading"><i class="fa fa-cog"></i> Nächster Durchlauf: @DateTime.Today.ToShortDateString() um  @Model.Lottery.DrawingTime</h5>
                                    }
                                }
                            }
                            else
                            {
                                <h5 class="list-group-item-heading"><i class="fa fa-paw"></i> Manuelle Ausführung</h5>
                                <div class="list-group-item-text">
                                    geplant zwischen @Model.Lottery.FirstDrawing.ToShortDateString() und @Model.Lottery.LastDrawing.ToShortDateString()
                                </div>
                            }
                    </div>
                    <a class="list-group-item" href="@Url.Action("DrawingPots", new {id = Model.Lottery.Id})">
                            <h5 class="list-group-item-heading">@Model.OccupancyRate.ToString("0%") der Plätze sind bereits belegt</h5>
                        <div class="list-group-item-text">
                            Anzeige aller "Lostöpfe"
                        </div>
                    </a>
                    <a class="list-group-item" href="@Url.Action("Students", new {id = Model.Lottery.Id})">
                            <h5 class="list-group-item-heading">@Model.SuccessRate.ToString("0%") der Studierenden haben (mindestens) einen Platz erhalten</h5>
                        <div class="list-group-item-text">
                            Aufschlüsselung nach Studierenden
                        </div>
                    </a>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            @if (ViewBag.UserRight.IsCourseAdmin)
            {
                <div class="panel-default">
                    <div class="panel-heading">
                        <h4>
                            <i class="fa fa-cogs"></i> Verwaltung
                        </h4>
                    </div>
                    <div class="list-group">
                        <a class="list-group-item" href="@Url.Action("Edit", new {id = Model.Lottery.Id})">
                            <div class="list-group-item-heading">
                                <h5><i class="fa fa-cog"></i> Allgemeine Einstellungen</h5>
                            </div>
                            <div class="list-group-item-text">Zeiträume, Einschränken auf Ebene des Wahlverfahrens festlegen</div>
                        </a>
                        <a class="list-group-item" href="@Url.Action("Select", new {id = Model.Lottery.Id})">
                            <div class="list-group-item-heading">
                                <h5><i class="fa fa-list"></i> Zusammensetzung</h5>
                            </div>
                            <div class="list-group-item-text">Auswahl der beteiligten Lehrveranstaltungen</div>
                        </a>
                        <a class="list-group-item" href="@Url.Action("TestRun", new {id = Model.Lottery.Id})">
                            <div class="list-group-item-heading">
                                <h5><i class="fa fa-flask"></i> Testlauf</h5>
                            </div>
                            <div class="list-group-item-text">
                                Verteilung durchführen ohne die Ergebnisse zu speichern. Es werden keine Mails versendet.
                            </div>
                        </a>
                        <a class="list-group-item list-group-item-info" href="@Url.Action("Run", new {id = Model.Lottery.Id})">
                            <div class="list-group-item-heading">
                                <h5><i class="fa fa-play"></i> Durchlauf starten</h5>
                            </div>
                            <div class="list-group-item-text">
                                Verteilung durchführen. Eingetragene Studierende werden per Mail informiert.
                            </div>
                        </a>
                        <a class="list-group-item list-group-item-success" href="@Url.Action("ClearLists", new {id = Model.Lottery.Id})">
                            <div class="list-group-item-heading">
                                <h5><i class="fa fa-check"></i> Wahlverfahren abschliessen</h5>
                            </div>
                            <div class="list-group-item-text">Alle Eintragungen auf Warteliste werden ausgetragen. Eingetragene Studierende werden per Mail informiert.</div>
                        </a>
                        <a class="list-group-item list-group-item-danger" href="@Url.Action("Clearance", new {id = Model.Lottery.Id})">
                            <div class="list-group-item-heading">
                                <h5><i class="fa fa-fire-extinguisher"></i> Bereinigen</h5>
                            </div>
                            <div class="list-group-item-text">Alle Eintragungen ohne Prioritär werden gelöscht. Eingetragene Studierende werden per Mail informiert.</div>
                        </a>
                        <a class="list-group-item list-group-item-danger" href="@Url.Action("Reset", new {id = Model.Lottery.Id})">
                            <div class="list-group-item-heading">
                                <h5><i class="fa fa-bomb"></i> Zurücksetzen</h5>
                            </div>
                            <div class="list-group-item-text">Alle Eintragungen werden zurück auf Warteliste gesetzt. Eingetragene Studierende werden per Mail informiert.</div>
                        </a>
                        <a class="list-group-item list-group-item-danger" href="@Url.Action("Delete", new {id = Model.Lottery.Id})">
                            <div class="list-group-item-heading">
                                <h5><i class="fa fa-trash-o"></i> Löschen</h5>
                            </div>
                            <div class="list-group-item-text">
                                Das Wahlverfahren komplett löschen.
                            </div>
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


