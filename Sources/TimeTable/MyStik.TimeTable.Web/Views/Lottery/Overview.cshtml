@model MyStik.TimeTable.Web.Models.LotteryOverviewModel
@{
    ViewBag.Title = "Wahlverfahren";

    var selectionEnabled = true;
    var prio = 0;
}

<div class="container-fluid">
    <div class="row" style="margin-top: 20px">
        <div class="col-md-8">
            @if (Model.Game != null)
            {
                <!-- Nav tabs -->
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="active">
                        <a href="#home" aria-controls="home" role="tab" data-toggle="tab">
                            <h4>
                                <i class="fa fa-pencil"></i> <span class="hidden-xs hidden-sm">Meine Auswahl</span>
                            </h4>
                        </a>
                    </li>
                    <li role="presentation">
                        <a href="#profile" aria-controls="profile" role="tab" data-toggle="tab">
                            <h4>
                                <i class="fa fa-list"></i> <span class="hidden-xs hidden-sm">Lehrveranstaltungen im Wahlverfahren "@Model.Lottery.Name"</span>
                            </h4>
                        </a>
                    </li>
                </ul>

                <!-- Tab panes -->
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane" id="profile">
                        <div class="panel panel-default">
                            <div class="panel-heading visible-xs visible-sm">
                                <h4>Meine Auswahl</h4>
                            </div>
                            <div class="list-group">
                                @Html.Partial("_CourseList", Model.Courses)
                            </div>
                        </div>

                    </div>
                    <div role="tabpanel" class="tab-pane active" id="home">
                        <div class="panel panel-default">
                            <div class="panel-heading visible-xs visible-sm">
                                <h4>Lehrveranstaltungen im Wahlverfahren "@Model.Lottery.Name"</h4>
                            </div>

                            <div class="list-group">
                                @if (Model.Game.DrawingDate.HasValue)
                                {
                                    <div class="list-group-item list-group-item-success">
                                        <div class="list-group-item-heading">
                                            <h5><i class="fa fa-random"></i> Meine Auswahl wurde im Durchgang vom @Model.Game.DrawingDate.Value.ToShortDateString() berücksichtigt</h5>
                                            <p>Ich möchte @Model.Game.CoursesWanted Lehrveranstaltungen besuchen</p>
                                            @if (Model.Game.AcceptDefault)
                                            {
                                                <p>Ich akzeptiere auch Plätze in anderen Lehrveranstaltungen</p>
                                            }
                                            else
                                            {
                                                <p>Ich akzeptiere nur Plätze in Lehrveranstaltungen, die ich gewählt habe.</p>
                                            }
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="list-group-item list-group-item-warning">
                                        <div class="list-group-item-heading">
                                            <h5><i class="fa fa-random"></i> Bisher wurde meine Auswahl in keinem Durchgang berücksichtigt.</h5>
                                            <p>Ich möchte @Model.Game.CoursesWanted Lehrveranstaltungen besuchen</p>
                                            @if (Model.Game.AcceptDefault)
                                            {
                                                <p>Ich akzeptiere auch Plätze in anderen Lehrveranstaltungen</p>
                                            }
                                            else
                                            {
                                                <p>Ich akzeptiere nur Plätze in Lehrveranstaltungen, die ich gewählt habe.</p>
                                            }
                                        </div>
                                    </div>

                                }
                                @foreach (var course in Model.CoursesSelected.Where(x => x.Subscription.Priority > 0).OrderBy(x => x.Subscription.Priority))
                                {
                                    <div class="list-group-item">
                                        <div class="row">
                                            <div class="col-md-1">
                                                @if (course.Subscription.OnWaitingList)
                                                {
                                                    <i class="fa fa-hourglass-half"></i>
                                                    <div>Auf Warteliste</div>
                                                }
                                                else
                                                {
                                                    <i class="fa fa-user"></i>
                                                    <div>Platz erhalten</div>
                                                }
                                            </div>
                                            <div class="col-md-8">
                                                <div class="list-group-item-heading">
                                                    <h5>Priorität @course.Subscription.Priority: @course.Course.Name</h5>
                                                </div>
                                                <div class="list-group-item-text">
                                                    <ul class="fa-ul">
                                                        @if (Model.Lottery.LoINeeded)
                                                        {
                                                            if (string.IsNullOrEmpty(course.Subscription.SubscriberRemark))
                                                            {
                                                                <li>Noch kein Bewerbungsschreiben abgegeben</li>
                                                            }
                                                            else
                                                            {
                                                                <li>Bewerbungsschreiben abgegeben</li>
                                                            }
                                                        }
                                                        <li>Weitere Infos</li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="btn-group-vertical btn-block">
                                                    @if (Model.Lottery.LoINeeded)
                                                    {
                                                        <a class="btn btn-default btn-block" href="@Url.Action("EditReference", new {lotteryID = Model.Lottery.Id, courseId = course.Course.Id})">Bewerbungsschreiben</a>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (Model.CoursesSelected.Any(x => x.Subscription.Priority == 0))
                                {
                                    <div class="list-group-item">
                                        <div class="list-group-item-heading disabled">
                                            <h5>Folgende Lehrveranstaltung(en) habe ich nicht gewählt, sondern wurden mir zugeteilt:</h5>
                                        </div>
                                    </div>
                                    foreach (var course in Model.CoursesSelected.Where(x => x.Subscription.Priority == 0))
                                     {
                                         <div class="list-group-item">
                                             <div class="row">
                                                 <div class="col-md-1">
                                                     @if (course.Subscription.OnWaitingList)
                                                     {
                                                         <i class="fa fa-hourglass-half"></i>
                                                         <div>Auf Warteliste</div>
                                                     }
                                                     else
                                                     {
                                                         <i class="fa fa-user"></i>
                                                         <div>Platz erhalten</div>
                                                     }
                                                 </div>
                                                 <div class="col-md-8">
                                                     <div class="list-group-item-heading">
                                                         <h5>Priorität @course.Subscription.Priority: @course.Course.Name</h5>
                                                     </div>
                                                     <div class="list-group-item-text">
                                                         <ul class="fa-ul">
                                                             @if (Model.Lottery.LoINeeded)
                                                             {
                                                                 if (string.IsNullOrEmpty(course.Subscription.SubscriberRemark))
                                                                 {
                                                                     <li>Noch kein Bewerbungsschreiben abgegeben</li>
                                                                 }
                                                                 else
                                                                 {
                                                                     <li>Bewerbungsschreiben abgegeben</li>
                                                                 }
                                                             }
                                                             <li>Weitere Infos</li>
                                                         </ul>
                                                     </div>
                                                 </div>
                                                 <div class="col-md-3">
                                                     <div class="btn-group-vertical btn-block">
                                                         @if (Model.Lottery.LoINeeded)
                                                         {
                                                             <a class="btn btn-default btn-block" href="@Url.Action("EditReference", new {lotteryID = Model.Lottery.Id, courseId = course.Course.Id})">Bewerbungsschreiben</a>
                                                         }
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                     }
                                }
                            </div>
                        </div>
                    </div>

                </div>
            }
            else
            {

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4><i class="fa fa-list"></i> Lehrveranstaltungen im Wahlverfahren "@Model.Lottery.Name"</h4>
                    </div>
                    <div class="list-group">
                        @Html.Partial("_CourseList", Model.Courses)
                    </div>
                </div>
            }
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4><i class="fa fa-cogs"></i> Ablauf des Wahlverfahrens</h4>
                </div>
                <div class="list-group">
                    <div class="list-group-item list-group-item-danger">
                        <div class="list-group-item-heading">
                            <h5>Wichtige Hinweise</h5>
                        </div>
                        <div class="list-group-item-text">
                            <ul>
                                <li>Das Wahlverfahren ist keine bzw. ersetzt keine Prüfungsanmeldung.</li>
                                <li>Lehrende können jederzeit in die Platzvergabe eingreifen (z.B. "Voreinschreibung"). Bei Unstimmigkeiten bitte direkt an die jeweiligen Lehrenden wenden.</li>
                            </ul>
                        </div>
                    </div>
                    <div class="list-group-item">
                        <div class="list-group-item-heading">
                            <h5>Rahmenbedingungen</h5>
                        </div>
                        <div class="list-group-item-text">
                            <ul>
                                <li>Ich muss mindestens @Model.Lottery.MinSubscription Lehrveranstaltungen auswählen</li>
                                <li>Ich kann maximal @Model.Lottery.MaxSubscription Lehrveranstaltungen auswählen</li>
                                <li>Ich kann in bis zu @Model.Lottery.MaxExceptionConfirm Lehrveranstaltungen einen Platz erhalten</li>
                                @if (Model.Lottery.IsActiveFrom.HasValue && Model.Lottery.IsActiveUntil.HasValue)
                                {
                                    <li>Ich kann von @Model.Lottery.IsActiveFrom.Value.ToShortDateString() bis @Model.Lottery.IsActiveUntil.Value.ToShortDateString() Lehrveranstaltungen wählen</li>
                                }
                                else
                                {
                                    <li>Ich kann laufend Lehrveranstaltungen wählen</li>
                                }
                                <li>Ich kann meine Auswahl während des oben angegeben Zeitraums verändern. Ausnahme: Meine Auswahl ist in einem Verteilungsdurchgang berücksichtigt worden. Dann kann ich meine Auswahl nicht mehr ändern.</li>
                                <li>Die Durchgänge zur Verteilung der Plätze findet zwischen dem @Model.Lottery.FirstDrawing.ToShortDateString() und @Model.Lottery.LastDrawing.ToShortDateString() statt.</li>
                                @if (Model.Lottery.LoINeeded)
                                {
                                    <li>Ich kann Bewerbungsschreiben einreichen.</li>
                                }
                            </ul>
                        </div>
                    </div>
                    @{
                        selectionEnabled = false;

                        if (Model.Lottery.IsActiveFrom.HasValue && Model.Lottery.IsActiveUntil.HasValue)
                        {
                            if (Model.Lottery.IsActiveFrom <= DateTime.Now && DateTime.Now < Model.Lottery.IsActiveUntil.Value.AddDays(1))
                            {
                                selectionEnabled = true;
                            }
                        }
                    }

                    @if (selectionEnabled)
                    {
                        if (Model.Game == null)
                        {
                            <a class="list-group-item list-group-item-info" href="@Url.Action("SelectCourses", new {id = Model.Lottery.Id})">
                                <h5 class="list-group-item-heading"><i class="fa fa-shopping-cart"></i> Auswahl starten</h5>
                                <div class="list-group-item-text">
                                    Bisher habe ich noch keine Lehrveranstaltungen gewählt
                                </div>
                            </a>
                        }
                        else
                        {
                            if (!Model.Game.DrawingDate.HasValue)
                            {
                                <a class="list-group-item" href="@Url.Action("SelectCourses", new {id = Model.Lottery.Id})">
                                    <h5 class="list-group-item-heading"><i class="fa fa-refresh"></i> Auswahl ändern</h5>
                                    <div class="list-group-item-text">
                                        Alle meine bisherigen Einträge gehen verloren. Ich kann meine Einstellungen ändern.
                                    </div>
                                </a>
                            }
                            else
                            {
                                if (!Model.CoursesSelected.Any() || Model.CoursesSelected.All(x => x.Subscription.OnWaitingList))
                                {
                                    <a class="list-group-item" href="@Url.Action("SelectCourses", new {id = Model.Lottery.Id})">
                                        <h5 class="list-group-item-heading"><i class="fa fa-refresh"></i> Auswahl starten</h5>
                                        <div class="list-group-item-text">
                                            Ich habe keinen Platz erhalten und kann daher erneut wählen.
                                        </div>
                                    </a>
                                }
                                else
                                {
                                    <div class="list-group-item">
                                        <h5 class="list-group-item-heading"><i class="fa fa-ban"></i> Änderungen nicht mehr möglich</h5>
                                        <div class="list-group-item-text">
                                            Meine Auswahl wurde bereits berücksichtigt. Ich kann keine Änderungen mehr vornehmen.
                                        </div>
                                    </div>
                                }

                            }
                        }
                    }
                    else
                    {
                        <div class="list-group-item">
                            <h5 class="list-group-item-heading"><i class="fa fa-shopping-cart"></i> Auswahl nicht möglich</h5>
                            <div class="list-group-item-text">
                                Der Zeitraum für die Auswahl hat noch nicht begonnen oder ist bereits abgelaufen
                            </div>
                        </div>

                    }

                    @if (Model.Game != null)
                    {
                        if (Model.Game.DrawingDate.HasValue)
                        {
                            if (Model.CoursesSelected.Any())
                            {
                                <a class="list-group-item" href="@Url.Action("ClearSelection", new {id = Model.Lottery.Id})">
                                    <h5 class="list-group-item-heading"><i class="fa fa-check"></i> Auswahl bereinigen</h5>
                                    <div class="list-group-item-text">
                                        Ich bin mit den erhaltenen Plätzen zufrieden und möchte mich aus allen Wartelisten austragen.
                                    </div>
                                </a>
                            }
                            else
                            {
                                <a class="list-group-item" href="@Url.Action("RemoveSelection", new {id = Model.Lottery.Id})">
                                    <h5 class="list-group-item-heading"><i class="fa fa-trash-o"></i> Teilnahme löschen</h5>
                                    <div class="list-group-item-text">
                                        Teilnahme am Wahlverfahren löschen.
                                    </div>
                                </a>
                            }
                        }
                        else
                        {
                            <a class="list-group-item" href="@Url.Action("RemoveSelection", new {id = Model.Lottery.Id})">
                                <h5 class="list-group-item-heading"><i class="fa fa-trash-o"></i> Auswahl löschen</h5>
                                <div class="list-group-item-text">
                                    Teilnahme am Wahlverfahren löschen. Alle meine Plätze in diesem Wahlverfahren gehen verloren.
                                </div>
                            </a>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

