@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.WPMAdminModel
@{
    ViewBag.Title = "Platzverlosung";
}

@section styles{
    <link rel="stylesheet" href="@Url.Content("~/Assets/global/plugins/ion.rangeslider/css/ion.rangeSlider.css")" />
    <link rel="stylesheet" href="@Url.Content("~/Assets/global/plugins/ion.rangeslider/css/ion.rangeSlider.skinFlat.css")" />
}

<div class="panel panel-default">
    <div class="panel-body bg-fillter-study">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <h1>Platzverlosung @Model.Lottery.Name</h1>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
<div class="row">
    <div class="col-md-6">
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    <span class="caption-subject bold">Rahmenbedingungen</span>
                </div>
            </div>
            <div class="portlet-body">
                <p>In dieser Lotterie kann ich maximal <strong>@Model.Lottery.MaxConfirm</strong> Lehrveranstaltungen belegen.</p>
                @if (Model.Confirmed >= Model.Lottery.MaxConfirm)
                {
                    <p>Ich habe die maximale Anzahl an Plätzen belegt.</p>
                    <p>Wenn ich eine Reservierung annehmen möchte, obwohl die maximale Zahl bereits erreicht ist, dann muss ich zuerst einen bereits bestätigten Platz zurückgeben.
                        Die Reservierung bleibt bestehen.</p>
                }
                else
                {
                    <p>Bisher habe ich erst @Model.Confirmed Plätze belegt.</p>
                }
                <p>Alle Reservierungen verfallen bei der nächsten Verlosung. Die Verlosungen finden zwischen @Model.Lottery.FirstDrawing.ToShortDateString() und @Model.Lottery.LastDrawing.ToShortDateString() täglich statt.</p>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    <span class="caption-subject bold">Legende / Symbole</span>
                </div>
            </div>
            <div class="portlet-body">
                <div class="row">
                    <div class="col-md-6">
                        <h4>Spalte Status</h4>
                        <ul class="fa-ul">
                            <li><i class="fa-li fa fa-group text-success"></i>Ich habe einen Platz</li>
                            <li><i class="fa-li fa fa-ticket text-info"></i>Ich habe eine Reservierung</li>
                            <li><i class="fa-li fa fa-hourglass"></i>Ich bin auf der Warteliste</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h4>Spaltenüberschriften</h4>
                        <ul class="fa-ul">
                            <li><i class="fa-li fa fa-cubes"></i>Anzahl der Plätze (Kapazität)</li>
                            <li><i class="fa-li fa fa-group"></i>Anzahl der belegten Plätze (Teilnehmer)</li>
                            <li><i class="fa-li fa fa-ticket"></i>Anzahl der Reservierungen</li>
                            <li><i class="fa-li fa fa-hourglass"></i>Anzahl auf Warteliste</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    <span class="caption-subject bold">Alle Lehrveranstaltungen und mein Status</span>
                </div>
            </div>
            <div class="portlet-body">
                <table class="table table-condensed">
                    <thead>
                    <tr>
                        <th>Status</th>
                        <th>Bezeichnung</th>
                        <th>Dozent(en)</th>
                        <th>Zeitraum</th>
                        <th><i class="fa fa-cubes"></i></th>
                        <th><i class="fa fa-group"></i></th>
                        <th><i class="fa fa-ticket"></i></th>
                        <th><i class="fa fa-hourglass-half"></i></th>
                        <th></th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var subscription in Model.Subscriptions.Where(s => s.Subscription.OnWaitingList == false && s.Subscription.IsConfirmed))
                    {
                        <tr>
                            <td><i class="fa fa-group text-success"></i></td>
                            <td>@Html.ActionLink(subscription.Course.Name + " (" + subscription.Course.ShortName + ")", "Index", "Course", new {id = subscription.Course.Id}, null)</td>
                            <td>@Html.LecturerList(subscription.Summary.Lecturers)</td>
                            <td>@Html.DateList(subscription.Summary.Dates)</td>
                            @if (!subscription.IsRestricted)
                            {
                                <td colspan="4">Keine Platzbeschränkung</td>
                            }
                            else
                            {
                                <td>@subscription.Capacity</td>
                                <td>@subscription.Participients</td>
                                <td>@subscription.Pending</td>
                                <td>@subscription.Waiting</td>
                            }
                            <td>
                                <button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#myModal" 
                                        data-lotteryid="@Model.Lottery.Id" data-occurrencid="@subscription.Subscription.Occurrence.Id">
                                    Platz zurückgeben
                                </button>                                    
                            </td>
                            <td></td>
                        </tr>
                    }

                    @foreach (var subscription in Model.Subscriptions.Where(s => s.Subscription.OnWaitingList == false && s.Subscription.IsConfirmed == false))
                    {
                        <tr>
                            <td><i class="fa fa-ticket text-info"></i></td>
                            <td>@Html.ActionLink(subscription.Course.Name + " (" + subscription.Course.ShortName + ")", "Index", "Course", new { id = subscription.Course.Id }, null)</td>
                            <td>@Html.LecturerList(subscription.Summary.Lecturers)</td>
                            <td>@Html.DateList(subscription.Summary.Dates)</td>
                            @if (!subscription.IsRestricted)
                            {
                                <td colspan="4">Keine Platzbeschränkung</td>
                            }
                            else
                            {
                                <td>@subscription.Capacity</td>
                                <td>@subscription.Participients</td>
                                <td>@subscription.Pending</td>
                                <td>@subscription.Waiting</td>
                            }
                            @if (Model.Confirmed < Model.Lottery.MaxConfirm)
                            {
                                <td>
                                    <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#myModal2" 
                                            data-lotteryid="@Model.Lottery.Id" data-occurrencid="@subscription.Subscription.Occurrence.Id">
                                        Reservierung bestätigen
                                    </button>                                    
                                </td>
                                <td></td>
                            }
                            else
                            {
                                <td>
                                    @Html.ActionButton("fa-times text-danger",
                                        "Austragen", "Discharge", "Lottery",
                                        new { occId = subscription.Subscription.Occurrence.Id, lotId = Model.Lottery.Id }, new { @class = "btn btn-default btn-sm" })
                                </td>
                                <td>Hab bereits die max. Anzahl an Reservierungen bestätigt. Kann keine weiteren Reservierungen mehr bestätigen</td>
                            }
                        </tr>
                    }



                    @foreach (var subscription in Model.Subscriptions.Where(s => s.Subscription.OnWaitingList == true))
                    {
                        if (subscription.IsValid)
                        {
                            // var myLapCount = subscription.Subscription.LapCount;
                            // var myLotPot = subscription.Subscription.Occurrence.Subscriptions.Count(x => x.LapCount >= myLapCount && x.OnWaitingList);

                            <tr>
                                <td><i class="fa fa-hourglass-half"></i></td>
                                <td>@Html.ActionLink(subscription.Course.Name + " (" + subscription.Course.ShortName + ")", "Index", "Course", new {id = subscription.Course.Id}, null)</td>
                                <td>@Html.LecturerList(subscription.Summary.Lecturers)</td>
                                <td>@Html.DateList(subscription.Summary.Dates)</td>
                                @if (!subscription.IsRestricted)
                                {
                                    <td colspan="4">Keine Platzbeschränkung</td>
                                }
                                else
                                {
                                    <td>@subscription.Capacity</td>
                                    <td>@subscription.Participients</td>
                                    <td>@subscription.Pending</td>
                                    <td>@subscription.Waiting</td>
                                }
                                <td>
                                    @Html.ActionButton("fa-times text-danger",
                                        "Austragen", "Discharge", "Lottery",
                                        new {occId = subscription.Subscription.Occurrence.Id, lotId = Model.Lottery.Id}, new {@class = "btn btn-default btn-sm"})
                                </td>
                                <td></td>
                            </tr>
                        }
                        else
                        {
                            <tr class="danger">
                                <td></td>
                                <td>@Html.ActionLink(subscription.Course.Name + " (" + subscription.Course.ShortName + ")", "Index", "Course", new {id = subscription.Course.Id}, null)</td>
                                <td colspan="6">Das Fach gehört nicht zum meinem Studiengang. Diese Eintragung nimmt daher nicht an der Platzverlosung teil.</td>
                                <td>
                                    @Html.ActionButton("fa-times text-danger",
                                        "Austragen", "Discharge", "Lottery",
                                        new {occId = subscription.Subscription.Occurrence.Id, lotId = Model.Lottery.Id}, new {@class = "btn btn-default btn-sm"})
                                </td>
                                <td></td>
                            </tr>
                        }
                    }
                    @foreach (var subscription in Model.Available)
                    {
                        <tr>
                            <td></td>
                            <td>@Html.ActionLink(subscription.Course.Name + " (" + subscription.Course.ShortName + ")", "Index", "Course", new { id = subscription.Course.Id }, null)</td>
                            <td>@Html.LecturerList(subscription.Summary.Lecturers)</td>
                            <td>@Html.DateList(subscription.Summary.Dates)</td>
                            @if (!subscription.IsRestricted)
                            {
                                <td colspan="4">Keine Platzbeschränkung</td>
                            }
                            else
                            {
                                <td>@subscription.Capacity</td>
                                <td>@subscription.Participients</td>
                                <td>@subscription.Pending</td>
                                <td>@subscription.Waiting</td>
                            }
                            <td>
                                @Html.ActionButton("fa-pencil",
                                    "Eintragen", "Subscribe", "Lottery",
                                    new { occId = subscription.Course.Occurrence.Id, lotId = Model.Lottery.Id }, new { @class = "btn btn-default btn-sm" })
                            </td>
                            <td></td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
</div>




<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Platz zurückgeben</h4>
            </div>
            <div class="modal-body">
                <p>Wenn ich den Platz zurückgebe, dann rutsche ich an das Ende der Warteliste. Das verringert die Chancen später wieder eine Reserverierung zu erhalten.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Abbrechen</button>
                <a id="modalBtnRelease" href="" class="btn btn-danger"><i class="fa fa-trash-o"></i> Ich will den Platz zurückgeben</a>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Reservierung bestätigen</h4>
            </div>
            <div class="modal-body">
                <p>Wenn ich diese Reservierung bestätige, dann habe ich mir einen Platz gesichert. Ich kann unter Umständen keine weitere Reservierung mehr in dieser Lotterie bestätigen.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Abbrechen</button>
                <a id="modalBtnConfirm" href="" class="btn btn-success"><i class="fa fa-pencil"></i> Ich will die Reservierung bestätigen</a>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>
        $('#myModal').on('show.bs.modal',
            function(event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var lotteryId = button.data('lotteryid'); // Extract info from data-* attributes
                var occurrenceId = button.data('occurrencid'); // Extract info from data-* attributes

                // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                //var modal = $('#modelBtnConfirm');
                //modal.find('#modelBtnConfirm').
                var href = '/Lottery/Release?lotId=' + lotteryId + '&occId=' + occurrenceId;
                $('#modalBtnRelease').attr('href', href);
            })
    </script>

    <script>
        $('#myModal2').on('show.bs.modal',
            function(event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var lotteryId = button.data('lotteryid'); // Extract info from data-* attributes
                var occurrenceId = button.data('occurrencid'); // Extract info from data-* attributes

                // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                //var modal = $('#modelBtnConfirm');
                //modal.find('#modelBtnConfirm').
                var href = '/Lottery/Confirm?lotId=' + lotteryId + '&occId=' + occurrenceId;
                $('#modalBtnConfirm').attr('href', href);
            })
    </script>


}