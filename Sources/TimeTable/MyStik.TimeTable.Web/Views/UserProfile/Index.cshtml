@model MyStik.TimeTable.Web.Models.UserProfileViewModel
@{
    ViewBag.Title = Resources.SettingsString;
    var homeActive = "";
    var semesterActive = "";
}

<div class="panel panel-default">
    <div class="panel-body bg-fillter-hm">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <h1>@Resources.MySettings</h1>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-12">
                    <div class="portlet light bordered">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="fa fa-user"></i> @Resources.PersonalDataHeading
                            </div>
                        </div>
                        <div class="portlet-body">
                            @using (Ajax.BeginForm("SaveContactData", null,
                                new AjaxOptions()
                                {
                                    HttpMethod = "Post",
                                    OnSuccess = "onSaved"
                                }, new {@role = "form", @class = "form-horizontal"}))
                            {
                                @Html.ValidationSummary(true, "", new {@class = "alert alert-danger"})

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Profile.FirstName, new {@class="col-sm-3 control-label"})
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Profile.FirstName, new { @class = "form-control", placeholder = Resources.RegisterFirstNamePlaceholder })
                                        @Html.ValidationMessageFor(m => m.Profile.FirstName)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Profile.LastName, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Profile.LastName, new {@class = "form-control", placeholder = Resources.RegisterLastNamePlaceholder})
                                        @Html.ValidationMessageFor(m => m.Profile.LastName)
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-sm-offset-3 col-sm-9">

                                        <button type="submit" class="btn btn-default"><i class="fa fa-save"></i> @Resources.SaveButton</button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">

                    <div class="portlet light bordered">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="fa fa-envelope-o"></i> @Resources.CommunicationSettingsHeading
                            </div>
                        </div>
                        <div class="portlet-body">
                            @using (Ajax.BeginForm("SaveMsgData", null,
                            new AjaxOptions()
                            {
                                HttpMethod = "Post",
                                OnSuccess = "onSaved"
                            }, new {@role = "form"}))
                        {
                                @Html.ValidationSummary(true, "", new {@class = "alert alert-danger"})
                                
                                <div class="alert alert-info">
                                    <strong>Hinweis:</strong> Über die Funktion "Aktuelles / Mailing" werden unregelmäßig alle Art von Informationen rund um das Studium versendet, z.B. vom Sekretariat oder der Fachschaft.
                                    Diese "unwichtigen" E-Mails erhalte ich nur, wenn ích das Häckchen unten setze. Wichtige E-Mails z.B. zur Prüfungsanmeldung erhalte ich unabhängig davon in jedem Fall.
                                </div>

                                <div class="checkbox">
                                    @Html.CheckBoxFor(m => m.MsgProfile.LikeEmailOnGlobalLevel)
                                    <label for="MsgProfile_LikeEmailOnGlobalLevel">@Resources.SetMailingSettingCheckbox</label>
                                </div>
                                <button type="submit" class="btn btn-default">@Resources.SaveButton</button>
                        }
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">

                    <div class="portlet light bordered">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="fa fa-mobile"></i> @Resources.UserDevicesControlHeading
                            </div>
                        </div>
                        <div class="portlet-body" id="UserDevicesDiv">

                            @if (!Model.UserDevices.Any())
                            {
                                <p>@Resources.NoDeviceRegisteredMessage</p>
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    <strong>Hinweis:</strong> Bei Nutzung der fillter Apps werden an die hier aufgezählten und mit Häckchen markierten Geräte Push-Notifications versendet.
                                </div>
                                <div id="SavedDiv"></div>
                                <div>
                                    @Html.Partial("_UserDevices", Model)
                                </div>
                                <button onclick="saveUserDevices()" class="btn btn-default">@Resources.SaveButton</button>
                            }

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">

                    <div class="portlet light bordered">
                        <div class="portlet-title  tabbable-line">
                            <div class="caption">
                                <i class="fa fa-feed"></i> @Resources.iCalString
                            </div>
                            <ul class="nav nav-tabs">
                                <li>
                                    <a href="#portlet_tab2" data-toggle="tab"> @Resources.FileString</a>
                                </li>
                                <li class="active">
                                    <a href="#portlet_tab1" data-toggle="tab"> @Resources.FeedString </a>
                                </li>
                            </ul>
                        </div>
                        <div class="portlet-body">
                            <div class="tab-content">
                                <div class="tab-pane active" id="portlet_tab1">
                                    <div class="alert alert-info">
                                        <p>@Resources.iCalFeedExplanation</p>
                                    </div>
                                    <div>@Resources.iCalFeedURL: <span class="text-primary">@Url.Action("Feed", "Calendar", new {token = ViewBag.CalendarToken}, "https")</span></div>
                                </div>
                                <div class="tab-pane" id="portlet_tab2">

                                    <strong>iCal_Datei:</strong> Die iCal-Datei läßt sich in verschiedene Mailprogramme einlesen, z.B. MS-Outlook.
                                    <div class="alert alert-info">
                                        <strong>Hinweis:</strong> Die iCal Datei enthält nur die Termine zum Zeitpunkt des Downloads. Wer ständig auf dem laufenden gehalten werden möchte, kann den iCal-Feed verwenden.
                                    </div>
                                    <a href="@Url.Action("File", "Calendar")" class="btn btn-default"><i class="fa fa-download text-success"></i> @Resources.iCalFileDownload <strong>@ViewBag.CalendarPeriod</strong></a>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts
{
    <script type="text/javascript">

        function onSaved() {
            alert("Gespeichert");
        }

        function saveUserDevices () {
            var list = $("#UserDevicesDiv > div > table > tbody > tr input[type='checkbox']").get();
            var n = list.length;

            if (n > 0) {

                var userDeviceList = new Array();

                for (var i = 0; i < n; i++) {
                    var device = new Array();
                    device[0] = list[i].id;
                    device[1] = list[i].checked;
                    userDeviceList.push(device);
                }

                $.ajax(
                {
                    type: "POST",
                    url: "@Url.Action("SaveUserDeviceData", "UserProfile")",
                    data: {
                        deviceList: userDeviceList
                    },
                    success: function (data) {
                        $('#UserDevicesTable').html(data);
                        $('#SavedDiv').html("<div class='note note-success'>Die Geräteeinstellungen wurden gespeichert!</div>")

                    }
                });
            }
        };

        function toggleDateCheck(elem) {
            // das elem ist das HTML-Element
            // aus dem mache ich ein jQuery Element
            // dann erst kann ich die DOM Eigenschaft über attr ändern
            // damit sie später auch wieder über jQuery ausgewertet werden kann
            $("#" + elem.id).attr("checked", elem.checked);
        }



    </script>
}
