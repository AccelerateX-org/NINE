@model MyStik.TimeTable.Web.Models.UserProfileViewModel
@{
    ViewBag.Title = Resources.SettingsString;
    var homeActive = "";
    var semesterActive = "";
}


@section styles {
    <link href="@Url.Content("~/Assets/libs/dropzone/dropzone.css")" rel="stylesheet" type="text/css" />

}


<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h4>Mein Profil</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-12">
                        <h5>Persönliche Daten</h5>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @using (Ajax.BeginForm("SaveContactData", null,
                            new AjaxOptions()
                            {
                                HttpMethod = "Post",
                                OnSuccess = "onSaved"
                            }, new { @role = "form" }))
                        {
                            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                            if (ViewBag.IsMember)
                            {
                                <div class="form-floating mb-3">
                                    @Html.TextBoxFor(m => m.Profile.Title, new { @class = "form-control", placeholder = "akad. Titel" })
                                    @Html.LabelFor(m => m.Profile.Title)
                                    @Html.ValidationMessageFor(m => m.Profile.Title)
                                </div>
                            }

                            <div class="form-floating mb-3">
                                @Html.TextBoxFor(m => m.Profile.FirstName, new { @class = "form-control", placeholder = Resources.RegisterFirstNamePlaceholder })
                                @Html.LabelFor(m => m.Profile.FirstName)
                                @Html.ValidationMessageFor(m => m.Profile.FirstName)
                            </div>

                            <div class="form-floating mb-3">
                                @Html.TextBoxFor(m => m.Profile.LastName, new { @class = "form-control", placeholder = Resources.RegisterFirstNamePlaceholder })
                                @Html.LabelFor(m => m.Profile.LastName)
                                @Html.ValidationMessageFor(m => m.Profile.LastName)
                            </div>



                            <div class="mb-3">
                                <button type="submit" class="btn btn-outline-primary"><i class="bi-save"></i> @Resources.SaveButton</button>
                            </div>
                        }
                        <div>@Model.Profile.Email</div>
                    </div>
                    <div class="col-md-4">
                        @if (ViewBag.HasImage == true)
                        {
                            <img src="@Url.Action("GetProfileImage")" class="card-img-top" />
                            <a href="@Url.Action("DeleteProfileImage")" class="btn btn-outline-primary"><i class="bi-trash"></i> Profilbild löschen</a>
                        }
                        else
                        {
                            <p>Profilbild hochladen</p>
                            <form id="formDrop" action="@Url.Action("UploadProfileImage", "Candidature")" class="dropzone">
                            </form>
                            <a href="@Url.Action("Index")" class="btn btn-outline-primary"><i class="fas fa-sync"></i> Seite aktualisieren / Hochgeladenes Bild anzeigen</a>
                        }


                    </div>
                </div>
                <div class="row">
                    <hr />
                    <div class="col-12">
                        <h5>@Resources.CommunicationSettingsHeading</h5>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        @using (Ajax.BeginForm("SaveMsgData", null,
                            new AjaxOptions()
                            {
                                HttpMethod = "Post",
                                OnSuccess = "onSaved"
                            }, new { @role = "form" }))
                        {
                            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                            <div class="alert alert-info">
                                <strong>Hinweis:</strong> Über die Funktion "Aktuelles / Mailing" werden unregelmäßig alle Art von Informationen rund um das Studium versendet, z.B. vom Sekretariat oder der Fachschaft.
                                Diese "unwichtigen" E-Mails erhalte ich nur, wenn ích das Häckchen unten setze. Wichtige E-Mails z.B. zur Prüfungsanmeldung erhalte ich unabhängig davon in jedem Fall.
                            </div>

                            <div class="mb-3">
                                @Html.CheckBoxFor(m => m.MsgProfile.LikeEmailOnGlobalLevel, new { @class = "form-check-input" })
                                <label for="MsgProfile_LikeEmailOnGlobalLevel">@Resources.SetMailingSettingCheckbox</label>
                            </div>
                            <div class="mb-3">
                                <button type="submit" class="btn btn-outline-primary"><i class="bi-save"></i> @Resources.SaveButton</button>
                            </div>
                        }


                    </div>
                </div>


                <div class="row">
                    <hr />
                    <div class="col-12">
                        <h5>Persönlicher Kalender</h5>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div>@Resources.iCalFeedURL: <span class="text-primary">@Url.Action("Feed", "Calendar", new { token = ViewBag.CalendarToken }, "https")</span></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="alert alert-info">
                            <p>@Resources.iCalFeedExplanation</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="list-group">
                        @foreach (var device in Model.UserDevices)
                        {
                            <div class="list-group-item">
                                <div>@device.DeviceId</div>
                                <div>@device.DeviceName</div>
                                <a href="@Url.Action("DeleteDevice", new { id = device.Id })">Löschen</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts
{
    <script type="text/javascript">

        function onSaved() {
            alert("Gespeichert");
        }

        function saveUserDevices () {
            var list = $("#UserDevicesDiv > div > table > tbody > tr input[type='checkbox']").get();
            var n = list.length;

            if (n > 0) {

                var userDeviceList = new Array();

                for (var i = 0; i < n; i++) {
                    var device = new Array();
                    device[0] = list[i].id;
                    device[1] = list[i].checked;
                    userDeviceList.push(device);
                }

                $.ajax(
                    {
                        type: "POST",
                        url: "@Url.Action("SaveUserDeviceData", "UserProfile")",
                        data: {
                            deviceList: userDeviceList
                        },
                        success: function (data) {
                            $('#UserDevicesTable').html(data);
                            $('#SavedDiv').html("<div class='note note-success'>Die Geräteeinstellungen wurden gespeichert!</div>")

                        }
                    });
            }
        };

        function toggleDateCheck(elem) {
            // das elem ist das HTML-Element
            // aus dem mache ich ein jQuery Element
            // dann erst kann ich die DOM Eigenschaft über attr ändern
            // damit sie später auch wieder über jQuery ausgewertet werden kann
            $("#" + elem.id).attr("checked", elem.checked);
        }



    </script>

    <script src="@Url.Content("~/Assets/libs/dropzone/dropzone.js")" type="text/javascript"></script>

    <script>

        Dropzone.options.formDrop = {
            acceptedFiles: '.png,.jpg,image/*',
            capture: 'camera',
            maxFiles: 1,
            parallelUploads: 1,
            dictDefaultMessage: 'Ablagebereich für das Profilbild'
        };
    </script>

}
