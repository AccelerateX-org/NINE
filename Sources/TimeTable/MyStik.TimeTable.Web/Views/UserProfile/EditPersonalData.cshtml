@model MyStik.TimeTable.Web.Models.ProfileViewModel
@{
    ViewBag.Title = "Persönliche Daten";
}

@section styles {
    <link href="@Url.Content("~/Assets/libs/dropzone/dropzone.css")" rel="stylesheet" type="text/css" />

}

@section scripts
{
    <script type="text/javascript">

        function onSaved() {
            alert("Gespeichert");
        }

        function saveUserDevices () {
            var list = $("#UserDevicesDiv > div > table > tbody > tr input[type='checkbox']").get();
            var n = list.length;

            if (n > 0) {

                var userDeviceList = new Array();

                for (var i = 0; i < n; i++) {
                    var device = new Array();
                    device[0] = list[i].id;
                    device[1] = list[i].checked;
                    userDeviceList.push(device);
                }

                $.ajax(
                    {
                        type: "POST",
                        url: "@Url.Action("SaveUserDeviceData", "UserProfile")",
                        data: {
                            deviceList: userDeviceList
                        },
                        success: function (data) {
                            $('#UserDevicesTable').html(data);
                            $('#SavedDiv').html("<div class='note note-success'>Die Geräteeinstellungen wurden gespeichert!</div>")

                        }
                    });
            }
        };

        function toggleDateCheck(elem) {
            // das elem ist das HTML-Element
            // aus dem mache ich ein jQuery Element
            // dann erst kann ich die DOM Eigenschaft über attr ändern
            // damit sie später auch wieder über jQuery ausgewertet werden kann
            $("#" + elem.id).attr("checked", elem.checked);
        }



    </script>

    <script src="@Url.Content("~/Assets/libs/dropzone/dropzone.js")" type="text/javascript"></script>

    <script>

        Dropzone.options.formDrop = {
            acceptedFiles: '.png,.jpg,image/*',
            capture: 'camera',
            maxFiles: 1,
            parallelUploads: 1,
            dictDefaultMessage: 'Ablagebereich für das Profilbild'
        };
    </script>

}


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Persönliche Daten</h5>
                <div class="row">
                    <div class="col-md-6">
                        @using (Html.BeginForm(null, null, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="col-6">
                                    @Html.LabelFor(m => m.FirstName, new { @class = "form-label" })
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-6">
                                    @Html.LabelFor(m => m.LastName, new { @class = "form-label" })
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-6">
                                    @Html.LabelFor(m => m.LikeEMails, new { @class = "form-label" })
                                </div>
                                <div class="col-6">
                                    <div class="form-check form-switch">
                                        @Html.CheckBoxFor(m => m.LikeEMails, new { @class = "form-check-input" })
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-12">
                                    <button type="submit" class="btn btn-outline-primary"><i class="bi bi-save"></i> Speichern</button>
                                    <a href="@Url.Action("Index", "Manage")" class="btn btn-outline-secondary">Abbrechen</a>
                                </div>
                            </div>

                        }
                    </div>
                    <div class="col-md-6">
                        @if (ViewBag.HasImage == true)
                        {
                            <img src="@Url.Action("GetProfileImage")" class="card-img-top" />
                            <a href="@Url.Action("DeleteProfileImage")" class="btn btn-outline-primary"><i class="bi bi-trash"></i> Profilbild löschen</a>
                        }
                        else
                        {
                            <p>Profilbild hochladen</p>
                            <form id="formDrop" action="@Url.Action("UploadProfileImage", "Candidature")" class="dropzone">
                            </form>
                            <a href="@Url.Action("Index")" class="btn btn-outline-primary"><i class="fas fa-sync"></i> Seite aktualisieren / Hochgeladenes Bild anzeigen</a>
                        }

                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
