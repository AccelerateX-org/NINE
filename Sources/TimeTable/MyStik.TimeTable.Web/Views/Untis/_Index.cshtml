@model MyStik.TimeTable.Web.Models.SemesterImportModel
@{
    ViewBag.Title = "Import Stundenplandaten";
}

<div class="panel panel-default">
    <div class="panel-body bg-fillter-study">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <h1>Import von Stundenplandaten aus Untis</h1>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
<div class="row">
    <div class="col-md-2">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <ul class="nav">
                        <li></li>
                        <li><a href="#" id="btnImport" class="btn btn-danger"><i class="fa fa-upload"></i> Import starten</a></li>
                        <li><a href="@Url.Action("InitWPMs", new {id = Model.Semester.Id})">WPMs initialisieren</a></li>



                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="row">
            <div class="col-md-12">
                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-database"></i>
                            <span class="caption-subject bold uppercase"> Daten importieren für</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="form form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(model => model.OrganiserId, new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-6">
                                    @Html.DropDownListFor(m => m.OrganiserId, (IEnumerable<SelectListItem>)ViewBag.Organiser, new { @class = "form-control  input-sm", onchange = "onOrganiserChanged()" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SemesterId, new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-6">
                                    @Html.DropDownListFor(m => m.SemesterId, (IEnumerable<SelectListItem>)ViewBag.Semester, new { @class = "form-control  input-sm", onchange = "onSemesterChanged()" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label" for="Courses">Anzahl importierter Kurse</label>
                                <div class="col-sm-6">
                                    222
                                </div>
                                <div class="col-sm-3">
                                    <a href="#" id="btnDelete" class="btn btn-danger"><i class="fa fa-trash-o"></i> löschen</a>
                                </div>
                            </div>
                                    <div class="form-group">
                                        <label class="col-sm-3 control-label" for="Files">Hochgeladene Dateien</label>
                                        <div class="col-sm-9">
                                            @if (Model.FileNames != null && Model.FileNames.Any())
                                            {
                                                <table class="table table-condensed">
                                                    <thead>
                                                    <tr>
                                                        <th>Name</th>
                                                    </tr>
                                                    </thead>
                                                    <tbody>
                                                    @foreach (var fileName in Model.FileNames)
                                                    {
                                                        <tr>
                                                            <td>@fileName</td>
                                                        </tr>

                                                    }
                                                    </tbody>
                                                </table>
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-sm-offset-3 col-sm-9">
                                            <a href="@Url.Action("Upload", new {id = Model.Semester.Id})" class="btn btn-default">Dateien hochladen</a>
                                            @Ajax.ActionLink("Dateien prüfen", "CheckFiles", new {id = Model.Semester.Id},
                                                new AjaxOptions
                                                {
                                                    HttpMethod = "Post",
                                                    InsertionMode = InsertionMode.Replace,
                                                    UpdateTargetId = "importFileState"
                                                }, new {@class = "btn btn-default"})
                                            <a href="@Url.Action("ClearFiles", new {id = Model.Semester.Id})" class="btn btn-default">Dateien löschen</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-upload"></i>
                            <span class="caption-subject bold uppercase"> Status</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div id="importFileState"></div>
                        <div id="pogresslabel"></div>
                        <div class="progress">
                            <div id="progressbar1" class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 0;">
                                0%
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>







        @section scripts
{
            @Scripts.Render("~/bundles/signalr")

            <!--
            Obwohl diese Datei so nicht existieren, wird das hier benötigt
            Wahrscheinlich wird das erst zur Laufzeit erstellt
            -->
            <script src="~/signalr/hubs" type="text/javascript"></script>

            <script type="text/javascript">

                $(function () {
                    var connection = $.connection.gpUntisHub;

                    connection.client.updateProgress = function (message, perc1) {

                        $("#pogresslabel").html("<p>" + message + "</p>");
                        $("#progressbar1").html(perc1 + "%");
                        $("#progressbar1").css("width", perc1 + "%");
                    };

                    $("#btnDelete").click(function () {
                        connection.server.deleteSemester("@Model.Semester.Id").done(function () {
                            //                    alert("habe fertig");
                        });
                    });

                    $("#btnImport").click(function () {
                        connection.server.importSemester("@Model.Semester.Id").done(function () {
                            //                    alert("habe fertig");
                        });
                    });

                    $.connection.hub.start();
                })

            </script>
        }





