@model MyStik.TimeTable.Data.ModuleDescription
@{
    ViewBag.Title = "Details";

    var subjects = Model.Module.ModuleSubjects.ToList();

    var itsMe = false;
    var userId = ViewBag.UserRight.User.Id;

    foreach (var mv in Model.Module.ModuleResponsibilities)
    {
        if (mv.Member.UserId.Equals(userId))
        {
            itsMe = true;
        }
    }

}


<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-10">
                        <h4 class="card-title">Modul @Model.Module.Tag: @Model.Module.Name</h4>
                        @if (Model.Module.Catalog != null)
                        {
                            <h5 class="card-subtitle">
                                Gehört zu Modulkatalog:
                                <a href="@Url.Action("Index", "Catalogs")">
                                    @Model.Module.Catalog.Name (@Model.Module.Catalog.Organiser.ShortName)

                                </a>
                            </h5>
                            <p>Stand: @Model.Semester.Name</p>
                        }
                    </div>
                    <div class="col-md-2">
                        <div class="d-md-flex justify-content-md-end">
                            @if (ViewBag.UserRight.IsCurriculumAdmin || itsMe)
                            {
                                <a href="@Url.Action("Edit",null, new {id = Model.Id})" class="btn btn-outline-primary">
                                    <i class="bi-pen"></i> Ändern
                                </a>
                            }

                            @if (ViewBag.UserRight.IsCurriculumAdmin)
                            {
                                <a href="@Url.Action("Delete","CurriculumModule", new {id = Model.Module.Id})" class="btn btn-outline-danger">
                                    <i class="bi-trash"></i> Löschen
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="list-group">
                <div class="list-group-item">
                    <div class="row">
                        <div class="col-4">
                            <div>Modulverantwortliche(r)</div>
                        </div>
                        <div class="col-8">
                            @foreach (var mv in Model.Module.ModuleResponsibilities)
                            {
                                <div>@mv.Member.FullName</div>
                            }
                        </div>
                    </div>
                </div>
                <div class="list-group-item">
                    <div class="row">
                        <div class="col-4">
                            <div>Zugehörigkeit zu Curriculum</div>
                        </div>
                        <div class="col-8">
                            @foreach (var acc in Model.Module.Accreditations)
                            {
                                <div>
                                    <a href="@Url.Action("Details", "Curriculum", new {id = acc.Slot.CurriculumSection.Curriculum.Id})">
                                        @acc.Slot.CurriculumSection.Curriculum.Name
                                    </a>
                                    |
                                    @acc.Slot.CurriculumSection.Name <span class="badge bg-secondary">@acc.Slot.ECTS ECTS</span>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="list-group-item">
                    <div class="row">
                        <div class="col-4">
                            <div>Fächer / Lehrveranstaltungen</div>
                        </div>
                        <div class="col-8">
                            @foreach (var subject in subjects)
                            {
                                var opportunities = subject.Opportunities.Where(x => x.Semester.Id == Model.Semester.Id).ToList();

                                if (subject.TeachingFormat != null)
                                {
                                    <div>@subject.Name (@subject.Tag) <span class="badge bg-secondary">@subject.TeachingFormat.Tag</span> <span class="badge bg-secondary">@subject.SWS SWS</span></div>
                                }
                                else
                                {
                                    <div>@subject.Name (@subject.Tag) <span class="badge bg-secondary">N.N.</span> <span class="badge bg-secondary">@subject.SWS SWS</span></div>
                                }

                                foreach (var opportunity in opportunities)
                                {
                                    <div class="ms-3">
                                        @foreach (var moveSubject in subjects)
                                        {
                                            if (moveSubject != subject)
                                            {
                                                <a href="@Url.Action("MoveCourse2Subject", null, new { opportunityId = opportunity.Id, targetSubjectId = moveSubject.Id })"
                                                   class="btn btn-sm btn-outline-info">
                                                    >> @moveSubject.Name (@moveSubject.Tag)
                                                </a>
                                            }
                                        }
                                        <a href="@Url.Action("Details", "Course", new { id = opportunity.Course.Id })">
                                            @opportunity.Course.Name (@opportunity.Course.ShortName)
                                        </a>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="list-group-item">
                    <div class="row">
                        <div class="col-4">
                            <div>Prüfungsformen / Prüfungen</div>
                        </div>
                        <div class="col-8">
                            @foreach (var option in Model.Module.ExaminationOptions)
                            {
                                <div>
                                    @option.Name:
                                    @foreach (var fraction in option.Fractions)
                                    {
                                        if (fraction.MinDuration > 0)
                                        {
                                            var str = string.Format("{0} {1} Minuten {2:P}. ", fraction.Form.ShortName, fraction.MinDuration, fraction.Weight);
                                            @str
                                        }
                                        else
                                        {
                                            var str = string.Format("{0} {1:P}. ", fraction.Form.ShortName, fraction.Weight);
                                            @str
                                        }
                                    }

                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="list-group-item">
                    <div class="row">
                        <div class="col-4">
                            <div>Inhalt / Lernziele</div>
                        </div>
                        <div class="col-8">
                            <div>@Html.Raw(Model.Description)</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




