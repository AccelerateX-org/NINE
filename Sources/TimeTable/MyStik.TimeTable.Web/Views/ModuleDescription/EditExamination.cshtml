@model MyStik.TimeTable.Web.Models.ExaminationEditModel
@{
    ViewBag.Title = "CreateExamination";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h4>Prüfungsangebot ändern</h4>
            </div>
            <div class="card-body">
                @using (Html.BeginForm(null, null, FormMethod.Post))
                {
                    @Html.HiddenFor(m => m.examinationId)
                    @Html.HiddenFor(m => m.moduleId)
                    @Html.HiddenFor(m => m.semesterId)
                    @Html.HiddenFor(m => m.accredidationId)
                    @Html.HiddenFor(m => m.firstMemberId)
                    @Html.HiddenFor(m => m.secondMemberId)
                    <div class="row">
                        <div class="col-4">Semester</div>
                        <div class="col-8">
                            <input class="form-control" type="text" value="@Model.Semester.Name" aria-label="Semester" readonly>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4">Bezug zu Curriculum</div>
                        <div class="col-8">
                            @if (Model.Accreditation.Slot.CurriculumSection != null)
                            {
                                <input class="form-control" type="text" value="@Model.Accreditation.Slot.CurriculumSection.Curriculum.Name" aria-label="Semester" readonly>
                            }
                            else
                            {
                                <input class="form-control" type="text" value="@Model.Accreditation.Slot.AreaOption.Area.Name" aria-label="Semester" readonly>
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4">Erstprüfer:in</div>
                        <div class="col-8">
                            <input class="form-control disabled" id="dozId1" name="dozId1" type="text" value="@Model.FirstMember.FullName"/
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4">Zweitprüfer:in</div>
                        <div class="col-8">
                            <input class="form-control disabled" id="dozId2" name="dozId2" type="text" value="@Model.SecondMember.FullName" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4">Prüfungsform</div>
                        <div class="col-8">
                            @Html.DropDownListFor(model => model.examOptId, (IEnumerable<SelectListItem>)ViewBag.ExamOptions, new { @class = "form-select" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4">Rahmenbedingungen</div>
                        <div class="col-8">
                            @Html.TextAreaFor(m => m.Conditions, new { @class = "form-control", placeholder = "z.B. konkrete Prüfungsdauer, Anzahl Seiten Modularbeit oder Hinweis auf Lehrveranstaltung", rows = "3" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4">Hilfsmittel</div>
                        <div class="col-8">
                            @Html.TextAreaFor(m => m.Utilities, new { @class = "form-control", placeholder = "Explizite Angabe erforderlich, auch 'keine', ggf. auch Angabe eines Links", rows = "3" })
                        </div>
                    </div>
                    <button type="submit" class="btn btn-outline-primary"><i class="bi-save"></i> Änderungen speichern</button>
                    <a class="btn btn-outline-secondary" href="@Url.Action("Exams", new { moduleId = Model.moduleId, semId = Model.semesterId })"><i class="bi-x"></i> Abbrechen</a>
                }
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>

        $(document).ready(function() {


            $('#dozId1').autocomplete({
                source: function(request, response) {

                    var org = '@Model.orgId';

                    $.ajax({
                        url: '@Url.Action("LecturerList", "Curriculum")',
                        type: 'POST',
                        //dataType: "json",

                        data: {
                            orgId: org,
                            name: request.term
                        },

                        success: function(data, success, xhr) {
                            response($.map(data,
                                function(item) {

                                    return {
                                        text: item.id,
                                        label: item.name + " (" + item.shortname + ")",
                                        value: item.name + " (" + item.shortname + ")"
                                    };
                                }));

                        },

                        error: function(data) { alert(data); }
                    });
                },
                select: function (event, ui) {
                    $('#firstMemberId').val(ui.item.text);
                },
                change: function (event, ui) {
                    console.log(ui);
                    if (ui.item === null) {
                        console.log("remove selection");
                        $('#firstMemberId').val("");
                    }
                }
            });


            $('#dozId2').autocomplete({
                source: function(request, response) {
                    var org = '@Model.orgId';

                    $.ajax({
                        url: '@Url.Action("LecturerList", "Curriculum")',
                        type: 'POST',
                        //dataType: "json",

                        data: {
                            orgId: org,
                            name: request.term
                        },

                        success: function(data, success, xhr) {
                            response($.map(data,
                                function(item) {

                                    return {
                                        text: item.id,
                                        label: item.name + " (" + item.shortname + ")",
                                        value: item.name + " (" + item.shortname + ")"
                                    };
                                }));

                        },

                        error: function(data) { alert(data); }
                    });
                },
                select: function (event, ui) {
                    $('#secondMemberId').val(ui.item.text);
                }
            });



        });



    </script>
}
