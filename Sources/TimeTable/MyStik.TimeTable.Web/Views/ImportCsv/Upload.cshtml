@model MyStik.TimeTable.Web.Models.SemesterImportModel
@{
    ViewBag.Title = "Import Stundenplandaten";
}

@Html.HiddenFor(m => m.OrganiserId)
@Html.HiddenFor(m => m.SemesterId)
@Html.HiddenFor(m => m.SegmentId)


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4>Import von Stundenplandaten für @Model.Organiser.ShortName und Semester @Model.Semester.Name für den Abschnitt @Model.Segment.Description (@Model.Segment.From.ToShortDateString() bis @Model.Segment.To.ToShortDateString())</h4>
                <h5 class="card-title"><i class="bi bi-check"></i> Schritt 3 von 3: Konsistenzprüfung und Import</h5>
            </div>
            <div class="card-body">
                <div id="importFileState"></div>
                <div id="pogresslabel"></div>
                <div class="progress">
                    <div id="progressbar1" class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 0;">
                        0%
                    </div>
                </div>
                <a href="#" id="btnImport" class="btn btn-danger"><i class="bi bi-upload"></i> Import starten</a>
                <a id="btnBack" href="@Url.Action("Index", "Import", new {orgId=Model.OrganiserId, semId=Model.SemesterId})" class="btn btn-outline-primary"><i class="bi bi-chevron-left"></i> zurück</a>

                <hr />
                <table class="table">
                    <thead>
                        <tr>
                            <th>Datei</th>
                            <th>Meldungen</th>
                        </tr>
                    </thead>
                    <tbody id="tabMsg">
                        @foreach (var fileName in Model.Context.ErrorMessages)
                        {
                            <tr>
                                <td>@fileName.Key</td>
                                <td>
                                    @foreach (var msg in fileName.Value)
                                    {
                                        if (msg.IsError)
                                        {
                                            <div class="text-danger"><i class="fa fa-exclamation"></i> @msg.Message</div>
                                        }
                                        else
                                        {
                                            <div>@msg.Message</div>
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>









@section scripts
{
    @Scripts.Render("~/bundles/signalr")

    <!--
    Obwohl diese Datei so nicht existieren, wird das hier benötigt
    Wahrscheinlich wird das erst zur Laufzeit erstellt
    -->
    <script src="~/signalr/hubs" type="text/javascript"></script>

    <script type="text/javascript">

        $(function () {
            $('#btnBack').hide();


            var connection = $.connection.csvImportHub;

            connection.client.updateProgress = function (message, perc1) {

                $("#pogresslabel").html("<p>" + message + "</p>");
                $("#progressbar1").html(perc1 + "%");
                $("#progressbar1").css("width", perc1 + "%");
            };


            $("#btnImport").click(function () {
                var semId = $("#SemesterId").val();
                var orgId = $("#OrganiserId").val();
                var segmentId = $("#SegmentId").val();

                connection.server.importSemester(semId, orgId, segmentId).done(function (result) {
                    $('#btnImport').hide();
                    $('#btnBack').show();
                });
            });

            $.connection.hub.start();
    })

    </script>
}





