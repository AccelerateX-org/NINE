@using MyStik.TimeTable.Web.Helpers
@using MyStik.TimeTable.Web.Models
@model MyStik.TimeTable.Web.Models.OfficeHourDateSlotViewModel



@if (Model.CurrentDate.Occurrence.IsCanceled)
{
    <div class="portlet box red">
        <div class="portlet-title">
            <div class="caption">
                @Model.CurrentDate.Begin.ToShortDateString()
                @if (Model.PreviousDate != null)
                {
                    <a href="javascript:showDate('@Model.PreviousDate.Id')" class="btn btn-circle btn-icon-only btn-default">
                        <i class="fa fa-chevron-left"></i>
                    </a>
                }
                else
                {
                    <a href="#" class="btn btn-circle btn-icon-only btn-default disabled">
                        <i class="fa fa-chevron-left"></i>
                    </a>
                }

                @if (Model.NextDate != null)
                {
                    <a href="javascript:showDate('@Model.NextDate.Id')" class="btn btn-circle btn-icon-only btn-default">
                        <i class="fa fa-chevron-right"></i>
                    </a>
                }
                else
                {
                    <a href="#" class="btn btn-circle btn-icon-only btn-default disabled">
                        <i class="fa fa-chevron-right"></i>
                    </a>
                }
            </div>
            <div class="actions">
                <a href="@Url.Action("ReactivateDate", "OfficeHour", new {id = Model.CurrentDate.Occurrence.Id})" class="btn btn-circle btn-default">
                    <i class="fa fa-refesh"></i> reaktivieren
                </a>
            </div>
        </div>
        <div class="portlet-body">
            <h2>Abgesagt!</h2>
        </div>
    </div>
}
else
{
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                @Model.CurrentDate.Begin.ToShortDateString()
                @if (Model.PreviousDate != null)
                {
                    <a href="javascript:showDate('@Model.PreviousDate.Id')" class="btn btn-circle btn-icon-only btn-default">
                        <i class="fa fa-chevron-left"></i>
                    </a>
                }
                else
                {
                    <a href="#" class="btn btn-circle btn-icon-only btn-default disabled">
                        <i class="fa fa-chevron-left"></i>
                    </a>
                }

                @if (Model.NextDate != null)
                {
                    <a href="javascript:showDate('@Model.NextDate.Id')" class="btn btn-circle btn-icon-only btn-default">
                        <i class="fa fa-chevron-right"></i>
                    </a>
                }
                else
                {
                    <a href="#" class="btn btn-circle btn-icon-only btn-default disabled">
                        <i class="fa fa-chevron-right"></i>
                    </a>
                }
            </div>
            <div class="actions">
                @if (Model.State.State == SubscriptionState.BeforeSubscriptionPhase ||
                    !Model.HasSubscriptions)
                {
                    <a href="@Url.Action("DeleteDate", "OfficeHour", new {id = Model.CurrentDate.Occurrence.Id})" class="btn btn-circle btn-default">
                        <i class="fa fa-trash-o"></i> löschen
                    </a>
                }
                else
                {
                    <a href="@Url.Action("CancelDate", "OfficeHour", new {id = Model.CurrentDate.Occurrence.Id})" class="btn btn-circle btn-default">
                        <i class="fa fa-times"></i> absagen
                    </a>
                }
                <a href="@Url.Action("MoveDate", "OfficeHour", new {id = Model.CurrentDate.Occurrence.Id})" class="btn btn-circle btn-default">
                    <i class="fa fa-calendar"></i> verschieben
                </a>
                <a href="@Url.Action("SubscriptionRules", "Occurrence", new {id = Model.CurrentDate.Occurrence.Id})" class="btn btn-circle btn-default">
                    <i class="fa fa-gear"></i> Einstellungen
                </a>
                <a href="@Url.Action("OfficeHourDate", "Print", new {id = Model.CurrentDate.Occurrence.Id})"
                   onclick="window.open(this.href, 'mywin', 'left=20,top=20,width=500,height=500,toolbar=0,resizable=1'); return false;"
                   class="btn btn-circle btn-default"><i class="fa fa-print"></i> drucken</a>
            </div>
        </div>
        <div class="portlet-body">
            <div class="row">
                <div class="col-md-8">
                    <div class="panel panel-default ">
                        <div class="panel-heading">
                            <h4>Eintragungen</h4>
                        </div>
                        <table class="table table-sm">
                            @foreach (var slot in Model.Slots)
                            {
                                if (slot.Member.Any())
                                {
                                    var n = slot.Member.Count;
                                    <tr>
                                        <td rowspan="@n">@slot.Begin.TimeOfDay.ToString(@"hh\:mm") - @slot.End.TimeOfDay.ToString(@"hh\:mm")</td>
                                        @foreach (var entry in slot.Member)
                                        {
                                            <td>@entry.User.FirstName @entry.User.LastName</td>
                                            <td>@entry.Subscription.TimeStamp</td>
                                            <td>
                                                <a href="@Url.Action("CoursePlan", "Students", new {id = entry.User.Id})" class="btn btn-default btn-xs"><i class="fa fa-calendar-o"></i> Kursplan</a>
                                                <a href="mailto:@entry.User.Email" class="btn btn-default btn-xs"><i class="fa fa-envelope-o"></i> E-Mail senden</a>
                                                @Html.ActionButton("fa-eraser pull-left text-danger", "Austragen", "RemoveSubscription", "OfficeHour",
                                                    new {Id = slot.Occurrence.Id, userId = entry.User.Id},
                                                    new {@class = "btn btn-default btn-xs"})
                                            </td>
                                        }
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td>@slot.Begin.TimeOfDay.ToString(@"hh\:mm") - @slot.End.TimeOfDay.ToString(@"hh\:mm")</td>
                                        <td>@Html.Partial("_LockState", slot.Occurrence)</td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="panel panel-default ">
                        <div class="panel-heading">
                            <h4>Beschreibung</h4>
                        </div>
                        <div class="panel-body">
                            <form class="form-horizontal">
                                <div class="form-group">
                                    <label class="col-sm-8 control-label">Anzahl Plätze pro Slot</label>
                                    <div class="col-sm-4">
                                        <p class="form-control-static">@Model.SlotCapacity</p>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-8 control-label">Eintragung möglich bis</label>
                                    <div class="col-sm-4">
                                        <p class="form-control-static">@Model.SubscriptionTime</p>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}






