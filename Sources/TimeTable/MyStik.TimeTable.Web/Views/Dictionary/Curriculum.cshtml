@using MyStik.TimeTable.Data
@model MyStik.TimeTable.Web.Models.SemesterActiveViewModel
@{
    var containerType = "container-fluid";
    if (!Request.IsAuthenticated)
    {
        // Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";
        containerType = "container";
    }


    var db = new TimeTableDbContext();

    var labels = Model.Curriculum.LabelSet.ItemLabels.OrderBy(x => x.Name).ToList();

    ViewBag.Title = "Vorlesungsverzeichnis";
}



<div class="row">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i class="bi bi-grid"></i></a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dictionary")">Vorlesungsverzeichnis</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Semester", "Dictionary", new {semId=Model.Semester.Id})">@Model.Semester.Name</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Organiser", "Dictionary", new {semId=Model.Semester.Id, orgId=Model.Organiser.Id})">@Model.Organiser.ShortName</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Curriculum.ShortName</li>
        </ol>
    </nav>
</div>
@*
<div class="row">
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">Übersichten</h5>
                    </div>
                    <div class="card-body">
                        <a class="btn btn-outline-primary" href="@Url.Action("Courses", "Dictionary", new { currId = Model.Curriculum.Id, semId=Model.Semester.Id })">
                            Alle Lehrveranstaltungen
                        </a>
                        @if (Model.Curriculum.Areas.Any())
                        {
                            <a class="btn btn-outline-primary" href="@Url.Action("SlotPlan", "Dictionary", new { currId = Model.Curriculum.Id, semId = Model.Semester.Id })">
                                Nach Modul- / Studienplan
                            </a>
                            if (Request.IsLocal)
                            {
                                <a class="btn btn-outline-secondary" href="@Url.Action("Planer", new { currId = Model.Curriculum.Id, semId = Model.Semester.Id })">
                                    Semesterplaner
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">Nach Kohorten, z.B. Studiengruppen, Studienrichtungen</h5>
                    </div>
                    <div class="list-group">
                        <div class="list-group-item">
                            <div class="row">
                                @foreach (var label in Model.Curriculum.LabelSet.ItemLabels.OrderBy(x => x.Name))
                                {
                                    var nCourses = 0;
                                    if (ViewBag.UserRight.IsCurriculumAdmin || ViewBag.UserRight.Member != null)
                                    {
                                        nCourses = db.Activities.OfType<Course>()
                                            .Count(x => x.Organiser.Id == Model.Organiser.Id && x.Semester.Id == Model.Semester.Id && x.LabelSet.ItemLabels.Any(l => l.Id == label.Id));
                                    }
                                    else
                                    {
                                        nCourses = db.Activities.OfType<Course>()
                                            .Count(x => x.Organiser.Id == Model.Organiser.Id && x.Semester.Id == Model.Semester.Id && !x.IsProjected && x.LabelSet.ItemLabels.Any(l => l.Id == label.Id));
                                    }

                                    if (nCourses > 0)
                                    {
                                        <div class="col-md-2">
                                            <a href="@Url.Action("Label", new { semId = Model.Semester.Id, orgId = Model.Organiser.Id, currId = Model.Curriculum.Id, labelId = label.Id })"
                                               class="btn btn-outline-secondary d-flex justify-content-between align-items-start">
                                                <div class="ms-2 me-auto">
                                                    <div class="fw-bold">@label.Name</div>
                                                </div>
                                                <span class="badge bg-secondary rounded-pill">@nCourses</span>
                                            </a>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
*@

<div class="row">
    <div class="col-md-12">
        <div class="accordion" id="accordionExample">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                        <span><i class="bi bi-tags"></i></span>&nbsp;Nach Kohorten, z.B. Studiengruppen, Studienrichtungen
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                    <div class="list-group">
                        @if (labels.Any())
                        {
                            foreach (var label in labels)
                            {
                                var nCourses = 0;
                                if (ViewBag.UserRight.IsCurriculumAdmin || ViewBag.UserRight.Member != null)
                                {
                                    nCourses = db.Activities.OfType<Course>()
                                        .Count(x => x.Organiser.Id == Model.Organiser.Id && x.Semester.Id == Model.Semester.Id && x.LabelSet.ItemLabels.Any(l => l.Id == label.Id));
                                }
                                else
                                {
                                    nCourses = db.Activities.OfType<Course>()
                                        .Count(x => x.Organiser.Id == Model.Organiser.Id && x.Semester.Id == Model.Semester.Id && !x.IsProjected && x.LabelSet.ItemLabels.Any(l => l.Id == label.Id));
                                }

                                if (nCourses > 0)
                                {
                                    <a href="@Url.Action("Label", new { semId = Model.Semester.Id, orgId = Model.Organiser.Id, currId = Model.Curriculum.Id, labelId = label.Id })"
                                       class="list-group-item list-group-item-action d-flex justify-content-between align-items-start">
                                        <div class="ms-2 me-auto">
                                            <div class="fw-bold">@label.Name</div>
                                        </div>
                                        <span class="badge bg-secondary rounded-pill">@nCourses</span>
                                    </a>
                                }
                            }
                        }
                        else
                        {
                            <div class="list-group-item list-group-item-warning">
                                <strong><i class="bi bi-exclamation-circle"></i> Hinweis</strong>: Für dieses Studienangebot sind für das <strong>@Model.Semester.Name</strong> keine Kohorten angelegt.
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        <span><i class="bi bi-book"></i></span>&nbsp;Nach SPO bzw. Studienplan
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                    <div class="list-group">
                        <div class="list-group">
                            @if (Model.Curriculum.Areas.Any())
                            {

                                <a class="list-group-item list-group-item-action" href="@Url.Action("SlotPlan", "Dictionary", new { currId = Model.Curriculum.Id, semId = Model.Semester.Id })">
                                    Modulplan (SPO)
                                </a>
                                if (Request.IsLocal)
                                {
                                    <a class="list-group-item list-group-item-action" href="@Url.Action("Planer", new { currId = Model.Curriculum.Id, semId = Model.Semester.Id })">
                                        Semesterplaner
                                    </a>
                                }
                            }
                            else
                            {
                                <div class="list-group-item list-group-item-warning">
                                    <strong><i class="bi bi-exclamation-circle"></i> Hinweis</strong>: Für dieses Studienangebot ist kein Modulplan hinterlegt.
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                        <span><i class="bi bi-list"></i></span>&nbsp;Gesamtangebote
                    </button>
                </h2>
                <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                    <div class="list-group">
                        <a class="list-group-item list-group-item-action" href="@Url.Action("Courses", "Dictionary", new { currId = Model.Curriculum.Id, semId=Model.Semester.Id })">
                            Alle Lehrveranstaltungen mit Bezug zum Studienangebot <strong>@Model.Curriculum.Name</strong>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
