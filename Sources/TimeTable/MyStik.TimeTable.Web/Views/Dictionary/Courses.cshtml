@using MyStik.TimeTable.Data
@using MyStik.TimeTable.Web.Helpers
@using MyStik.TimeTable.Web.Services
@model MyStik.TimeTable.Web.Models.SemesterActiveViewModel

@{
    ViewBag.Title = "Kursplan";

    var db = new TimeTableDbContext();
    var courseService = new CourseService(db);

    var courses = db.Activities.OfType<Course>().Where(x =>
        x.Semester.Id == Model.Semester.Id &&
        x.SubjectTeachings.Any(t => t.Subject.SubjectAccreditations.Any(a => a.Slot.AreaOption.Area.Curriculum.Id == Model.Curriculum.Id))
        ).ToList();


    foreach (var label in Model.Curriculum.LabelSet.ItemLabels.ToList())
    {
        var labeledCourses = db.Activities.OfType<Course>()
            .Where(x =>
                x.Semester.Id == Model.Semester.Id &&
                //x.Organiser.Id == org.Id &&
                x.LabelSet != null &&
                x.LabelSet.ItemLabels.Any(l => l.Id == label.Id))
            .ToList();

        courses.AddRange(labeledCourses);
    }

    courses = courses.Distinct().ToList();
}

@section styles
{
    <link href="@Url.Content("~/Assets/libs/datatables/dataTables.min.css")" rel="stylesheet" type="text/css" />
}


@section scripts
{
    <script src="@Url.Content("~/Assets/libs/datatables/dataTables.min.js")" type="text/javascript"></script>

    <script>
        $(document).ready(function () {
            $('#tabCourses').DataTable({
                "paging": false
            });
        });
    </script>
}

<div class="row">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i class="bi bi-grid"></i></a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dictionary")">Vorlesungsverzeichnis</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Semester", "Dictionary", new {semId=Model.Semester.Id})">@Model.Semester.Name</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Organiser", "Dictionary", new {semId=Model.Semester.Id, orgId=Model.Organiser.Id})">@Model.Organiser.ShortName</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Curriculum", "Dictionary", new {semId=Model.Semester.Id, currId=Model.Curriculum.Id})">@Model.Curriculum.ShortName</a></li>
            <li class="breadcrumb-item active" aria-current="page">Alle Lehrveranstaltungen</li>
        </ol>
    </nav>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <table id="tabCourses" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Kurzname</th>
                        <th>Titel</th>
                        <th>Module</th>
                        <th>Kohorten</th>
                        <th>Art</th>
                        <th>Raumangabe(n)</th>
                        <th>Lehrende</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var course in courses)
                    {
                        var c = courseService.GetCourseSummary(course);
                        var show = !c.Course.IsProjected || (ViewBag.UserRight.IsCurriculumAdmin || ViewBag.UserRight.Member != null);

                        if (show)
                        {
                            var linkName = c.Course.ShortName ?? "Kein Kurzname";
                            var teachings = c.Course.SubjectTeachings.ToList();

                            <tr>
                                <td>
                                    @Html.ActionLink(linkName, "Index", "Course", new { id = c.Course.Id }, null)
                                </td>
                                <td>
                                    @c.Course.Name
                                </td>
                                @if (teachings.Any())
                                {
                                    <td>
                                        @foreach (var teaching in teachings)
                                        {
                                            var accreditations = teaching.Subject.SubjectAccreditations.ToList();
                                            if (accreditations.Any())
                                            {
                                                foreach (var accreditation in accreditations)
                                                {
                                                    <div>@accreditation.Slot.AreaOption.Area.Curriculum.ShortName: @accreditation.Slot.Tag (@teaching.Subject.Name)</div>
                                                }
                                            }
                                        }
                                    </td>
                                }
                                else
                                {
                                    <td></td>
                                }

                                <td>
                                    @Html.LabelList(c.Course)
                                </td>
                                @if (c.IsPureBlock())
                                {
                                    <td>Blockkurs</td>
                                }
                                else if (c.IsPureRegular())
                                {
                                    <td>Regelmäßig</td>
                                }
                                else if (c.IsPureWeekEndCourse())
                                {
                                    <td>Wochenendkurs</td>
                                }
                                else
                                {
                                    <td>Einzeltermine</td>
                                }
                                <td>
                                    @Html.RoomList(c.Rooms)
                                </td>
                                <td>
                                    @Html.LecturerList(c.Lecturers)
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
