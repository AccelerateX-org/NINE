@using MyStik.TimeTable.Data
@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.HomeViewModel

@{
    ViewBag.Title = "Vorlesungsverzeichnis";

    var db = new TimeTableDbContext();
}

<div class="row">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i class="bi bi-grid"></i></a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Campus", "University")">HM</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dictionary")">Vorlesungsverzeichnis</a></li>
            <li class="breadcrumb-item active" aria-current="page">
                <div class="btn-group">
                    @if (ViewBag.PrevSemester != null)
                    {
                        <a href="@Url.Action("Index", "Dictionary", new {id=ViewBag.PrevSemester.Id})"><i class="bi bi-chevron-double-left"></i></a>
                    }
                    else
                    {
                        <a class="disabled" href="#"><i class="bi bi-chevron-double-left"></i></a>
                    }
                    <span class="ms-2 me-2">@ViewBag.CurrentSemester.Name</span>
                    @if (ViewBag.NextSemester != null)
                    {
                        <a href="@Url.Action("Index", "Dictionary", new {id=ViewBag.NextSemester.Id})"><i class="bi bi-chevron-double-right"></i></a>
                    }
                    else
                    {
                        <a class="disabled" href="#"><i class="bi bi-chevron-double-right"></i></a>
                    }
                </div>
            </li>
        </ol>
    </nav>
</div>
<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Angebote der Fakultäten</h5>
            </div>
            <div class="list-group">
                @foreach (var org in Model.Organisers.OrderBy(x => x.ShortName))
                {
                    var hasCourses = db.Activities.OfType<Course>().Count(x => 
                        x.Organiser != null && x.Organiser.Id == org.Id && 
                        x.Semester != null && x.Semester.Id == Model.CurrentSemester.Id);

                    if (hasCourses > 0)
                    {
                        <a class="list-group-item list-group-item-action d-flex justify-content-between align-items-start" href="@Url.Action("Organiser", "Dictionary", new { semId = ViewBag.CurrentSemester.Id, orgId = org.Id })">
                            <div class="ms-2 me-auto">
                                <div class="fw-bold">@org.ShortName | @org.Name</div>
                            </div>
                            <span class="badge text-bg-primary rounded-pill">@hasCourses</span>
                        </a>
                    }
                    else
                    {
                        <div class="list-group-item disabled">@org.ShortName | @org.Name</div>
                    }

                }
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Hochschulweite Angebote</h5>
            </div>
        </div>
    </div>
</div>
@*
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="list-group">
                @foreach (var sem in Model.ActiveSemester)
                {
                    if (sem.Organisers.Any())
                    {
                        <div class="list-group-item">
                            <h5><strong>@sem.Semester.Name</strong></h5>
                            <div class="btn-group">
                                @foreach (var organiser in sem.Organisers.OrderBy(x => x.ShortName))
                                {
                                    <a href="@Url.Action("Organiser", "Dictionary", new {semId=sem.Semester.Id, orgId=organiser.Id})" class="btn btn-outline-dark" style="background-color: @organiser.HtmlColor; color: white">@organiser.ShortName</a>
                                }
                            </div>
                            <div class="btn-group">
                                @{
                                    var institutions = sem.Organisers.Where(x => x.Institution != null).Select(x => x.Institution).Distinct().ToList();

                                    foreach (var institution in institutions.Where(x => x.LabelSet != null))
                                    {
                                        foreach (var labelSetItemLabel in institution.LabelSet.ItemLabels)
                                        {
                                            <a href="@Url.Action("Label", new { semId = sem.Semester.Id, labelId = labelSetItemLabel.Id })" class="btn btn-outline-dark">@labelSetItemLabel.Name</a>
                                        }
                                    }
                                }

                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>
    *@