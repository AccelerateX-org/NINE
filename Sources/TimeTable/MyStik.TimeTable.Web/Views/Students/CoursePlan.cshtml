@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.UserCoursePlanViewModel
@{
    ViewBag.Title = "Subscriptions";
}

<div class="panel panel-default">
    <div class="panel-body bg-fillter-lecturer">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <h1>Kursplan - @Model.User.FirstName @Model.User.LastName</h1>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>Belegte Kurse im Semester @Model.Semester.Name</h4>
                </div>
                <table class="table table-bordered table-striped table-condensed">
                    <thead>
                    <tr>
                        <th></th>
                        <th>Bezeichnung</th>
                        <th>Gruppe(n)</th>
                        <th>Zeit(en)</th>
                        <th>Raum</th>
                        <th>Dozent(en)</th>
                        <th>Eingeschrieben am</th>
                        <th><i class="fa fa-cubes"></i></th>
                        <th><i class="fa fa-group"></i></th>
                        <th><i class="fa fa-ticket"></i></th>
                        <th><i class="fa fa-hourglass"></i></th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model.CourseSubscriptions)
                    {
                        var linkText = item.CourseSummary.Course.Name + " (" + item.CourseSummary.Course.ShortName + ")";

                        var myLapCount = item.Subscription.LapCount;
                        var myLotPotSize = item.Subscription.Occurrence.Subscriptions.Count(x => x.OnWaitingList && x.LapCount >= myLapCount);
                        var nCap = item.Subscription.Occurrence.Capacity;
                        var nConfirmed = item.Subscription.Occurrence.Subscriptions.Count(x => x.IsConfirmed);
                        var nReserved = item.Subscription.Occurrence.Subscriptions.Count(x => !x.IsConfirmed && !x.OnWaitingList);
                        var nWaiting = item.Subscription.Occurrence.Subscriptions.Count(x => x.OnWaitingList);


                        <tr>
                            @if (item.CourseSummary.HasLottery)
                            {
                                <td><i class="fa fa-random"></i></td>

                            }
                            else
                            {
                                <td></td>
                            }
                                
                            <td>
                                @Html.ActionLink(linkText, "Index", "Course", new {id = item.CourseSummary.Course.Id}, null)
                            </td>
                            <td>
                                @Html.GroupList(item.CourseSummary.Course.SemesterGroups)
                            </td>
                            <td>
                                @Html.DateList(item.CourseSummary.Dates)
                            </td>
                            <td>
                                @Html.RoomList(item.CourseSummary.Rooms)
                            </td>
                            <td>
                                @Html.LecturerList(item.CourseSummary.Lecturers)
                            </td>
                            <td>@item.Subscription.TimeStamp</td>
                            <td>@nCap</td>
                            <td>@nConfirmed</td>
                            <td>@nReserved</td>
                            <td>@nWaiting</td>

                            @if (item.Subscription.IsConfirmed)
                            {
                                <td><i class="fa fa-group text-success"></i></td>
                                <td></td>
                            }
                            else
                            {
                                if (item.Subscription.OnWaitingList)
                                {
                                    var nFree = nCap - nConfirmed;
                                    <td><i class="fa fa-hourglass"></i></td>
                                    <td>Chance bei nächster Verlosung: @nFree aus @myLotPotSize (Runde @myLapCount)</td>
                                }
                                else
                                {
                                    <td><i class="fa fa-ticket text-info"></i></td>
                                    <td></td>
                                }
                            }
                                
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4>Tagesplan (nur Plätze und Reservierungen)</h4>
            </div>
            <table class="table table-condensed">
                <thead>
                <tr>
                    <th>Datum</th>
                    <th>Von</th>
                    <th>Bis</th>
                    <th>Lehrveranstaltung</th>
                </tr>
                <tbody>
                @foreach (var courseDate in Model.CourseDates.OrderBy(x => x.Day))
                {
                    var n = courseDate.Dates.Count;
                    var ordered = courseDate.Dates.OrderBy(x => x.Begin).ToList();

                    foreach (var activityDate in ordered)
                    {
                        if (activityDate.Equals(ordered.First()))
                        {
                            <tr>
                                <td rowspan="@n">@courseDate.Day.ToShortDateString()</td>
                                <td>@activityDate.Begin.TimeOfDay.ToString("hh\\:mm")</td>
                                <td>@activityDate.End.TimeOfDay.ToString("hh\\:mm")</td>
                                <td>@activityDate.Activity.Name (@activityDate.Activity.ShortName)</td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>@activityDate.Begin.TimeOfDay.ToString("hh\\:mm")</td>
                                <td>@activityDate.End.TimeOfDay.ToString("hh\\:mm")</td>
                                <td>@activityDate.Activity.Name (@activityDate.Activity.ShortName)</td>
                            </tr>
                        }
                    }
                }
                </tbody>
            </table>

        </div>
    </div>
</div>

