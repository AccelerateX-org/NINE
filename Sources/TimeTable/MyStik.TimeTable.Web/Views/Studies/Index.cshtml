@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.StudentSummaryModel
@{
    ViewBag.Title = "Mein Studium";
}


<div class="row mb-3">
    <div class="col-12">
        <div class="alert alert-success">
            <div>Zugang zum neuen <a href="@Url.Action("Index", "Dashboard")">Dashboard</a></div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-4">
        <div class="card mb-3">
            <div class="card-header">
                <h4 class="card-title">Meine Agenda</h4>
                <h5 class="card-subtitle">@DateTime.Today.ToShortDateString()</h5>
            </div>
            <div class="list-group">
                <a href="@Url.Action("PersonalPlan", "Activity")" class="list-group-item list-group-item-action">
                    Tageskalender
                </a>
                <a href="@Url.Action("Index", "StudyRoom")" class="list-group-item list-group-item-action">
                    Suche nach freien Räumen
                </a>
                <a href="@Url.Action("Subscriptions", "OfficeHour")" class="list-group-item list-group-item-action">
                    Sprechstundentermine
                </a>
                <a href="@Url.Action("Index", "Advertisements")" class="list-group-item list-group-item-action">
                    Aushänge
                </a>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card mb-3">
            <div class="card-header">
                <h4 class="card-title">Mein Semester @Model.Semester.Name</h4>
                <h5 class="card-subtitle">@Model.Semester.StartCourses.ToShortDateString() - @Model.Semester.EndCourses.ToShortDateString()</h5>
            </div>
            <div class="list-group">
                <a href="@Url.Action("PersonalPlanWeekly", "Activity", new { id = Model.Semester.Id })" class="list-group-item list-group-item-action">
                    Wochenplan
                </a>
                <a href="@Url.Action("Index", "Dictionary")" class="list-group-item list-group-item-action">
                    Vorlesungsverzeichnis
                </a>
                <a href="@Url.Action("Index", "Events")" class="list-group-item list-group-item-action">
                    Veranstaltungsverzeichnis
                </a>
                <a href="@Url.Action("Organiser", "Lottery", new {id = Model.Student.Curriculum.Organiser.Id})" class="list-group-item list-group-item-action">
                    Wahlverfahren
                </a>
                <div class="list-group-item  list-group-item-light">Meine Eintragungen in Lehrveranstaltungen</div>
                @foreach (var course in Model.Courses)
                {
                    <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "Course", new { id = course.Course.Id })">
                        @course.Course.ShortName: @course.Course.Name (@Html.GroupList(course.Course.SemesterGroups, showAvailability: false, showLink: false))
                        <div>
                            @if (course.CurrentDate != null)
                            {
                                <i class="bi bi-calendar-day"></i> @Html.TimeSpanWithDate(course.CurrentDate)
                            }
                            else
                            {
                                <i class="bi bi-calendar-check"></i><span>keine weiteren Termine</span>
                            }
                        </div>
                        @if (course.Subscription != null)
                        {
                            if (course.Subscription.OnWaitingList)
                            {
                                <div>
                                    Status: Warteliste
                                </div>

                            }
                            else
                            {
                                <div>
                                    Status: Teilnehmer:in
                                </div>
                            }
                        }
                    </a>
                }

                <div class="list-group-item  list-group-item-light">Meine Lehrenden in diesem Semester</div>

                @foreach (var lecturer in Model.Lecturers)
                {
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        @lecturer.Lecturer.FullName
                        @if (lecturer.Courses.Any())
                        {
                            @Html.Raw("(")
                            ;
                            foreach (var c in lecturer.Courses)
                            {
                                @Html.Raw(c.Course.ShortName)
                                ;
                                if (c != lecturer.Courses.Last())
                                {
                                    @Html.Raw(", ")
                                    ;
                                }
                            }
                            @Html.Raw(")")
                        }

                        <div class="btn-group" role="group" aria-label="Basic example">
                            @if (lecturer.OfficeHours.Any())
                            {
                                <a href="@Url.Action("Subscriptions", "OfficeHour")" class="btn btn-outline-secondary btn-sm" title="Sprechstundentermine">
                                    <i class="fas fa-user-md"></i>
                                </a>
                            }
                            <a href="@Url.Action("Member", "Organiser", new { id = lecturer.Lecturer.Id })" class="btn btn-outline-secondary btn-sm" title="Informationen">
                                <i class="fas fa-info-circle"></i>
                            </a>
                        </div>
                    </div>

                }

                <div class="card-body">
                    @if (Model.PrevSemester != null)
                    {
                        <a href="@Url.Action("Index", new { id = Model.PrevSemester.Id })">@Model.PrevSemester.Name</a>
                    }
                    @if (Model.NextSemester != null)
                    {
                        <a href="@Url.Action("Index", new { id = Model.NextSemester.Id })">@Model.NextSemester.Name</a>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card mb-3">
            <div class="card-header">
                <h4 class="card-title">Mein Studium </h4>
                <h5 class="card-subtitle">
                    @Model.Student.Curriculum.ShortName (ab @Model.Student.FirstSemester.Name)
                </h5>
            </div>
            <div class="list-group">
                <a href="@Url.Action("Details", "Curriculum", new { id = Model.Student.Curriculum.Id })" class="list-group-item list-group-item-action">
                    Aufbau und Modulplan
                </a>
                <a href="@Url.Action("Index", "ScriptShop")" class="list-group-item list-group-item-action">
                    Skriptbestellungen
                </a>
                <a href="@Url.Action("Index", "Newsletter")" class="list-group-item list-group-item-action">
                    Newsletter
                </a>
                @if (Model.Thesis != null)
                {
                    if (Model.Thesis.DeliveryDate == null) // noch nicht abgegeben
                    {
                        if (Model.Thesis.IssueDate == null) // noch nicht angemeldet
                        {
                            if (Model.Thesis.Supervisors.Any(x => x.AcceptanceDate != null)) // Arbeit wurde angenommen
                            {
                                <a href="@Url.Action("Issue", "Thesis")" class="list-group-item list-group-item-action list-group-item-danger">
                                    Meine Abschlussarbeit ist noch nicht angemeldet!
                                </a>
                            }
                            else
                            {
                                <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-info">
                                    Habe in NINE schon eine Abschlussarbeit angelegt, aber noch nicht offiziell damit begonnen.
                                </a>
                            }

                        }
                        else
                        {
                            var diff = Model.Thesis.ExpirationDate.Value.Date - DateTime.Today;
                            var isProlonged = false;
                            if (Model.Thesis.RenewalDate != null)
                            {
                                isProlonged = true;
                                diff = Model.Thesis.RenewalDate.Value.Date - DateTime.Today;
                            }

                            if (isProlonged)
                            {
                                <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-danger">
                                    Abgabefrist meiner Abschlussarbeit (verlängert): @Model.Thesis.RenewalDate.Value.Date.ToShortDateString()
                                </a>
                            }
                            else
                            {
                                <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-info">
                                    Abgabefrist meiner Abschlussarbeit: @Model.Thesis.ExpirationDate.Value.Date.ToShortDateString()
                                </a>
                            }
                        }
                    }
                    else
                    {
                        <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-info">
                            Die Abgabe wurde am @Model.Thesis.DeliveryDate.Value.ToShortDateString() erfasst.
                        </a>
                    }
                }
                else
                {
                    <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action">
                        Abschlussarbeit: bisher nicht begonnen
                    </a>
                }
            </div>

            <div class="card-body">
                <a href="@Url.Action("Curricula", "Subscription")">Studienbuch</a>
                <a href="@Url.Action("Faculty", "University", new {id = Model.Student.Curriculum.Organiser.Id} )">@Model.Student.Curriculum.Organiser.ShortName</a>
            </div>
        </div>
    </div>
</div>

