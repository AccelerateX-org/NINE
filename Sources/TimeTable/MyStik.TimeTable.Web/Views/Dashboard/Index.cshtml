@model MyStik.TimeTable.Web.Models.TeachingOverviewModel
@{
    Layout = "~/Views/Shared/_LayoutDashboardSidebar.cshtml";
    ViewBag.Title = "Startseite";
}


@section styles
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/libs/bootstrap-datepicker/css/bootstrap-datepicker3.min.css")" />
}

<div class="row">
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active" aria-current="page"><i class="bi-grid"></i></li>
    </ol>
</nav>

<div class="col-md-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-3">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-start">
                        <h5 class="card-title">Agenda</h5>
                        <input id="dateAgenda" type="text" class="form-control form-control-sm datepicker" onchange="onDateChanged(value)" value="@DateTime.Today.ToShortDateString()" />
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi-dash"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="@Url.Action("PersonalPlan", "Activity")">Tageskalender</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div id="placeholderAgenda">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title placeholder-glow">
                                <span class="placeholder col-6"></span>
                            </h5>
                            <p class="card-text placeholder-glow">
                                <span class="placeholder col-7"></span>
                                <span class="placeholder col-4"></span>
                                <span class="placeholder col-4"></span>
                                <span class="placeholder col-6"></span>
                                <span class="placeholder col-8"></span>
                            </p>
                            <a class="btn btn-primary disabled placeholder col-6" aria-disabled="true"></a>
                        </div>
                    </div>
                </div>
                <div id="listAgenda" class="list-group">
                </div>
                <div class="card-body">
                    <a class="card-link" href="@Url.Action("PersonalPlan", "Activity")">Tageskalender</a>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Student != null)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-3">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-start">
                            <h5 class="card-title">Studium @Model.Student.Curriculum.ShortName <small>(seit @Model.Student.FirstSemester.Name)</small></h5>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi-dash"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="@Url.Action("Curricula", "Subscription")">Studienbuch</a></li>
                                    <li>
                                        <a href="@Url.Action("Index", "ScriptShop")" class="dropdown-item">
                                            Skriptbestellungen
                                        </a>
                                    </li>
                                    <li>
                                        <a href="@Url.Action("Index", "Newsletter")" class="dropdown-item">
                                            Newsletter
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>


                    </div>
                    <div class="list-group">
                        <a href="@Url.Action("Details", "Curriculum", new { id = Model.Student.Curriculum.Id })" class="list-group-item list-group-item-action">
                            Aufbau und Modulplan
                        </a>
                        <div class="list-group-item">
                            Praktissemester
                        </div>
                        @if (Model.Thesis != null)
                        {
                            if (Model.Thesis.DeliveryDate == null) // noch nicht abgegeben
                            {
                                if (Model.Thesis.IssueDate == null) // noch nicht angemeldet
                                {
                                    if (Model.Thesis.Supervisors.Any(x => x.AcceptanceDate != null)) // Arbeit wurde angenommen
                                    {
                                        <a href="@Url.Action("Issue", "Thesis")" class="list-group-item list-group-item-action list-group-item-danger">
                                            Meine Abschlussarbeit ist noch nicht angemeldet!
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-info">
                                            Habe in NINE schon eine Abschlussarbeit angelegt, aber noch nicht offiziell damit begonnen.
                                        </a>
                                    }

                                }
                                else
                                {
                                    var diff = Model.Thesis.ExpirationDate.Value.Date - DateTime.Today;
                                    var isProlonged = false;
                                    if (Model.Thesis.RenewalDate != null)
                                    {
                                        isProlonged = true;
                                        diff = Model.Thesis.RenewalDate.Value.Date - DateTime.Today;
                                    }

                                    if (isProlonged)
                                    {
                                        <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-danger">
                                            Abgabefrist meiner Abschlussarbeit (verlängert): @Model.Thesis.RenewalDate.Value.Date.ToShortDateString()
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-info">
                                            Abgabefrist meiner Abschlussarbeit: @Model.Thesis.ExpirationDate.Value.Date.ToShortDateString()
                                        </a>
                                    }
                                }
                            }
                            else
                            {
                                <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-info">
                                    Die Abgabe wurde am @Model.Thesis.DeliveryDate.Value.ToShortDateString() erfasst.
                                </a>
                            }
                        }
                        else
                        {
                            <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action">
                                Abschlussarbeit: bisher nicht begonnen
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }


</div>
<div class="col-md-4">
    <div class="row">
        <div id="placeholderSemester">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title placeholder-glow">
                        <span class="placeholder col-6"></span>
                    </h5>
                    <p class="card-text placeholder-glow">
                        <span class="placeholder col-7"></span>
                        <span class="placeholder col-4"></span>
                        <span class="placeholder col-4"></span>
                        <span class="placeholder col-6"></span>
                        <span class="placeholder col-8"></span>
                    </p>
                    <a class="btn btn-primary disabled placeholder col-6" aria-disabled="true"></a>
                </div>
            </div>
        </div>

        <div id="cardSemester" class="col-md-12">
            @*
            @Html.Partial("_Semester", Model)
        *@
        </div>
    </div>


</div>
<div class="col-md-4">
    @if (Model.Members.Any() && Model.ActiveTheses.Any())
    {
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-3">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-start">
                            <h5 class="card-title">Abschlussarbeiten</h5>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi-dash"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#">Ausschreibungen</a></li>
                                    <li><a class="dropdown-item" href="@Url.Action("Index", "ThesisSupervision")">Übersicht</a></li>
                                    <li><a class="dropdown-item" href="@Url.Action("Cleared", "ThesisSupervision")">Abgerechnete</a></li>
                                </ul>
                            </div>
                        </div>

                    </div>
                    <div class="list-group">
                        @foreach (var thesis in Model.ActiveTheses)
                        {
                            if (thesis.User != null)
                            {

                                if (thesis.Thesis.DeliveryDate != null)
                                {
                                    <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "ThesisSupervision", new { id = thesis.Thesis.Id })">
                                        <i class="bi-trophy"></i> @thesis.User.FullName (@thesis.Student.Curriculum.ShortName)
                                    </a>
                                }
                                else
                                {
                                    if (thesis.Thesis.Supervisors.Any(x => x.AcceptanceDate == null))
                                    {
                                        <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "ThesisSupervision", new { id = thesis.Thesis.Id })">
                                            <i class="fas fa-question-circle"></i>
                                            @thesis.User.FullName (@thesis.Student.Curriculum.ShortName)
                                            <span class="badge bg-danger">Betreuungsanfrage</span>
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "ThesisSupervision", new { id = thesis.Thesis.Id })">
                                            <i class="bi-gear"></i>
                                            @thesis.User.FullName (@thesis.Student.Curriculum.ShortName)
                                            @if (thesis.DaysToExpire == Int32.MaxValue)
                                            {
                                                <span class="badge bg-danger">Noch nicht angemeldet</span>
                                            }
                                            else
                                            {
                                                if (thesis.Thesis.RenewalDate != null)
                                                {
                                                    <span class="badge bg-secondary">@thesis.DaysToExpire Tage bis zur Abgabe (verlängert)</span>
                                                }
                                                else
                                                {
                                                    if (thesis.Thesis.ProlongRequestDate == null)
                                                    {
                                                        <span class="badge bg-secondary">@thesis.DaysToExpire Tage bis zur Abgabe</span>
                                                    }
                                                    else
                                                    {
                                                        if (thesis.Thesis.ProlongSupervisorAccepted == null)
                                                        {
                                                            <span class="badge bg-danger">Antrag auf Verlängerung - unbearbeitet</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-secondary">Antrag auf Verlängerung akzeptiert - Bestätigung PKV steht noch aus</span>
                                                        }

                                                    }
                                                }

                                            }
                                        </a>
                                    }
                                }
                            }
                            else
                            {
                                if (thesis.Thesis.DeliveryDate != null)
                                {
                                    <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "ThesisSupervision", new { id = thesis.Thesis.Id })">
                                        <i class="bi-trophy"></i> Unbekannt (@thesis.Student.Curriculum.ShortName)
                                    </a>
                                }
                                else
                                {
                                    <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "ThesisSupervision", new { id = thesis.Thesis.Id })">
                                        <i class="bi-gear"></i> Unbekannt (@thesis.Student.Curriculum.ShortName)
                                        <span class="badge badge-secondary">@thesis.DaysToExpire</span>
                                    </a>
                                }

                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-3">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-start">
                        <h5 class="card-title">Campus</h5>
                        @*
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi-dash"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="@Url.Action("Campus", "University")">HM</a></li>
                            </ul>
                        </div>
                            *@
                    </div>
                </div>
                <div class="list-group">
                    @foreach (var memeber in Model.Members)
                    {
                        <a href="@Url.Action("Faculty", "University", new { id = memeber.Organiser.Id })" class="list-group-item list-group-item-action">
                            @memeber.ShortName@@@memeber.Organiser.ShortName
                        </a>
                    }
                    @if (Model.Student != null)
                    {
                        <a href="@Url.Action("Faculty", "University", new { id = Model.Student.Curriculum.Organiser.Id })" class="list-group-item list-group-item-action">
                            Student@@@Model.Student.Curriculum.Organiser.ShortName
                        </a>
                    }
                </div>
                <div class="card-body">
                    <a href="@Url.Action("Index", "Dictionary")" class="card-link">Vorlesungsverzeichnis</a>
                    <a href="@Url.Action("Index", "StudyRoom")" class="card-link">Suche nach freien Räumen</a>
                </div>
            </div>
        </div>
    </div>
    @if (Model.Members.Any())
    {

        <div class="row">
            <div class="col-md-12">
                <div class="card mb-3">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-start">
                            <h5 class="card-title">Meine ...</h5>
                        @*
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi-dash"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#">LUFV</a></li>
                                </ul>
                            </div>
                            *@
                        </div>
                    </div>
                    <div class="list-group">
                        <a class="list-group-item list-group-item-action" href="@Url.Action("Self", "Person")">
                            Visitenkarte
                        </a>
                        <a class="list-group-item list-group-item-action" href="@Url.Action("Index", "CurriculumModule")">
                            Module
                        </a>
                        <a class="list-group-item list-group-item-action" href="@Url.Action("Courses", "Lecturer")">
                            Lehrveranstaltungen (Historie)
                        </a>
                        <a class="list-group-item list-group-item-action" href="@Url.Action("Index", "VirtualRoom")">
                            Virtuellen Räume
                        </a>
                        <a class="list-group-item list-group-item-action" href="@Url.Action("Index", "Advertisements")">
                            Schaukästen
                        </a>
                        <a class="list-group-item list-group-item-action disabled" href="">
                            Gremien
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
</div>





@section Scripts {

    <script type="text/javascript" src="@Url.Content("~/Assets/libs/bootstrap-datepicker/js/bootstrap-datepicker.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/libs/bootstrap-datepicker/locales/bootstrap-datepicker.de.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/fillter/scripts/datepicker.js")"></script>

    <script>

        document.addEventListener('DOMContentLoaded', function () {
            @*
            document.getElementsByClassName("datepicker").datepicker({
                orientation: "left",
                autoclose: true,
                format: "@ViewBag.Culture.DateTimeFormat.ShortDatePattern",
                weekStart: 1,
                calendarWeeks: true,
                language: "@ViewBag.Culture.Name"
            });
            *@

            initDatePickerTopLeft("datepicker", "@ViewBag.Culture.DateTimeFormat.ShortDatePattern", "@ViewBag.Culture.Name");
            onDateChanged("@DateTime.Today.ToString(ViewBag.Culture.DateTimeFormat.ShortDatePattern)");
            onSemesterChanged(null);
        });

        function onDateChanged(value) {
            // es kommt der formatierte Text an

            $("#listAgenda").hide();
            $("#placeholderAgenda").show();

            $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("Agenda", "Activity")',
                    data: {
                        day: value
                    },
                    success: function(data, success, xhr) {
                        $('#listAgenda').html(data);
                        $("#listAgenda").show();
                        $("#placeholderAgenda").hide();
                    }
                });
        }


        function onSemesterChanged(semId) {
            // es kommt der formatierte Text an

            $("#cardSemester").hide();
            $("#placeholderSemester").show();


            $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("Semester", "Dashboard")',
                    data: {
                        semId: semId
                    },
                    success: function(data, success, xhr) {
                        $('#cardSemester').html(data);
                        $("#cardSemester").show();
                        $("#placeholderSemester").hide();
                    }
                });
        }


    </script>


}
