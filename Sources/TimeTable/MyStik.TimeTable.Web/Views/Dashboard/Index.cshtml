@using MyStik.TimeTable.Data
@model MyStik.TimeTable.Web.Models.TeachingOverviewModel
@{
    ViewBag.Title = "Dashboard";

    var db = new TimeTableDbContext();

    var now = DateTime.Now;
    var day = DateTime.Today.AddDays(-7);
    var nAds = db.Advertisements.Count(x => x.Created >= day);
}


@section styles
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/libs/bootstrap-datepicker/css/bootstrap-datepicker3.min.css")" />
}

<div class="row">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i class="bi bi-grid"></i></a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Campus", "University")">HM</a></li>

            @if (Model.Organisers.Any())
            {
                <li class="breadcrumb-item">
                    @foreach (var org in Model.Organisers.OrderBy(x => x.ShortName))
                    {
                        <a href="@Url.Action("Faculty", "University", new { id = org.Id })">@org.ShortName</a>
                    }
                </li>
            }
        </ol>
    </nav>
    @if (Request.IsLocal)
    {
        <a href="https://localhost:44300/Course/Details/7dfad981-d23d-ee11-855b-7486e20bbe7b">Testkurs</a>
        <a href="https://localhost:44300/ModuleDescription/Semester?moduleId=9a068d88-77cc-ed11-8520-7486e20bbe7b&semId=17f321e3-76cc-ed11-8520-7486e20bbe7b">Testmodul</a>
    }
<div class="col-md-4">
    @if (Model.Candidatures.Any())
    {
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-3">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-start">
                            <h5 class="card-title">Meine Aufnahmeverfahren</h5>
                        </div>
                    </div>
                    <div class="list-group">
                        <a href="@Url.Action("Index", "Candidature")" class="list-group-item list-group-item-action"><i class="bi bi-journals"></i> Übersicht</a>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (Model.Student != null && Model.Student.LastSemester == null)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-3">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-start">
                            <h5 class="card-title">Ich studiere <strong>@Model.Student.Curriculum.ShortName</strong> seit @Model.Student.FirstSemester.Name</h5>
                        </div>
                    </div>
                    <div class="list-group">
                        <a class="list-group-item list-group-item-action" href="@Url.Action("Curricula", "Subscription")">
                            Studiengang ändern / wechseln / beenden
                        </a>
                        <a href="@Url.Action("Details", "Curriculum", new { id = Model.Student.Curriculum.Id })" class="list-group-item list-group-item-action">
                            Aufbau und Modulplan
                        </a>
                        @if (Model.Thesis != null)
                        {
                            if (Model.Thesis.DeliveryDate == null) // noch nicht abgegeben
                            {
                                if (Model.Thesis.IssueDate == null) // noch nicht angemeldet
                                {
                                    if (Model.Thesis.Supervisors.Any(x => x.AcceptanceDate != null)) // Arbeit wurde angenommen
                                    {
                                        <a href="@Url.Action("Issue", "Thesis")" class="list-group-item list-group-item-action list-group-item-danger">
                                            Meine Abschlussarbeit ist noch nicht angemeldet!
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-info">
                                            Habe in NINE schon eine Abschlussarbeit angelegt, aber noch nicht offiziell damit begonnen.
                                        </a>
                                    }
                                }
                                else
                                {
                                    var diff = Model.Thesis.ExpirationDate.Value.Date - DateTime.Today;
                                    var isProlonged = false;
                                    if (Model.Thesis.RenewalDate != null)
                                    {
                                        isProlonged = true;
                                        diff = Model.Thesis.RenewalDate.Value.Date - DateTime.Today;
                                    }

                                    if (isProlonged)
                                    {
                                        <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-danger">
                                            Abgabefrist meiner Abschlussarbeit (verlängert): @Model.Thesis.RenewalDate.Value.Date.ToShortDateString()
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-info">
                                            Abgabefrist meiner Abschlussarbeit: @Model.Thesis.ExpirationDate.Value.Date.ToShortDateString()
                                        </a>
                                    }
                                }
                            }
                            else
                            {
                                if (Model.Thesis.GradeDate == null)
                                {
                                    <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action list-group-item-info">
                                        Die Abgabe wurde am @Model.Thesis.DeliveryDate.Value.ToShortDateString() erfasst.
                                    </a>
                                }
                                else
                                {
                                    <div class="list-group-item">
                                        Die Note wurde am @Model.Thesis.GradeDate.Value.ToShortDateString() gemeldet. In der Regel ist dies auch der Abschluss des Studiums
                                        <small>Ist der Studiengang noch aktuell?</small>
                                    </div>
                                    <a href="@Url.Action("StayConnected", "Alumni", new { id = Model.Thesis.Student.Id })" class="list-group-item list-group-item-action list-group-item-info">
                                        Erfassung der Kontaktdaten für Alumni-Datenbank
                                    </a>
                                }
                            }
                        }
                        else
                        {
                            if (Model.Student.Curriculum.ThesisDuration > 0)
                            {
                                <a href="@Url.Action("Index", "Thesis")" class="list-group-item list-group-item-action">
                                    Abschlussarbeit: bisher nicht begonnen
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }



    <div class="row">
        <div class="col-md-12">
            <div class="card mb-3">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-start">
                        <h5 class="card-title">Agenda</h5>
                        <input id="dateAgenda" type="text" class="form-control form-control-sm datepicker" onchange="onDateChanged(value)" value="@DateTime.Today.ToString(ViewBag.Culture.DateTimeFormat.ShortDatePattern)" />
                        <div class="btn-group">
                            <a class="btn btn-sm btn-outline-secondary" href="@Url.Action("PersonalPlan", "Activity")"><i class="bi bi-calendar-day"></i></a>
                            <a class="btn btn-sm btn-outline-secondary" href="@Url.Action("Free", "Room")"><i class="bi bi-building-check"></i></a>
                        </div>
                    </div>
                </div>
                <div id="placeholderAgenda">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title placeholder-glow">
                                <span class="placeholder col-6"></span>
                            </h5>
                            <p class="card-text placeholder-glow">
                                <span class="placeholder col-7"></span>
                                <span class="placeholder col-4"></span>
                                <span class="placeholder col-4"></span>
                                <span class="placeholder col-6"></span>
                                <span class="placeholder col-8"></span>
                            </p>
                            <a class="btn btn-primary disabled placeholder col-6" aria-disabled="true"></a>
                        </div>
                    </div>
                </div>
                <div id="listAgenda" class="list-group">
                </div>
            </div>
        </div>
    </div>


    @if (Model.Student != null && Model.Student.LastSemester == null)
    {
        var org = Model.Student.Curriculum.Organiser;
        var rooms = db.Rooms.Where(x => x.IsForLearning && x.Assignments.Any(a => a.Organiser.Id == org.Id && a.IsOwner)).ToList();

        if (rooms.Any())
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="card mb-3">
                        <div class="card-header">
                            <div class="d-flex justify-content-between align-items-start">
                                <h5 class="card-title">Aktuell freie Lernräume</h5>
                            </div>
                        </div>
                        <table class="table">
                            <thead>
                            <tr>
                                <th>Nummer</th>
                                <th>Status</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var room in rooms)
                            {
                                var dates = room.Dates.Where(x => x.Begin <= now && now <= x.End).ToList();

                                <tr>
                                    <td>@room.Number</td>
                                    @if (dates.Any())
                                    {
                                        <td>
                                            @foreach (var date in dates)
                                            {
                                                <div>@date.Activity.ShortName</div>
                                            }
                                        </td>
                                    }
                                    else
                                    {
                                        <td>aktuell frei</td>
                                    }
                                </tr>
                            }
                            </tbody>
                        </table>
                        <!--
                        <div id="placeholderRooms">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="card-title placeholder-glow">
                                        <span class="placeholder col-6"></span>
                                    </h5>
                                    <p class="card-text placeholder-glow">
                                        <span class="placeholder col-7"></span>
                                        <span class="placeholder col-4"></span>
                                        <span class="placeholder col-4"></span>
                                        <span class="placeholder col-6"></span>
                                        <span class="placeholder col-8"></span>
                                    </p>
                                    <a class="btn btn-primary disabled placeholder col-6" aria-disabled="true"></a>
                                </div>
                            </div>
                        </div>
                        -->
                        <div id="listRooms"></div>
                    </div>
                </div>
            </div>
        }
    }

</div>
    <div class="col-md-6">
        <div class="row">
            <div id="refreshSemester">
                <a class="btn btn-outline-primary" href="javascript:onSemesterChanged()"><i class="bi bi-arrow-repeat"></i> Refresh</a>
            </div>
            <div id="placeholderSemester">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title placeholder-glow">
                            <span class="placeholder col-6"></span>
                        </h5>
                        <p class="card-text placeholder-glow">
                            <span class="placeholder col-7"></span>
                            <span class="placeholder col-4"></span>
                            <span class="placeholder col-4"></span>
                            <span class="placeholder col-6"></span>
                            <span class="placeholder col-8"></span>
                        </p>
                        <a class="btn btn-primary disabled placeholder col-6" aria-disabled="true"></a>
                    </div>
                </div>
            </div>

            <div id="cardSemester" class="col-md-12">
            </div>
        </div>



    </div>
    <div class="col-md-2">
        @if (Model.Members.Any() && Model.ActiveTheses.Any())
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="card mb-3">
                        <div class="card-header">
                            <div class="d-flex justify-content-between align-items-start">
                                <h5 class="card-title">BA/MA-Arbeiten</h5>
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="bi bi-list"></i> Listen
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="#">Ausschreibungen</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Index", "ThesisSupervision")">Übersicht</a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Cleared", "ThesisSupervision")">Abgerechnete</a></li>
                                    </ul>
                                </div>
                            </div>

                        </div>
                        <div class="list-group">
                            @foreach (var thesis in Model.ActiveTheses)
                            {
                                if (thesis.User != null)
                                {

                                    if (thesis.Thesis.DeliveryDate != null)
                                    {
                                        <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "ThesisSupervision", new { id = thesis.Thesis.Id })">
                                            <i class="bi bi-trophy"></i> @thesis.User.FullName (@thesis.Student.Curriculum.ShortName)
                                        </a>
                                    }
                                    else
                                    {
                                        if (thesis.Thesis.Supervisors.Any(x => x.AcceptanceDate == null))
                                        {
                                            <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "ThesisSupervision", new { id = thesis.Thesis.Id })">
                                                <i class="fas fa-question-circle"></i>
                                                @thesis.User.FullName (@thesis.Student.Curriculum.ShortName)
                                                <span class="badge bg-danger">Betreuungsanfrage</span>
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "ThesisSupervision", new { id = thesis.Thesis.Id })">
                                                <i class="bi bi-gear"></i>
                                                @thesis.User.FullName (@thesis.Student.Curriculum.ShortName)
                                                @if (thesis.DaysToExpire == Int32.MaxValue)
                                                {
                                                    <span class="badge bg-danger">Noch nicht angemeldet</span>
                                                }
                                                else
                                                {
                                                    if (thesis.Thesis.RenewalDate != null)
                                                    {
                                                        <span class="badge bg-secondary">@thesis.DaysToExpire Tage bis zur Abgabe (verlängert)</span>
                                                    }
                                                    else
                                                    {
                                                        if (thesis.Thesis.ProlongRequestDate == null)
                                                        {
                                                            <span class="badge bg-secondary">@thesis.DaysToExpire Tage bis zur Abgabe</span>
                                                        }
                                                        else
                                                        {
                                                            if (thesis.Thesis.ProlongSupervisorAccepted == null)
                                                            {
                                                                <span class="badge bg-danger">Antrag auf Verlängerung - unbearbeitet</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="badge bg-secondary">Antrag auf Verlängerung akzeptiert - Bestätigung PKV steht noch aus</span>
                                                            }

                                                        }
                                                    }

                                                }
                                            </a>
                                        }
                                    }
                                }
                                else
                                {
                                    if (thesis.Thesis.DeliveryDate != null)
                                    {
                                        <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "ThesisSupervision", new { id = thesis.Thesis.Id })">
                                            <i class="bi bi-trophy"></i> Unbekannt (@thesis.Student.Curriculum.ShortName)
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="list-group-item list-group-item-action" href="@Url.Action("Details", "ThesisSupervision", new { id = thesis.Thesis.Id })">
                                            <i class="bi bi-gear"></i> Unbekannt (@thesis.Student.Curriculum.ShortName)
                                            <span class="badge bg-secondary">@thesis.DaysToExpire</span>
                                        </a>
                                    }

                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>





@section Scripts {

    <script type="text/javascript" src="@Url.Content("~/Assets/libs/bootstrap-datepicker/js/bootstrap-datepicker.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/libs/bootstrap-datepicker/locales/bootstrap-datepicker.de.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/fillter/scripts/datepicker.js")"></script>
    
    @*
    <script type="module" src="@Url.Content("~/Assets/libs/md-block/md-block.js")"></script>
        *@

    <script>

        document.addEventListener('DOMContentLoaded', function () {
            initDatePickerTopLeft("datepicker", "@ViewBag.Culture.DateTimeFormat.ShortDatePattern", "@ViewBag.Culture.Name");
            onDateChanged("@DateTime.Today.ToString(ViewBag.Culture.DateTimeFormat.ShortDatePattern)");
        });

        document.addEventListener('DOMContentLoaded', function () {
            //$("#cardSemester").hide();
            //$("#placeholderSemester").hide();
            //$("#refreshSemester").hide();
            onSemesterChanged(null);

            //$("#placeholderAgenda").hide();

        });

        function onDateChanged(value) {
            // es kommt der formatierte Text an

            $("#listAgenda").hide();
            $("#placeholderAgenda").show();

            $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("Agenda", "Activity")',
                    data: {
                        day: value
                    },
                    success: function(data, success, xhr) {
                        $('#listAgenda').html(data);
                        $("#listAgenda").show();
                        $("#placeholderAgenda").hide();
                    }
                });
        }


        function onSemesterChanged(semId) {
            // es kommt der formatierte Text an

            $("#refreshSemester").hide();
            $("#cardSemester").hide();
            $("#placeholderSemester").show();


            $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("Semester", "Dashboard")',
                    data: {
                        semId: semId
                    },
                    success: function(data, success, xhr) {
                        $('#cardSemester').html(data);
                        $("#cardSemester").show();
                        $("#placeholderSemester").hide();
                    }
                });
        }


    </script>


}
