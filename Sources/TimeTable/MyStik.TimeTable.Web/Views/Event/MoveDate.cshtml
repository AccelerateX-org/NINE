@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.EventMoveDateModel
@{
    ViewBag.Title = "Termin ändern";
}

@section styles
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/global/plugins/bootstrap-timepicker/css/bootstrap-timepicker.min.css")" />

}


<div class="panel panel-default">
    <div class="panel-body bg-fillter-lecturer">
        <div class="row">
            <div class="col-md-12">
                <h4>@Model.Event.Name (@Model.Event.ShortName)</h4>
                <p>
                    @Model.Date.Begin.ToShortDateString() | @Html.TimeSpan(Model.Date)
                    @foreach (var group in Model.Event.SemesterGroups)
                    {
                        if (group.CurriculumGroup != null)
                        {
                            @group.FullName
                        }
                        else
                        {
                            @Html.Raw("Ohne Zuordnung")
                        }
                        if (group != Model.Event.SemesterGroups.Last())
                        {
                            @Html.Raw(", ")
                        }
                    }
                </p>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    <a class="btn btn-default" href="@Url.Action("Admin", new {id=Model.Event.Id})"><i class="fa fa-left"></i> zurück</a>
                    <a class="btn btn-default" id="saveAll" href="#"><i class="fa fa-save"></i> speichern</a>
                    <div id="saveResult"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">Datum und Zeitraum ändern</div>
                <div class="panel-body">
                    @Html.HiddenFor(m => m.ActivityDateId)
                    <div class="form form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NewDate, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(model => model.NewDate, new { @class = "form-control datepicker", onchange = "onDateChanged()" })

                                @Html.ValidationMessageFor(m => m.NewDate)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.NewBegin, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(model => model.NewBegin, new { @class = "form-control timepicker timepicker-24", onchange = "onBeginChanged()" })

                                @Html.ValidationMessageFor(m => m.NewBegin)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.NewEnd, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(model => model.NewEnd, new { @class = "form-control timepicker timepicker-24", onchange = "onEndChanged()" })

                                @Html.ValidationMessageFor(m => m.NewEnd)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">Räume</div>
                <div class="panel-body">
                    <div id="roomTable">
                        <table class="table table-condensed">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Nummer</th>
                                    <th>Plätze</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var room in Model.Rooms.OrderBy(r => r.Number))
                                {
                                    <tr>
                                        @if (Model.Date.Rooms.Any(r => r.Id == room.Id))
                                        {
                                            <td><input id="@room.Id" type="checkbox" onclick=" toggleDateCheck(this) " value="" checked="checked"></td>
                                        }
                                        else
                                        {
                                            <td><input id="@room.Id" type="checkbox" onclick=" toggleDateCheck(this) " value=""></td>
                                        }

                                        <td>@room.Number</td>
                                        <td>@room.Capacity</td>
                                        <td id="state_@room.Id">unbekannt</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">Dozent(en)</div>
                <div class="panel-body">
                    <div id="lecturerTable">
                        <table class="table table-condensed">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Name</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var doz in Model.Lecturers.OrderBy(r => r.Name))
                                {
                                    <tr>
                                        @if (Model.Date.Hosts.Any(h => h.Id == doz.Id))
                                        {
                                            <td><input id="@doz.Id" type="checkbox" onclick=" toggleDateCheck(this) " value="" checked="checked"></td>
                                        }
                                        else
                                        {
                                            <td><input id="@doz.Id" type="checkbox" onclick=" toggleDateCheck(this) " value=""></td>
                                        }
                                        <td>@doz.Name</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





@section Scripts {

    <script type="text/javascript" src="@Url.Content("~/Assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/global/plugins/bootstrap-datepicker/locales/bootstrap-datepicker.de.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/global/plugins/bootstrap-timepicker/js/bootstrap-timepicker.min.js")"></script>

    <script>

        $(function () {
            $('.datepicker').datepicker({
                orientation: "left",
                autoclose: true,
                format: "dd.mm.yyyy",
                weekStart: 1,
                calendarWeeks: true,
                language: "de"
            });

            $('.timepicker-24').timepicker({
                autoclose: true,
                minuteStep: 15,
                showSeconds: false,
                showMeridian: false
            });

            $('.timepicker').parent('.input-group').on('click', '.input-group-btn', function (e) {
                e.preventDefault();
                $(this).parent('.input-group').find('.timepicker').timepicker('showWidget');
            });
        });

        function onDateChanged() {
            onUpdateRoomState();
        }

        function onBeginChanged() {
            onUpdateRoomState();
        }

        function onEndChanged() {
            onUpdateRoomState();
        }


        function onUpdateRoomState() {

            var newDate = $("#NewDate").val();
            var newBegin = $("#NewBegin").val();
            var newEnd = $("#NewEnd").val();
            var dateId = $("#ActivityDateId").val();


            var list = $("#roomTable > table > tbody > tr input[type='checkbox']").get();
            var n = list.length;
            var i;
            for (i = 0; i < n; i++) {

                $("#state_" + list[i].id).html("<i class=\"fa fa-spinner fa-spin\"></i>");

                $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("GetState", "Room")',
                    data: {
                        dateId: dateId,
                        roomId: list[i].id,
                        date: newDate,
                        begin: newBegin,
                        end: newEnd
                    },
                    success: function (data, success, xhr) {
                        $("#state_" + data.RoomId).html(data.State);
                    }
                });



            }


        }


        function toggleDateCheck(elem) {
            // das elem ist das HTML-Element
            // aus dem mache ich ein jQuery Element
            // dann erst kann ich die DOM Eigenschaft über attr ändern
            // damit sie später auch wieder über jQuery ausgewertet werden kann
            $("#" + elem.id).attr("checked", elem.checked);
        }


        $("#saveAll").click(function () {

            var dateId = $("#ActivityDateId").val();
            var newDate = $("#NewDate").val();
            var newBegin = $("#NewBegin").val();
            var newEnd = $("#NewEnd").val();

            var list = $("#roomTable > table > tbody > tr input[type='checkbox'][checked='checked']").get();
            var n = list.length;
            var roomList = new Array();
            var i;
            for (i = 0; i < n; i++) {
                roomList[i] = list[i].id;
            }

            list = $("#lecturerTable > table > tbody > tr input[type='checkbox'][checked='checked']").get();
            n = list.length;
            var dozList = new Array();
            for (i = 0; i < n; i++) {
                dozList[i] = list[i].id;
            }


            $.ajax(
            {
                type: "POST",
                url: '@Url.Action("MoveDate")',
                data: {
                    ActivityDateId: dateId,
                    NewDate: newDate,
                    NewBegin: newBegin,
                    NewEnd: newEnd,
                    RoomIds: roomList,
                    LecturerIds: dozList
                },
                success: function (data, success, xhr) {
                    $("#saveResult").html(data);
                }
            });
        });


    </script>


}
