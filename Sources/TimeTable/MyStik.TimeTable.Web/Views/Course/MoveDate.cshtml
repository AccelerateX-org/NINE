@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.CourseMoveDateModel
@{
    ViewBag.Title = "Termin ändern";
}

@section styles
{
<link rel="stylesheet" href="@Url.Content("~/Assets/global/plugins/Jquery-ui/jquery-ui.min.css")" />
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css")" />
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/global/plugins/bootstrap-timepicker/css/bootstrap-timepicker.min.css")" />

}


<div class="panel panel-default">
    <div class="panel-body bg-fillter-lecturer">
        <div class="row">
            <div class="col-md-12">
                <h4>@Model.Course.Name.ToUpper() (@Model.Course.ShortName.ToUpper())</h4>
                <p>
                    @Model.Date.Begin.ToShortDateString() | @Html.TimeSpan(Model.Date)
                    @foreach (var group in Model.Course.SemesterGroups)
                    {
                        if (group.CurriculumGroup != null)
                        {
                            @group.FullName
                        }
                        else
                        {
                            @Html.Raw("Ohne Zuordnung")
                        }
                        if (group != Model.Course.SemesterGroups.Last())
                        {
                            @Html.Raw(", ")
                        }
                    }
                </p>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">


    <div class="row">
        <div class="col-md-8">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>
                        <i class="fa fa-calendar"></i> Angaben zu Termin
                    </h4>
                </div>
                <div class="panel-body">
                    @Html.HiddenFor(m => m.ActivityDateId)
                    <div class="form form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NewDate, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.NewDate, new { @class = "form-control datepicker", onchange = "onDateChanged()" })
                                @Html.ValidationMessageFor(m => m.NewDate)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.NewBegin, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.NewBegin, new { @class = "form-control timepicker timepicker-24", onchange = "onBeginChanged()" })
                                @Html.ValidationMessageFor(m => m.NewBegin)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.NewEnd, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.NewEnd, new { @class = "form-control timepicker timepicker-24", onchange = "onEndChanged()" })
                                @Html.ValidationMessageFor(m => m.NewEnd)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label" for="DozTable">Dozent(en)</label>
                            <div class="col-sm-9">
                                <div id="DozTable">
                                    <table class="table table-condensed">
                                        <thead>
                                            <tr>
                                                <th>Fakultät</th>
                                                <th>Name</th>
                                                <th></th>
                                            </tr>
                                            <tr>
                                                <th>
                                                    @Html.DropDownListFor(m => m.OrganiserId2, (IEnumerable<SelectListItem>)ViewBag.Organiser, new { @class = "form-control  input-sm" })
                                                </th>
                                                <th>
                                                    <input type="text" class="form-control  input-sm" id="DozId">
                                                </th>
                                                <th>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="dozList">
                                            @foreach (var doz in Model.Date.Hosts)
                        {
                            <tr id="@doz.Id">
                                <td>@doz.Organiser.ShortName</td>
                                <td>@doz.Name</td>
                                <td>
                                    <button class="btn btn-default btn-sm" onclick="deleteRow('@doz.Id')">
                                        <i class="fa fa-trash-o"></i>
                                    </button>
                                </td>
                            </tr>
    }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label" for="RoomTable">Raum/Räume</label>
                            <div class="col-sm-9">
                                <div id="RoomTable">
                                    <table class="table table-condensed">
                                        <thead>
                                            <tr>
                                                <th>Fakultät</th>
                                                <th>Raumnummer</th>
                                                <th>Status</th>
                                                <th></th>
                                            </tr>
                                            <tr>
                                                <th>
                                                    @Html.DropDownListFor(m => m.OrganiserId3, (IEnumerable<SelectListItem>)ViewBag.Organiser, new { @class = "form-control  input-sm", disabled = "" })
                                                </th>
                                                <th>
                                                    <input type="text" class="form-control  input-sm" id="RoomId">
                                                </th>
                                                <th></th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody id="roomList">
                                            @foreach (var room in Model.Date.Rooms)
                        {
                            <tr id="@room.Id">
                                <td></td>
                                <td>@room.FullName</td>
                                <td id="state_@room.Id">
                                    unbekannt
                                </td>
                                <td>
                                    <button class="btn btn-default btn-sm" onclick="deleteRow('@room.Id')">
                                        <i class="fa fa-trash-o"></i>
                                    </button>
                                </td>
                            </tr>
    }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div id="ConflictTable"></div>

                        <div class="form-group">
                            <div class="col-sm-offset-3 col-sm-9">
                                <a class="btn btn-default" href="@Url.Action("AdminNewDates", new {id = Model.Course.Id})"><i class="fa fa-arrow-left"></i> abbrechen</a>
                                <button class="btn btn-default" onclick="moveDate()"><i class="fa fa-save"></i> speichern</button>
                                <span id="loading"><i class="fa fa-spinner fa-spin text-muted"></i></span>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div id="AvailableTable">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4>
                            <i class="fa fa-check"></i> Verfügbare Räume
                            <a id="btnReload" href="" class="btn btn-default" onclick="reloadFreeRooms()"><i class="fa fa-refresh"></i> </a>
                        </h4>
                    </div>
                    <div class="panel-body">
                        <div id="roomTable">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





@section Scripts {

    <script type="text/javascript" src="@Url.Content("~/Assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/global/plugins/bootstrap-datepicker/locales/bootstrap-datepicker.de.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/global/plugins/bootstrap-timepicker/js/bootstrap-timepicker.min.js")"></script>

    <script>

    var isInit = true;

    $(function() {
        isInit = true;
        checkRoomStates();
        $("#loading").hide();

        $('.datepicker').datepicker({
            orientation: "left",
            autoclose: true,
            format: "dd.mm.yyyy",
            weekStart: 1,
            calendarWeeks: true,
            language: "de"
        });

        $('.timepicker-24').timepicker({
            autoclose: true,
            minuteStep: 15,
            showSeconds: false,
            showMeridian: false
        });

        $('.timepicker').parent('.input-group').on('click', '.input-group-btn', function(e) {
            e.preventDefault();
            $(this).parent('.input-group').find('.timepicker').timepicker('showWidget');
        });

        $('#DozId').autocomplete({
            source: function(request, response) {
                var org = $("#OrganiserId2 option:selected").val();

                $.ajax({
                    url: '@Url.Action("LecturerList", "Curriculum")',
                    type: 'POST',
                    //dataType: "json",

                    data: {
                        orgId: org,
                        name: request.term
                    },

                    success: function(data, success, xhr) {
                        response($.map(data, function(item) {

                            return {
                                text: item.id,
                                label: item.name,
                                value: item.name
                            };
                        }));

                    },

                    error: function(data) { alert(data); },
                });

            },
            select: function(event, ui) {

                var orgText = $("#OrganiserId2 option:selected").text();


                $("#dozList").append("<tr id=\""
                    + ui.item.text + "\"><td>"
                    + orgText + "</td><td>"
                    + ui.item.value + "</td><td><button class=\"btn btn-default btn-sm\" onclick=\"deleteRow('"
                    + ui.item.text + "');\"><i class=\"fa fa-trash-o\"></i></button></td></tr>");

            }
        });


        $('#RoomId').autocomplete({
            source: function(request, response) {
                var org = $("#OrganiserId3 option:selected").val();

                $.ajax({
                    url: '@Url.Action("RoomListByOrg", "Curriculum")',
                    type: 'POST',
                    //dataType: "json",

                    data: {
                        orgId: org,
                        number: request.term
                    },

                    success: function(data, success, xhr) {
                        response($.map(data, function(item) {

                            return {
                                text: item.id,
                                label: item.name + ' - ' + item.capacity + ' Plätze',
                                value: item.name
                            };
                        }));

                    },

                    error: function(data) { alert(data); },
                });

            },
            select: function(event, ui) {

                var roomId = ui.item.text;
                var roomNumber = ui.item.value;

                addRoom(roomId, roomNumber);
            }
        });

        reloadFreeRooms();

        isInit = false;

    });

    function moveDate() {

        $("#loading").show();

        var dateId = $("#ActivityDateId").val();
        var newDate = $("#NewDate").val();
        var newBegin = $("#NewBegin").val();
        var newEnd = $("#NewEnd").val();
        var dozList = new Array();
        var roomList = new Array();

        var list = $("#DozTable > table > tbody > tr").get();
        var n = list.length;
        if (n > 0) {
            for (var i = 0; i < n; i++) {
                dozList[i] = list[i].id;
            }
        }

        list = $("#RoomTable > table > tbody > tr").get();
        n = list.length;
        if (n > 0) {
            for (var i = 0; i < n; i++) {
                roomList[i] = list[i].id;
            }
        }



        $.ajax(
        {
            type: "POST",
            url: '@Url.Action("MoveDate", "Course")',
                data: {
                    ActivityDateId: dateId,
                    NewDate: newDate,
                    NewBegin: newBegin,
                    NewEnd: newEnd,
                    RoomIds: roomList,
                    DozIds: dozList
                },
                success: function(data, success, xhr) {
                    window.location.replace("@Url.Action("AdminNewDates", new {id = Model.Course.Id})");
                }
            });

        }


        function deleteRow(id) {
            $("#" + id).remove();
        }

        function onDateChanged() {
            if (!isInit) {
                checkRoomStates();
                reloadFreeRooms();
            }
        }

        function onBeginChanged() {
            if (!isInit) {
                checkRoomStates();
                reloadFreeRooms();
            }
        }

        function onEndChanged() {
            if (!isInit) {
                checkRoomStates();
                reloadFreeRooms();
            }
        }


        // aktualisiert einen Raum
        function checkRoomState(roomId) {

            var newDate = $("#NewDate").val();
            var newBegin = $("#NewBegin").val();
            var newEnd = $("#NewEnd").val();
            var dateId = $("#ActivityDateId").val();


            var dateList = new Array();
            var n = 1;
            if (n > 0) {
                for (var i = 0; i < n; i++) {

                    dateList[i] = newDate + "#"
                        + newBegin + "#"
                        + newEnd + "#"
                        + "false";

                }

                $("#" + roomId).addClass("info");
                $("#state_" + roomId).innerHTML = "<i class=\"fa fa-spinner fa-spin text-muted\"></i>";

                $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("GetStates", "Room")',
                data: {
                    dateId: dateId,
                    roomId: roomId,
                    dates: dateList
                },
                success: function(data, success, xhr) {
                    $("#" + roomId).removeClass("info");
                    $("#" + roomId).removeClass("success");
                    $("#" + roomId).removeClass("danger");

                    if (data < 0) {
                        $("#state_" + roomId).html("unbekannt");

                    } else if (data == 0) {
                        $("#" + roomId).addClass("success");
                        $("#state_" + roomId).html("verfügbar");
                    } else {
                        $("#" + roomId).addClass("danger");
                        $("#state_" + roomId).html("<button class=\"btn btn-default\" onclick=\"showConflicts('"
                            + roomId
                            + "')\">Konflikte <span class=\"badge\">" + data + "</span></button>");
                    }
                }
            });
        }

    }

    // aktualisiert die Raumliste
    function checkRoomStates() {
        var list = $("#RoomTable > table > tbody > tr").get();
        var n = list.length;
        if (n > 0) {
            for (var i = 0; i < n; i++) {
                checkRoomState(list[i].id);
            }
        }
    }

    function showConflicts(roomId) {
        var newDate = $("#NewDate").val();
        var newBegin = $("#NewBegin").val();
        var newEnd = $("#NewEnd").val();

        var dateList = new Array();
        var n = 1;
        if (n > 0) {
            for (var i = 0; i < n; i++) {
                dateList[i] = newDate + "#"
                    + newBegin + "#"
                    + newEnd + "#"
                    + "false";
            }

            $.ajax(
            {
                type: "POST",
                url: '@Url.Action("GetConflicts", "Room")',
                data: {
                    RoomId: roomId,
                    Dates: dateList
                },
                success: function(data, success, xhr) {
                    $("#ConflictTable").html(data);
                }
            });
        }
    }


    function selectRoom(roomId, roomNumber) {
        // Zuerst die Zeile aus der Tabelle der freien Räume löschen
        deleteRow(roomId);

        // dann erst neue Zeile einfügen
        // Grund: es wird die roomId als id verwendet
        addRoom(roomId, roomNumber);
    }

    function addRoom(roomId, roomNumber) {

        $("#roomList").append("<tr id=\""
            + roomId + "\"><td></td><td>"
            + roomNumber + "</td><td id=\"state_"
            + roomId + "\">unbekannt</td><td><button class=\"btn btn-default btn-sm\" onclick=\"deleteRow('"
            + roomId + "');\"><i class=\"fa fa-trash-o\"></i></button></td></tr>");

        checkRoomState(roomId);

    }

    function reloadFreeRooms() {
        var newDate = $("#NewDate").val();
        var newBegin = $("#NewBegin").val();
        var newEnd = $("#NewEnd").val();

        $.ajax(
        {
            type: "POST",
            url: '@Url.Action("GetAvailableRooms", "Room")',
            data: {
                date: newDate,
                begin: newBegin,
                end: newEnd
            },
            success: function (data, success, xhr) {
                $("#roomTable").html(data);
            }
        });

    }


    </script>


}
