@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.CourseMoveDateModel
@{
    ViewBag.Title = "Termin ändern";
}

@section styles
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/libs/cleditor/jquery.cleditor.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/libs/bootstrap-datepicker/css/bootstrap-datepicker3.min.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/libs/bootstrap-timepicker/css/bootstrap-timepicker.min.css")" />

}


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4>@Model.Course.Name.ToUpper() (@Model.Course.ShortName.ToUpper())</h4>
                <p>
                    @Model.Date.Begin.ToShortDateString() | @Html.TimeSpan(Model.Date)
                    @foreach (var group in Model.Course.SemesterGroups)
                    {
                        if (group.CurriculumGroup != null)
                        {
                            @group.FullName
                        }
                        else
                        {
                            @Html.Raw("Ohne Zuordnung")
                        }
                        if (group != Model.Course.SemesterGroups.Last())
                        {
                            @Html.Raw(", ")
                        }
                    }
                </p>
            </div>
            <div class="list-group">
                <div class="list-group-item">
                    <a class="btn btn-outline-primary" href="@Url.Action("AdminNewDates", new {id = Model.Course.Id})"><i class="bi-arrow-left"></i> zurück</a>
                    <a class="btn btn-outline-primary" id="saveAll" href="javascript:moveDate()"><i class="bi-save"></i> Änderungen speichern</a>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        @Html.HiddenFor(m => m.ActivityDateId)
                        <div class="row mb-3">
                            <h5>Datum, Zeitraum und Beschreibung</h5>
                            <div class="col-4">
                                <div class="form-floating">
                                    <input type="text" class="form-control datepicker" id="NewDate" name="NewDate" onchange="onDateChanged()" value="@Model.NewDate" />
                                    <label for="NewDate">Datum</label>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="form-floating">
                                    <input type="text" class="form-control timepicker timepicker-24" id="NewBegin" name="NewBegin" onchange="onBeginChanged()" value="@Model.NewBegin" />
                                    <label for="NewBegin">Beginn</label>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="form-floating">
                                    <input type="text" class="form-control timepicker timepicker-24" id="NewEnd" name="NewEnd" onchange="onEndChanged()" value="@Model.NewEnd" />
                                    <label for="NewEnd">Ende</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12">
                                <div class="form-floating">
                                    <input type="text" class="form-control" id="Title" name="Title" value="@Model.Title" />
                                    <label for="Title">Titel</label>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-12">
                                <div class="form-floating">
                                    <input type="text" class="form-control" id="ShortInfo" name="ShortInfo" value="@Model.ShortInfo" />
                                    <label for="ShortInfo">Kurzinfo für Kalender</label>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-12">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 10 })
                                @Html.ValidationMessageFor(m => m.Description)
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4">
                        <div class="row mb-3">
                            <div class="col-12">
                                <h5>Dozent(en)</h5>
                                <div id="DozTable">
                                    <table class="table">
                                        <thead>
                                        <tr>
                                            <th>Fakultät</th>
                                            <th>Name</th>
                                            <th></th>
                                        </tr>
                                        <tr>
                                            <th>
                                                @Html.DropDownListFor(m => m.OrganiserId2, (IEnumerable<SelectListItem>)ViewBag.Organiser, new { @class = "form-control" })
                                            </th>
                                            <th>
                                                <input type="text" class="form-control" id="DozId">
                                            </th>
                                            <th>
                                            </th>
                                        </tr>
                                        </thead>
                                        <tbody id="dozList">
                                        @foreach (var doz in Model.Date.Hosts)
                                        {
                                            <tr id="@doz.Id">
                                                <td>@doz.Organiser.ShortName</td>
                                                <td>@doz.Name</td>
                                                <td>
                                                    <button class="btn btn-danger btn-sm" onclick="deleteRow('@doz.Id')">
                                                        <i class="bi-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12">
                                <h5>Raum/Räume</h5>
                                <div id="RoomTable">
                                    <table class="table">
                                        <thead>
                                        <tr>
                                            <th>Fakultät</th>
                                            <th>Raumnummer</th>
                                            <th>Status</th>
                                            <th></th>
                                        </tr>
                                        <tr>
                                            <th>
                                                @Html.DropDownListFor(m => m.OrganiserId3, (IEnumerable<SelectListItem>)ViewBag.Organiser, new { @class = "form-control", disabled = "" })
                                            </th>
                                            <th>
                                                <input type="text" class="form-control" id="RoomId">
                                            </th>
                                            <th></th>
                                            <th></th>
                                        </tr>
                                        </thead>
                                        <tbody id="roomList">
                                        @foreach (var room in Model.Date.Rooms)
                                        {
                                            <tr id="@room.Id">
                                                <td></td>
                                                <td>@room.FullName</td>
                                                <td id="state_@room.Id">
                                                    unbekannt
                                                </td>
                                                <td>
                                                    <button class="btn btn-danger btn-sm" onclick="deleteRow('@room.Id')">
                                                        <i class="bi-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                        </tbody>
                                    </table>
                                </div>
                                <h5>Raumkonflikte</h5>
                                <div id="ConflictTable"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <h4>Freie Räume <span><a href="javascript:reloadFreeRooms()" class="btn btn-outline-primary">Aktualisieren</a></span></h4>
                        <div id="roomTable"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {

    <script type="text/javascript" src="@Url.Content("~/Assets/libs/cleditor/jquery.cleditor.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/libs/bootstrap-datepicker/js/bootstrap-datepicker.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/libs/bootstrap-datepicker/locales/bootstrap-datepicker.de.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/libs/bootstrap-timepicker/js/bootstrap-timepicker.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/fillter/scripts/datepicker.js")"></script>

    <script>

    var isInit = true;

    $(function() {
        isInit = true;
        checkRoomStates();
        $("#loading").hide();

        $("#Description").cleditor();


        $(document).ready(function() {
            initDatePicker("datepicker", "@ViewBag.Culture.DateTimeFormat.ShortDatePattern", "@ViewBag.Culture.Name");
        });

        $('.timepicker-24').timepicker({
            autoclose: true,
            minuteStep: 15,
            showSeconds: false,
            showMeridian: false
        });

        $('.timepicker').parent('.input-group').on('click', '.input-group-btn', function(e) {
            e.preventDefault();
            $(this).parent('.input-group').find('.timepicker').timepicker('showWidget');
        });

        $('#DozId').autocomplete({
            source: function(request, response) {
                var org = $("#OrganiserId2 option:selected").val();

                $.ajax({
                    url: '@Url.Action("LecturerList", "Curriculum")',
                    type: 'POST',
                    //dataType: "json",

                    data: {
                        orgId: org,
                        name: request.term
                    },

                    success: function(data, success, xhr) {
                        response($.map(data, function(item) {

                            return {
                                text: item.id,
                                label: item.name,
                                value: item.name
                            };
                        }));

                    },

                    error: function(data) { alert(data); },
                });

            },
            select: function(event, ui) {

                var orgText = $("#OrganiserId2 option:selected").text();


                $("#dozList").append("<tr id=\""
                    + ui.item.text + "\"><td>"
                    + orgText + "</td><td>"
                    + ui.item.value + "</td><td><button class=\"btn btn-danger btn-sm\" onclick=\"deleteRow('"
                    + ui.item.text + "');\"><i class=\"fas fa-trash\"></i></button></td></tr>");

            }
        });


        $('#RoomId').autocomplete({
            source: function(request, response) {
                var org = $("#OrganiserId3 option:selected").val();

                $.ajax({
                    url: '@Url.Action("RoomListByOrg", "Curriculum")',
                    type: 'POST',
                    //dataType: "json",

                    data: {
                        orgId: org,
                        number: request.term
                    },

                    success: function(data, success, xhr) {
                        response($.map(data, function(item) {

                            return {
                                text: item.id,
                                label: item.name + ' - ' + item.capacity + ' Plätze',
                                value: item.name
                            };
                        }));

                    },

                    error: function(data) { alert(data); },
                });

            },
            select: function(event, ui) {

                var roomId = ui.item.text;
                var roomNumber = ui.item.value;

                addRoom(roomId, roomNumber);
            }
        });

        //reloadFreeRooms();

        isInit = false;

    });

    function moveDate() {

        $("#loading").show();

        var dateId = $("#ActivityDateId").val();
        var newDate = $("#NewDate").val();
        var newBegin = $("#NewBegin").val();
        var newEnd = $("#NewEnd").val();
        var dozList = new Array();
        var roomList = new Array();
        var desc = $("#Description").val();
        var title = $("#Title").val();
        var shortInfo = $("#ShortInfo").val();


        var list = $("#DozTable > table > tbody > tr").get();
        var n = list.length;
        if (n > 0) {
            for (var i = 0; i < n; i++) {
                dozList[i] = list[i].id;
            }
        }

        list = $("#RoomTable > table > tbody > tr").get();
        n = list.length;
        if (n > 0) {
            for (var i = 0; i < n; i++) {
                roomList[i] = list[i].id;
            }
        }



        $.ajax(
        {
            type: "POST",
            url: '@Url.Action("MoveDate", "Course")',
                data: {
                    ActivityDateId: dateId,
                    NewDate: newDate,
                    NewBegin: newBegin,
                    NewEnd: newEnd,
                    RoomIds: roomList,
                    DozIds: dozList,
                    Description: desc,
                    Title: title,
                    ShortInfo: shortInfo
                },
                success: function(data, success, xhr) {
                    window.location.replace("@Url.Action("AdminNewDates", new {id = Model.Course.Id})");
                }
            });

        }


        function deleteRow(id) {
            $("#" + id).remove();
        }

        function onDateChanged() {
            if (!isInit) {
                checkRoomStates();
                //reloadFreeRooms();
            }
        }

        function onBeginChanged() {
            if (!isInit) {
                checkRoomStates();
                //reloadFreeRooms();
            }
        }

        function onEndChanged() {
            if (!isInit) {
                checkRoomStates();
                //reloadFreeRooms();
            }
        }


        // aktualisiert einen Raum
        function checkRoomState(roomId) {

            var newDate = $("#NewDate").val();
            var newBegin = $("#NewBegin").val();
            var newEnd = $("#NewEnd").val();
            var dateId = $("#ActivityDateId").val();


            var dateList = new Array();
            var n = 1;
            if (n > 0) {
                for (var i = 0; i < n; i++) {

                    dateList[i] = newDate + "#"
                        + newBegin + "#"
                        + newEnd + "#"
                        + "false";

                }

                $("#" + roomId).addClass("info");
                $("#state_" + roomId).innerHTML = "<i class=\"fa fa-spinner fa-spin text-muted\"></i>";

                $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("GetStates", "Room")',
                data: {
                    dateId: dateId,
                    roomId: roomId,
                    dates: dateList
                },
                success: function(data, success, xhr) {
                    $("#" + roomId).removeClass("info");
                    $("#" + roomId).removeClass("success");
                    $("#" + roomId).removeClass("danger");

                    if (data < 0) {
                        $("#state_" + roomId).html("unbekannt");

                    } else if (data == 0) {
                        $("#" + roomId).addClass("success");
                        $("#state_" + roomId).html("verfügbar");
                    } else {
                        $("#" + roomId).addClass("danger");
                        $("#state_" + roomId).html("<button class=\"btn btn-outline-primary\" onclick=\"showConflicts('"
                            + roomId
                            + "')\">Konflikte <span class=\"badge\">" + data + "</span></button>");
                    }
                }
            });
        }

    }

    // aktualisiert die Raumliste
    function checkRoomStates() {
        var list = $("#RoomTable > table > tbody > tr").get();
        var n = list.length;
        if (n > 0) {
            for (var i = 0; i < n; i++) {
                checkRoomState(list[i].id);
            }
        }
    }

    function showConflicts(roomId) {
        var newDate = $("#NewDate").val();
        var newBegin = $("#NewBegin").val();
        var newEnd = $("#NewEnd").val();

        var dateList = new Array();
        var n = 1;
        if (n > 0) {
            for (var i = 0; i < n; i++) {
                dateList[i] = newDate + "#"
                    + newBegin + "#"
                    + newEnd + "#"
                    + "false";
            }

            $.ajax(
            {
                type: "POST",
                url: '@Url.Action("GetConflicts", "Room")',
                data: {
                    RoomId: roomId,
                    Dates: dateList
                },
                success: function(data, success, xhr) {
                    $("#ConflictTable").html(data);
                }
            });
        }
    }


    function selectRoom(roomId, roomNumber) {
        // Zuerst die Zeile aus der Tabelle der freien Räume löschen
        deleteRow(roomId);

        // dann erst neue Zeile einfügen
        // Grund: es wird die roomId als id verwendet
        addRoom(roomId, roomNumber);
    }

    function addRoom(roomId, roomNumber) {

        $("#roomList").append("<tr id=\""
            + roomId + "\"><td></td><td>"
            + roomNumber + "</td><td id=\"state_"
            + roomId + "\">unbekannt</td><td><button class=\"btn btn-danger btn-sm\" onclick=\"deleteRow('"
            + roomId + "');\"><i class=\"fas fa-trash\"></i></button></td></tr>");

        checkRoomState(roomId);

    }

    function reloadFreeRooms() {
        var org = $("#OrganiserId3 option:selected").val();
        var newDate = $("#NewDate").val();
        var newBegin = $("#NewBegin").val();
        var newEnd = $("#NewEnd").val();

        $.ajax(
        {
            type: "POST",
            url: '@Url.Action("GetAvailableRooms", "Room")',
                data: {
                    orgId: org,
                    date: newDate,
                    begin: newBegin,
                    end: newEnd
            },
            success: function (data, success, xhr) {
                $("#roomTable").html(data);
            }
        });

    }


    </script>


}
