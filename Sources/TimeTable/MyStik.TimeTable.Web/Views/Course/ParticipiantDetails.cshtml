@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.UserCoursePlanViewModel

@{
    var hasLottery = Model.Summary.Lottery != null && Model.Summary.Lottery.LastDrawing >= DateTime.Now;
    var hasPrio1 = hasLottery && Model.Subscription.Priority.HasValue && (Model.Subscription.Priority.Value == 1) && Model.Summary.Lottery.AllowManualSubscription;
}


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                @if (Model.User != null)
                {
                    <h4>@Model.User.FullName</h4>
                }
                else
                {
                    <h4 class="text-danger">Kein Benutzerkonto vorhanden</h4>
                }
            </div>
            
            <div class="list-group">
                <div class="list-group-item">
                    <div class="btn-group">
                        <a class="btn btn-outline-secondary" href="@Url.Action("AdminNewParticipients", new {id=Model.Course.Id})"><i class="fas fa-chevron-left"></i> zurück</a>
                    </div>
                </div>
                <div class="list-group-item">
                    @if (Model.Subscription.OnWaitingList)
                    {
                        <h5>Status Warteliste</h5>
                    }
                    else
                    {
                        <h5>Status Teilnehmer</h5>
                    }
                    @if (string.IsNullOrEmpty(Model.Subscription.SubscriberRemark))
                    {
                        <h5>Keine Bemerkung des Studierenden vorhanden</h5>
                    }
                    else
                    {
                        <div class="well">
                            <i>@Model.Subscription.SubscriberRemark</i>
                        </div>
                    }
                    @if (string.IsNullOrEmpty(Model.Subscription.HostRemark))
                    {
                        <h5>Keine Bemerkung systemseitig vorhanden</h5>
                    }
                    else
                    {
                        <div class="well">
                            <i>@Model.Subscription.HostRemark</i>
                        </div>
                    }
                    <div class="btn-group btn-group-justified" role="group" aria-label="...">
                        @if (Model.User != null)
                        {
                            <a href="mailto:@Model.User.Email" class="btn btn-outline-primary"><i class="bi-envelope"></i> E-Mail schreiben</a>

                            if (!Model.Course.IsInternal || ViewBag.UserRight.IsCourseAdmin)
                            {
                                if (Model.Subscription.OnWaitingList)
                                {
                                    if ((!hasLottery || ViewBag.UserRight.IsCourseAdmin) ||
                                        (hasLottery && hasPrio1))
                                    {
                                        <a href="@Url.Action("SetOnParticipiantList2", new {Id = Model.Subscription.Occurrence.Id, userId = Model.User.Id})" class="btn btn-outline-success"><i class="fa fa-group"></i> Auf Teilnehmerliste setzen</a>
                                    }
                                }
                                else
                                {
                                    if (!hasLottery || ViewBag.UserRight.IsCourseAdmin)
                                    {
                                        <a href="@Url.Action("SetOnWaitingList2", new {Id = Model.Subscription.Occurrence.Id, userId = Model.User.Id})" class="btn btn-outline-warning"><i class="fa fa-hourglass-half"></i> Auf Warteliste setzen</a>
                                    }
                                }
                            }
                        }
                    </div>
                </div>
                <div class="list-group-item">
                    <table class="table table-condensed">
                        <thead>
                        <tr>
                            <th>Bezeichnung</th>
                            <th>Gruppe(n)</th>
                            <th>Dozent(en)</th>
                            <th>Status</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model.CourseSubscriptions)
                        {
                            var linkText = item.CourseSummary.Course.Name + " (" + item.CourseSummary.Course.ShortName + ")";
                            <tr>
                                <td>
                                    @Html.ActionLink(linkText, "Index", "Course", new {id = item.CourseSummary.Course.Id}, null)
                                </td>
                                <td>
                                    @Html.GroupList(item.CourseSummary.Course.SemesterGroups)
                                </td>
                                <td>
                                    @Html.LecturerList(item.CourseSummary.Lecturers)
                                </td>
                                <td>
                                    @if (item.Subscription.OnWaitingList)
                                    {
                                        <i class="fa fa-hourglass-half"></i>
                                    }
                                    else
                                    {
                                        <i class="fa fa-group"></i>
                                    }
                                    @if (item.CourseSummary.Lottery != null)
                                    {
                                        <i class="fa fa-random"></i>
                                    }
                                </td>
                            </tr>

                        }
                        </tbody>
                    </table>

                </div>
                <div class="list-group-item">
                    @if ((!Model.Course.IsInternal && !hasLottery) || ViewBag.UserRight.IsCourseAdmin)
                    {
                        <a href="@Url.Action("RemoveSubscription2", new {Id = Model.Subscription.Id})" class="btn btn-outline-danger"><i class="fas fa-times"></i> Austragen</a>
                    }

                </div>
            </div>
            

        </div>
    </div>
</div>
