@using System.Web.ModelBinding
@using MyStik.TimeTable.Web.Helpers
@using MyStik.TimeTable.Web.Models
@model MyStik.TimeTable.Web.Models.CourseSelectModel
@{
    ViewBag.Title = "Lehrveranstaltung";
}

@section styles {
    <style>
        #wikitext img {
            max-width: 100%;
            height: auto;
        }
    </style>
}

<div class="row">
<div class="col-md-12">
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i class="bi-grid"></i></a></li>
        @if (Model.Summary.Course.Organiser != null)
        {
            <li class="breadcrumb-item"><a href="@Url.Action("Faculty", "University", new { id = Model.Summary.Course.Organiser.Id })">@Model.Summary.Course.Organiser.ShortName</a></li>
        }
        @if (Model.Summary.Course.Semester != null)
        {
            <li class="breadcrumb-item"><a href="@Url.Action("Organiser", "Dictionary", new { semId = Model.Summary.Course.Semester.Id, orgId = Model.Summary.Course.Organiser.Id })">@Model.Summary.Course.Semester.Name</a></li>
        }
        <li class="breadcrumb-item active" aria-current="page">@Model.Summary.Course.ShortName</li>
    </ol>
</nav>
<div class="row">
@if (ViewBag.UserRight.IsHost || ViewBag.UserRight.IsOwner || ViewBag.UserRight.IsCourseAdmin)
{
    var attrDisabled = "";
    <div class="col-md-2">
        <div class="card mb-3">
            <div class="list-group">
                @Html.Partial("_CourseSummarySubscription", Model.Summary)
                @if (Model.Summary.Course.IsInternal)
                {
                    attrDisabled = "disabled";
                    if (ViewBag.UserRight.IsCourseAdmin || ViewBag.UserRight.IsOwner)
                    {
                        attrDisabled = "";
                    }
                    <div class="list-group-item list-group-item-info">
                        <i class="bi-lock"></i> Gesperrt - Aktuell können nur Administratoren und Besitzer Änderungen vornehmen.
                    </div>
                }
                @if (Model.Summary.Course.IsProjected)
                {
                    <div class="list-group-item list-group-item-info">
                        <i class="bi-layer-backward"></i> Lehrveranstaltung im Planungsmodus. Studierende können den Kurs nicht sehen.
                    </div>
                }
            </div>
        </div>
        <div class="card">
            <div class="list-group">
                <a class="list-group-item list-group-item-action @attrDisabled" href="@Url.Action("CustomOccurrenceMail", "Mailing", new {id=Model.Summary.Course.Occurrence.Id})">
                    <i class="bi-envelope"></i> Nachricht senden
                </a>
                <a class="list-group-item list-group-item-actionn @attrDisabled" href="@Url.Action("AdminNewDates", new {id = Model.Summary.Course.Id})">
                    <i class="bi-calendar"></i> Terminverwaltung
                </a>
                <a class="list-group-item list-group-item-actionn @attrDisabled" href="@Url.Action("AdminNewParticipients", new {id = Model.Summary.Course.Id})">
                    <i class="bi-people"></i> Teilnehmende
                </a>
                <a class="list-group-item list-group-item-actionn @attrDisabled" href="@Url.Action("AdminNewInfos", new {id = Model.Summary.Course.Id})">
                    <i class="bi-gear"></i> Allgemeine Angaben
                </a>
                <a class="list-group-item list-group-item-actionn @attrDisabled" href="@Url.Action("AdminNewDictionary", new {id = Model.Summary.Course.Id})">
                    <i class="bi-collection-play"></i> Semester
                </a>
                <a class="list-group-item list-group-item-actionn @attrDisabled" href="@Url.Action("AdminNewLabels", new {id = Model.Summary.Course.Id})">
                    <i class="bi-tags"></i> Etiketten / Kohorten
                </a>
                <a class="list-group-item list-group-item-actionn @attrDisabled" href="@Url.Action("AdminNewSubjects", new {id = Model.Summary.Course.Id})">
                    <i class="bi-book"></i> Modul / Fach
                </a>
                <a class="list-group-item list-group-item-actionn @attrDisabled" href="@Url.Action("AdminNewRules", new {id = Model.Summary.Course.Id})">
                    <i class="bi-pencil-square"></i> Platzkontingente
                </a>
                <a class="list-group-item list-group-item-actionn @attrDisabled" href="@Url.Action("AdminNewState", new {id = Model.Summary.Course.Id})">
                    <i class="bi-ui-radios"></i> Freigaben / Status
                </a>
                @if (ViewBag.UserRight.IsCourseAdmin || ViewBag.UserRight.IsOwner)
                {
                    <a class="list-group-item list-group-item-action" href="@Url.Action("Owners", new {id = Model.Summary.Course.Id})">
                        <i class="bi-person"></i> Besitzer
                    </a>
                    <a class="list-group-item list-group-item-action list-group-item-danger" href="@Url.Action("DeleteCourse", new {id = Model.Summary.Course.Id})">
                        <i class="bi-trash"></i> Löschen
                    </a>
                }
            </div>
            <div class="list-group">
                @if(string.IsNullOrEmpty(Model.Summary.Course.ExternalSource))
                {
                    <div class="list-group-item">
                        Angelegt von:
                        @foreach (var own in Model.Summary.Course.Owners)
                        {
                            <div>@own.Member.FullName</div>
                        }
                    </div>
                }
                else
                {
                    <div class="list-group-item">
                        importiert aus @Model.Summary.Course.ExternalSource (@Model.Summary.Course.ExternalId)
                    </div>
                }
                <div class="list-group-item">
                    @if (Model.Summary.Course.Semester != null && Model.Summary.Course.Organiser != null)
                    {
                        <div>
                            Zuordnung Vorlesungsverzeichnis:
                            @Model.Summary.Course.Semester.Name | @Model.Summary.Course.Organiser.ShortName
                        </div>
                    }
                    else
                    {
                        <div>Keine Zuordnung zum Vorlesungsverzeichnis</div>
                    }
                </div>
            </div>
        </div>
    </div>
}
<div class="col-md-10">
<div class="row">
    <div class="col-md-6">
        <div class="card mb-3">
            <div class="card-body">
                <div class="row">
                    <div class="col-12 mb-1">
                        <strong>@Model.Summary.Course.ShortName: @Model.Summary.Course.Name</strong>
                    </div>
                </div>
                <div class="row">
                    <div class="col-4">
                        Etiketten / Kohorten
                    </div>
                    <div class="col-8">
                        @if (Model.Summary.Course.LabelSet != null)
                        {
                            foreach (var label in Model.Summary.Course.LabelSet.ItemLabels)
                            {
                                <span class="badge bg-secondary">@label.Name</span>
                            }
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-4">
                        Modulbeschreibung
                    </div>
                    <div class="col-8">
                        @foreach (var t2 in Model.Summary.Course.SubjectTeachings)
                        {
                            <div>
                                @if (Model.Summary.Course.Semester != null)
                                {
                                    <a href="@Url.Action("Semester", "ModuleDescription", new { moduleId = t2.Subject.Module.Id, semId = Model.Summary.Course.Semester.Id })">Modulbeschreibung</a>
                                }
                                else
                                {
                                    <a href="@Url.Action("Details", "ModuleDescription", new { id = t2.Subject.Module.Id })">Modulbeschreibung</a>
                                }
                            </div>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-4">
                        Inhaltsbeschreibung
                    </div>
                    <div class="col-8">
                        <div>
                            <a href="#cardDetails">Details zur Lehrveranstaltung</a>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-4">
                        Ressourcen
                    </div>
                    <div class="col-8">
                        @if (string.IsNullOrEmpty(Model.Summary.Course.UrlMoodleCourse) && string.IsNullOrEmpty(Model.Summary.Course.KeyMoodleCourse))
                        {
                            <div><i>Kein moodle-Kurs hinterlegt</i></div>
                        }
                        else
                        {
                            <div>
                                <a href="@Model.Summary.Course.UrlMoodleCourse" target="_blank">Moodle</a>
                                @if (!string.IsNullOrEmpty(Model.Summary.Course.KeyMoodleCourse))
                                {
                                    <span>(Zugangsschlüssel <strong>@Model.Summary.Course.KeyMoodleCourse</strong>)</span>
                                }
                            </div>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-4">
                        Nächster Termin
                    </div>
                    <div class="col-8">
                        @if (Model.Summary.CurrentDate != null)
                        {
                            <div>
                                @Html.TimeSpanWithDate(Model.Summary.CurrentDate) | @Html.RoomList(Model.Summary.CurrentDate.Rooms) | @Html.LecturerList(Model.Summary.CurrentDate.Hosts)
                            </div>
                            <div><strong>@Model.Summary.CurrentDate.Title</strong></div>
                            <div>
                                @Html.Raw(Model.Summary.CurrentDate.Description)
                            </div>
                        }
                        else
                        {
                            <div><i>keine zukünftigen Termine</i></div>
                        }
                        <div>
                            <a href="#cardDates">Alle Termine</a>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-4">
                        Platzkontingente
                    </div>
                    <div class="col-8">
                        @if (Model.Summary.Course.Occurrence.SeatQuotas.Any())
                        {
                            foreach (var quota in Model.Summary.Course.Occurrence.SeatQuotas)
                            {
                                <div>@quota.Summary</div>
                            }
                            if (Model.Summary.Lottery != null)
                            {
                                <div>Platzvergabe über das Wahlverfahren
                                    <a href="@Url.Action("Details", "Lottery", new {id=Model.Summary.Lottery.Id})">@Model.Summary.Lottery.Name</a>
                                </div>
                            }
                            else
                            {
                                <div>Platzvergabe nach zeitlicher Reihenfolge der Eintragungen.</div>
                            }
                        }
                        else
                        {
                            <div>Offene Veranstaltung ohne Kontingente</div>
                        }
                    </div>
                </div>
                <div class="row bg-light-subtle">
                    <div class="col-4">
                        Meine Eintragung
                    </div>
                    <div class="col-8">
                        <div>
                            @if (Request.IsAuthenticated && (ViewBag.UserRight.User.MemberState == MemberState.Student || ViewBag.UserRight.User.MemberState == MemberState.Staff))
                            {
                                @Html.Partial("_CourseSummaryBooking", Model)
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div id="cardDates" class="card mb-3">
            <div class="card-body">
                <div class="row">
                    <div class="col-12 mb-1">
                        <strong>Alle Termine</strong>
                    </div>
                </div>
                <div class="row">
                    <div class="col-5">
                    </div>
                    <div class="col-3">
                        <div><i class="bi-building-check"></i></div>
                    </div>
                    <div class="col-4">
                        <div><i class="bi-person-gear"></i></div>
                    </div>
                </div>
                <div class="list-group">

                    @foreach (var date in Model.Summary.Course.Dates.OrderBy(x => x.Begin))
                    {
                        <div class="list-group-item">
                            <div class="row">
                                <div class="col-5">
                                    @Html.TimeSpanWithDate(date)
                                </div>
                                <div class="col-3">
                                    <div>@Html.RoomList(date.Rooms)</div>
                                </div>
                                <div class="col-4">
                                    <div>@Html.LecturerList(date.Hosts)</div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="offset-2 col-md-10">
                                    <strong>@date.Title</strong>
                                    <div>@Html.Raw(date.Description)</div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
                </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div id="cardDetails" class="card">
            <div class="card-body">
                <strong>Details zur Lehrveranstaltung</strong>
                @if (string.IsNullOrEmpty(Model.Summary.Course.Description))
                {
                    <i>Keine weiteren Detailinformationen vorhanden</i>
                }
                else
                {
                    <div>@Html.Raw(Model.Summary.Course.Description)</div>
                }
            </div>
        </div>
    </div>
</div>
</div>
</div>
</div>
</div>



@section scripts
{
    <script>
        function onSubscribe(e) {
            //alert('#'+e);
            $('#bookingBox').addClass('disabled');
            $('#bookingBox').html('<i class="fa fa-circle-o-notch fa-spin fa-2x"></i>');

            $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("Subscribe", "Dictionary")',
                    data: {
                        Id: e
                    },
                    success: function(data, success, xhr) {
                        $('#bookingBox').html(data);
                        $('#bookingBox').removeClass('disabled');
                    }
                });

        }
    </script>
}


