@using System.Globalization
@using MyStik.TimeTable.Web.Helpers
@using MyStik.TimeTable.Web.Models
@model  CourseSelectModel

@{
    ViewBag.Title = "Lehrveranstaltung";
}

@{
    var linkDescription = string.Format("desc{0}", Model.Summary.Course.Id);
    var linkDates = string.Format("dates{0}", Model.Summary.Course.Id);
    var linkFit = string.Format("fit{0}", Model.Summary.Course.Id);
    var linkNonFit = string.Format("nonfit{0}", Model.Summary.Course.Id);
    var linkConflicts = string.Format("conflicts{0}", Model.Summary.Course.Id);

}


<div class="container-fluid">
    <div class="row" style="margin-top: 20px">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>@Model.Summary.Course.Name (@Model.Summary.Course.ShortName)</h4>
                    <ul class="fa-ul">
                        <li>
                            <i class="fa-li fa fa-user-md"></i>
                            @if (Model.Summary.Lecturers.Any())
                            {
                                @Html.LecturerList(Model.Summary.Lecturers, showLinks: false)
                            }
                            else
                            {
                                <i>Keine Angabe zu Lehrenden verfügbar</i>
                            }
                        </li>
                        <li>
                            @if (Model.Summary.Dates.Count == 1)
                            {
                                <i class="fa-li fa fa-calendar"></i>
                                <span>immer @Html.Date(Model.Summary.Dates.First()) in [@Html.RoomList(Model.Summary.Rooms, showLinks: false)]</span>
                            }
                            else
                            {
                                <i class="fa-li fa fa-calendar"></i>
                                <span>insgesamt @Model.Summary.Course.Dates.Count Termine zu verschiedenen Zeiten / Tagen</span>
                            }
                        </li>
                        <li>
                            <i class="fa-li fa fa-group"></i>
                            @Html.GroupList(Model.Summary.Course.SemesterGroups, showLink: false)
                        </li>
                    </ul>
                </div>
                <div class="list-group">
                    <div class="list-group-item">
                        @if (string.IsNullOrEmpty(Model.Summary.Course.Description))
                        {
                            <h5 class="list-group-item-heading"><i>Keine Beschreibung vorhanden</i></h5>
                        }
                        else
                        {
                            <h5 class="list-group-item-heading">Beschreibung</h5>
                            <div class="list-group-item-text">@Html.Raw(Model.Summary.Course.Description)</div>
                        }
                    </div>
                    <div class="list-group-item">
                        <span class="badge badge-danger">14 Terminkollisionen</span>
                        <h5 class="list-group-item-heading">
                            <a href="#@linkDates" data-toggle="collapse">Termine</a>
                        </h5>
                        <div class="list-group collapse" id="@linkDates">
                            @foreach (var date in Model.Summary.Course.Dates)
                            {
                                <div class="list-group-item">
                                    @Html.TimeSpanWithDate(date)
                                </div>
                            }
                        </div>
                    </div>
                    <div class="list-group-item">
                        <h5 class="list-group-item-heading">Rahmenbedingungen für Eintragungen</h5>
                        <div class="list-group-item-text">
                            <ul class="fa-ul">
                                @if (Model.Summary.Course.Occurrence.Capacity < 0)
                                {
                                    <li><i class="fa-li fa fa-ticket"></i> keine Platzbeschränkungen</li>
                                }
                                else
                                {
                                    if (Model.Summary.Course.Occurrence.UseGroups)
                                    {
                                        <li><i class="fa-li fa fa-ticket"></i> Platzkontingent getrennt nach Studiengängen</li>
                                    }
                                    else
                                    {
                                        <li><i class="fa-li fa fa-ticket"></i> Platzkontingent @Model.Summary.Course.Occurrence.Capacity Plätze</li>
                                    }
                                }
                                @if (Model.Summary.Course.Occurrence.HasHomeBias)
                                {
                                    if (Model.Summary.Course.Occurrence.IsCoterie)
                                    {
                                        <li><i class="fa-li fa fa-id-card"></i> Nur Studierende der angegebenen Studiengänge können sich eintragen</li>
                                    }
                                    else
                                    {
                                        <li><i class="fa-li fa fa-id-card"></i> Studierende der angegebenen Studiengänge werden bevorzugt. Studierende anderer Studiengänge landen automatisch auf der Warteliste</li>
                                    }
                                }
                                else
                                {
                                    <li><i class="fa-li fa fa-id-card"></i> Jeder Studierende kann sich eintragen</li>
                                }
                            </ul>
                        </div>
                    </div>
                    @if (Request.IsAuthenticated && ViewBag.UserRight.User.MemberState != MemberState.Guest)
                    {
                        if (Model.Summary.Lottery != null)
                        {
                            <div class="panel-body">
                                <p>Diese Lehrveranstaltung gehört zu Wahlverfahren "@Model.Summary.Lottery.Name".</p>
                                <p>Ein- / Austragen findet über das Wahlverfahren statt.</p>
                                <a href="@Url.Action("Overview", "Lottery", new {id=Model.Summary.Lottery.Id})" class="btn btn-primary"><i class="fa fa-random"></i> Zum Wahlverfahren</a>
                            </div>
                        }
                        else
                        {
                            if (Model.Subscription != null)
                            {
                                <div class="panel-body">
                                    @if (Model.Subscription.OnWaitingList)
                                    {
                                        <p>Mein Eintrag befindet sich auf der <strong>Warteliste</strong>.</p>
                                    }
                                    else
                                    {
                                        <p>Mein Eintrag befindet sich auf der <strong>Teilnehmerliste</strong>.</p>
                                    }
                                    <a href="" class="btn btn-danger"><i class="fa fa-times"></i> Austragen</a>
                                </div>
                            }
                            else
                            {
                                if (Model.BookingState.IsAvailable)
                                {
                                    <div class="panel-body" id="selectBox">
                                        @if (Model.BookingState.IsUnrestricted)
                                        {
                                            <p>Keine Einschränkung. Eintragen auf Teilnehmerliste</p>
                                        }
                                        else
                                        {
                                            if (Model.BookingState.AvailableSeats <= 0)
                                            {
                                                <p>Alle Plätze belegt. Eintragung nur auf Warteliste möglich</p>
                                            }
                                            else
                                            {
                                                <p>Aktuell noch @Model.BookingState.AvailableSeats Plätze verfügbar. Eintragung auf Teilnehmerliste (first come first serve)</p>
                                            }
                                        }
                                        <a class="btn btn-primary"  href="javascript:onSubscribe('@Model.Summary.Course.Occurrence.Id')"><i class="fa fa-pencil"></i> Eintragen</a>
                                    </div>
                                }
                                else
                                {
                                    <div class="panel-body">
                                        <div class="alert alert-danger">
                                            <h5>Keine Eintragung möglich</h5>
                                            <p>Gründe</p>
                                            <ul>
                                                @foreach (var reason in Model.BookingState.Reasons)
                                                {
                                                    <li>@reason</li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                }

                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts
{
    <script>
        function onSubscribe(e) {
            //alert('#'+e);
            $('#selectBox').addClass('disabled');
            $('#selectBox').html('<i class="fa fa-circle-o-notch fa-spin fa-2x"></i>');
            var saveElement = $('#selectBox');

            $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("Subscribe", "Booking")',
                    data: {
                        Id: e
                    },
                    success: function(data, success, xhr) {
                        saveElement.html(data);
                    }
                });

        }

        @*
        $(document).ready(function() {
            $('.selectable').click(function() {
                if ($(this).hasClass('disabled'))
                    return;

                $(this).addClass('disabled');

                var saveElement = $(this).parent();

                saveElement.html('<i class="fa fa-circle-o-notch fa-spin fa-2x"></i>');

                var ocId = $(this).data("occid");

                $.ajax(
                    {
                        type: "POST",
                        url: '@Url.Action("Subscribe", "Booking")',
                        data: {
                            Id: ocId
                        },
                        success: function(data, success, xhr) {
                            saveElement.html(data);
                        }
                    });

            });
        });
        *@
    </script>
}