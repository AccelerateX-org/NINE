@model MyStik.TimeTable.Web.Models.MemberUserViewModel
@{
    ViewBag.Title = "Person anlegen";
}

@section styles
{
    <link rel="stylesheet" href="@Url.Content("~/Assets/global/plugins/Jquery-ui/jquery-ui.min.css")" />
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4>Neuen Lehrenden anlegen</h4>
                <h5>Angaben zur Identifizierung innerhalb von @ViewBag.Organiser.ShortName</h5>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("CreateMember", "Organiser", FormMethod.Post, new { role = "form" }
                    ))
                {
                    @Html.AntiForgeryToken()
                    if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                    {
                        <div class="alert alert-danger">
                            @Html.ValidationSummary(true)
                        </div>
                    }
                    <div>
                        @Html.HiddenFor(item => item.OrganiserId)
                    </div>

                    <div class="row mb-1">
                        <div class="col-4">
                            @Html.LabelFor(item => item.ShortName, new { @class = "form-label" })
                        </div>
                        <div class="col-2">
                            @Html.TextBoxFor(item => item.ShortName, new { @class = "form-control" })
                        </div>
                        <div class="col-6">
                            Hinweis: muss eindeutig sein, sonst wird Lehrender nicht angelegt
                        </div>
                    </div>
                    <div class="row mb-1">
                        <div class="col-4">
                            @Html.LabelFor(item => item.Name, new { @class = "form-label" })
                        </div>
                        <div class="col-8">
                            @Html.TextBoxFor(item => item.Name, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row mb-1">
                        <div class="col-4">
                            @Html.LabelFor(item => item.FirstName, new { @class = "form-label" })
                        </div>
                        <div class="col-8">
                            @Html.TextBoxFor(item => item.FirstName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row mb-1">
                        <div class="col-4">
                            @Html.LabelFor(item => item.Title, new { @class = "form-label" })
                        </div>
                        <div class="col-8">
                            @Html.TextBoxFor(item => item.Title, new { @class = "form-control" })
                        </div>
                    </div>
<div class="row mb-1">
                        <div class="col-4">
                            @Html.LabelFor(item => item.UserName, new { @class = "form-label" })
                        </div>
                        <div class="col-4">
                            @Html.TextBoxFor(item => item.UserName, new { @class = "form-control" })
                        </div>
                        <div class="col-4">
                            <div>Kann leer bleiben und später ergänzt werden</div>
                        </div>
                    </div>
                    <div class="row mb-1">
                        <div class="col-4">
                            @Html.LabelFor(item => item.Role, new { @class = "form-label" })
                        </div>
                        <div class="col-8">
                            @Html.TextBoxFor(item => item.Role, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row mb-1">
                        <div class="col-4">
                        </div>
                        <div class="col-8">
                            @Html.CheckBoxFor(item => item.IsAssociated, new { @class = "form-check-input" })
                            @Html.LabelFor(item => item.IsAssociated, new { @class = "form-check-label" })
                        </div>
                    </div>

                    <button type="submit" class="btn btn-outline-primary">
                        <i class="bi-save"> Anlegen</i>
                    </button>
                    <a href="@Url.Action("Organiser", "Lecturer", new {id =ViewBag.Organiser.Id})" class="btn btn-outline-secondary">
                        <i class="bi-x"> Abbrechen</i>
                    </a>
                }
            </div>
                    </div>
                </div>
                    </div>



                    @section scripts
{
                        <script>
        $(function () {
            $('#UserName').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("UserList")',
                        type: 'POST',
                        //dataType: "json",

                        data: {
                            token: request.term
                        },

                        success: function (data, success, xhr) {
                            response($.map(data, function (item) {

                                return {
                                    label: item.userName + ' (' + item.firstName + ' ' + item.lastName + ')',
                                    value: item.userName
                                };
                            }));

                        },

                        error: function (data) { alert(data); },
                    });

                },
                select: function (event, ui) { }
            });
        });
                        </script>
                    }

