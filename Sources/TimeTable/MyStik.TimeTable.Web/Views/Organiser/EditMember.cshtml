@model MyStik.TimeTable.Web.Models.MemberUserViewModel
@{
    ViewBag.Title = "Person ändern";
}

@section styles
{
    <link rel="stylesheet" href="@Url.Content("~/Assets/global/plugins/Jquery-ui/jquery-ui.min.css")" />
}

<div class="panel panel-default">
    <div class="panel-body bg-fillter-lecturer">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <h1>Lehrender @Model.Name (@Model.ShortName)</h1>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <h4 class="panel-heading">
                    <i class="fa fa-user"></i> Angaben zur Identifizierung innerhalb von @ViewBag.Member.Organiser.ShortName
                </h4>
                <div class="panel-body">
                    @using (Html.BeginForm("EditMember", "Organiser", FormMethod.Post, new { @class = "form-horizontal", role = "form" }
        ))
    {
                @Html.AntiForgeryToken()
        if (ViewData.ModelState.Any(x => x.Value.Errors.Any())) 
        { 
            <div class="alert alert-danger"> 
                @Html.ValidationSummary(true)
            </div>
        }
        <div class="form-group">
                    @Html.HiddenFor(item => item.MemberId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(item => item.Name, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(item => item.Name, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(item => item.ShortName, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(item => item.ShortName, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(item => item.UserName, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(item => item.UserName, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(item => item.Role, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(item => item.Role, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        @Html.CheckBoxFor(item => item.IsAssociated)
                        @Html.LabelFor(item => item.IsAssociated, new { @class = "control-label" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" value="Speichern" class="btn btn-primary" />
                    </div>
                </div>
}
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts
{
        <script>
            $(function () {
                $('#UserName').autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '@Url.Action("UserList")',
                            type: 'POST',
                            //dataType: "json",

                            data: {
                                token: request.term
                            },

                            success: function (data, success, xhr) {
                                response($.map(data, function (item) {

                                    return {
                                        label: item.userName + ' (' + item.firstName + ' ' + item.lastName + ')',
                                        value: item.userName
                                    };
                                }));

                            },

                            error: function (data) { alert(data); },
                        });

                    },
                    select: function (event, ui) { }
                });
            });
        </script>
    }
