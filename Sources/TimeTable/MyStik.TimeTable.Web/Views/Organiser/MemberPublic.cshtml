@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.LecturerCharacteristicModel

@{
    Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";
    ViewBag.Title = Model.Lecturer.FullName;
}


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4>
                    @Model.Lecturer.FullName
                    @if (!string.IsNullOrEmpty(Model.Lecturer.UrlProfile))
                    {
                        <small>
                            |
                            <a href="@Model.Lecturer.UrlProfile" target="_blank">
                                Profilseite @Model.Lecturer.Organiser.ShortName <i class="fas fa-external-link-alt"></i>
                            </a>
                        </small>
                    }
                </h4>
            </div>
            <div class="list-group">
                <div class="list-group-item">
                    <div class="btn-group">
                            <a class="btn btn-outline-primary text-center" href="@Url.Action("Calendar", new {id = Model.Lecturer.Id})"><i class="fas fa-calendar-alt fa-fw"></i><br />Kalender</a>
                        @if (ViewBag.UserRight.IsMemberAdmin)
                        {
                                <a class="btn btn-outline-primary text-center" href="@Url.Action("MemberAdmin", new {id=Model.Lecturer.Id})"><i class="fas fa-cogs fa-fw"></i><br/>Einstellungen</a>
                        }
                    </div>
                </div>
            </div>

            <div class="list-group">
                <div class="list-group-item  list-group-item-secondary">
                    <h5>Aktuelle Sprechstunden</h5>
                </div>
                @foreach (var o in Model.OfficeHours)
                {
                    if (o.OfficeHour.ByAgreement)
                    {
                        if (string.IsNullOrEmpty(o.OfficeHour.Description))
                        {
                            <div class="list-group-item">@o.OfficeHour.Name - Nach Vereinbarung</div>
                        }
                        else
                        {
                            <div class="list-group-item">
                                <h5> @o.OfficeHour.Name - Nach Vereinbarung</h5>
                                <p>@Html.Raw(o.OfficeHour.Description)</p>
                            </div>
                        }
                    }
                    else
                    {
                        var dateMin = o.OfficeHour.Dates.OrderBy(x => x.Begin).FirstOrDefault();
                        var dateMax = o.OfficeHour.Dates.OrderBy(x => x.End).LastOrDefault();

                        if (dateMin != null && dateMax != null)
                        {
                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <h5>@o.OfficeHour.Name</h5>
                                    <p>@Html.Raw(o.OfficeHour.Description)</p>
                                </div>
                                <div class="btn-group" role="group" aria-label="Basic example">
                                    <a href="@Url.Action("Details", "OfficeHour", new {id = o.OfficeHour.Id})" class="btn btn-outline-secondary btn-sm" title="Einstellungen">
                                        <i class="fas fa-info-circle"></i> Details & Eintragung
                                    </a>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <h5>@o.OfficeHour.Name</h5>
                                    <p>@Html.Raw(o.OfficeHour.Description)</p>
                                </div>
                                <div class="btn-group" role="group" aria-label="Basic example">
                                    <a href="@Url.Action("Details", "OfficeHour", new {id = o.OfficeHour.Id})" class="btn btn-outline-secondary btn-sm" title="Einstellungen">
                                        <i class="fas fa-info-circle"></i> Details & Eintragung
                                    </a>
                                </div>
                            </div>
                        }
                    }
                }
                <div class="list-group-item  list-group-item-secondary">
                    <h5>Lehrveranstaltungen im @Model.Semester.Name</h5>
                </div>
                @foreach (var course in Model.Courses)
                {
                    var nWaiting = course.Course.Occurrence.Subscriptions.Count(x => x.OnWaitingList);
                    var nCount = course.Course.Occurrence.Subscriptions.Count;
                    var nPart = nCount - nWaiting;


                    <div class="list-group-item">
                        <div class="d-flex w-100 justify-content-between">
                            <p class="mb-1">@course.Course.ShortName: @course.Course.Name (@Html.GroupList(course.Course.SemesterGroups, showAvailability: false, showLink: false))</p>
                            <div class="btn-group" role="group" aria-label="Basic example">
                                <a href="@Url.Action("Details", "Course", new {id = course.Course.Id})" class="btn btn-outline-secondary btn-sm" title="Details">
                                    <i class="fas fa-info-circle"></i> Details & Eintragung
                                </a>
                            </div>
                        </div>
                        @if (course.Dates.Count == 1)
                        {
                            <ul class="mb-1 fa-ul">
                                <li>
                                    <span class="fa-li"><i class="fas fa-calendar-day"></i></span>
                                    @Html.Date(course.Dates.First())
                                </li>
                                @if (course.VirtualRooms.Any())
                                {
                                    <li>
                                        <span class="fa-li"><i class="fas fa-tv"></i></span>
                                        online: @Html.RoomList(course.VirtualRooms)
                                    </li>
                                }
                                @if (course.Rooms.Any())
                                {
                                    <li>
                                        <span class="fa-li"><i class="fas fa-building"></i></span>
                                        vor Ort: @Html.RoomList(course.Rooms)
                                    </li>
                                }
                            </ul>

                        }
                        else
                        {
                            <p class="mb-1">Diverse Zeiten - siehe Terminliste unter "Details & Eintragung"</p>
                        }
                    </div>



                    @*
                <div class="list-group-item d-flex justify-content-between align-items-center">
                    @course.Course.ShortName: @course.Course.Name (@Html.GroupList(course.Course.SemesterGroups, showAvailability: false, showLink: false))
                    <div class="btn-group" role="group" aria-label="Basic example">
                        <a href="@Url.Action("Details", "Course", new {id = course.Course.Id})" class="btn btn-outline-secondary btn-sm" title="Einstellungen">
                            <i class="fas fa-info-circle"></i> Details & Eintragung
                        </a>
                    </div>
                </div>
                    *@

                }
            </div>
        </div>
    </div>
</div>
