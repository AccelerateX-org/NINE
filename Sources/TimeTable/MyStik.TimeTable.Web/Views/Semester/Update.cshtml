@model MyStik.TimeTable.Data.Semester
@{
    ViewBag.Title = "Update";
}
@section styles
{
    @Styles.Render("~/Content/themes/base/css")
}


<div class="row">
    <div class="col-md-offset-3 col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">Semester bearbeiten</h4>
            </div>
            <div class="panel-body">

                @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    <fieldset>
                        @Html.ValidationSummary(true)

                        <div class="form-group">
                            @Html.LabelFor(m => m.Name, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Name)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartCourses, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(model => model.StartCourses, "{0:dd.MM.yyyy}", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.StartCourses)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EndCourses, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-6">
                                @Html.TextBoxFor(model => model.EndCourses, "{0:dd.MM.yyyy}", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.EndCourses)
                            </div>
                        </div>



                        

                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-10">
                                <input type="submit" value="speichern" class="btn btn-default" />
                                <input type="button" src="#" value="abbrechen" class="btn btn-default" />
                            </div>
                        </div>
                    </fieldset>
                }

            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jquery-ui")

    <script>
        (function($, Globalize) {

            // Clone original methods we want to call into
            var originalMethods = {
                min: $.validator.methods.min,
                max: $.validator.methods.max,
                range: $.validator.methods.range
            };

            // Tell the validator that we want numbers parsed using Globalize

            $.validator.methods.number = function(value, element) {
                var val = Globalize.parseFloat(value);
                return this.optional(element) || ($.isNumeric(val));
            };

            // Tell the validator that we want dates parsed using Globalize

            $.validator.methods.date = function(value, element) {
                var val = Globalize.parseDate(value);
                return this.optional(element) || (val);
            };

            // Tell the validator that we want numbers parsed using Globalize,
            // then call into original implementation with parsed value

            $.validator.methods.min = function(value, element, param) {
                var val = Globalize.parseFloat(value);
                return originalMethods.min.call(this, val, element, param);
            };

            $.validator.methods.max = function(value, element, param) {
                var val = Globalize.parseFloat(value);
                return originalMethods.max.call(this, val, element, param);
            };

            $.validator.methods.range = function(value, element, param) {
                var val = Globalize.parseFloat(value);
                return originalMethods.range.call(this, val, element, param);
            };

        }(jQuery, Globalize));


        $(function() {
            Globalize.culture('de-DE');
            $("#StartCourses").datepicker(
                {
                    dateFormat: 'dd.mm.yy',
                    option: 'de-DE'
                }
            );
            $("#EndCourses").datepicker(
                {
                    dateFormat: 'dd.mm.yy',
                    option: 'de-DE'
                }
            );
        });

    </script>
}