@using System.Data.Entity
@using MyStik.TimeTable.Data
@model MyStik.TimeTable.Web.Models.SemesterViewModel

@{
    ViewBag.Title = "Einsatzplanung";


    var db = new TimeTableDbContext();
}


@section styles
{
    <link href="@Url.Content("~/Assets/libs/datatables/dataTables.min.css")" rel="stylesheet" type="text/css" />
}

@section scripts
{
    <script src="@Url.Content("~/Assets/libs/datatables/dataTables.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Assets/libs/moment/moment.min.js")" type="text/javascript" "></script>
    <script src="@Url.Content("~/Assets/libs/datatables/plugins/sorting/datetime-moment.js")" type="text/javascript"></script>

    <script>
        $(document).ready(function () {
            $.fn.dataTable.moment('DD.MM.YYYY');
            $.fn.dataTable.moment('(DD.MM.YYYY)');

            $('#tabMember').DataTable({
                "paging": false
            });
        });
    </script>
}


<div class="row">
    <div class="col-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i class="bi bi-grid"></i></a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Faculty", "University", new {id=Model.Organiser.Id})">@Model.Organiser.ShortName</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Semester", new {id=Model.Organiser.Id})">Semesterplanung</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Details", "Semester", new {orgId=Model.Organiser.Id, semId=Model.Semester.Id})">@Model.Semester.Name</a></li>
                <li class="breadcrumb-item active" aria-current="page">Einsatzplanung</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title">Einsatzplanung</h5>
            </div>
            <table id="tabMember" class="table">
                <thead>
                    <tr>
                        <th>Kürzel</th>
                        <th>Name</th>
                        <th>Vorname</th>
                        <th>Verfügbarkeiten</th>
                        <th>Modulbereich</th>
                        <th>Stundenplan</th>
                        <th>SWS</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var member in Model.Organiser.Members.OrderBy(x => x.Name))
                    {
                        var pds = db.Activities.OfType<PersonalDate>().Where(x =>
                            x.Organiser.Id == Model.Organiser.Id &&
                            x.Semester.Id == Model.Semester.Id &&
                            x.Owners.Any(m => m.Member.Id == member.Id)).ToList();


                        var catalogs = db.CurriculumModuleCatalogs.Where(x => x.CatalogResponsibilities.Any(r => r.Member.UserId.Equals(member.UserId))).Include(curriculumModuleCatalog => curriculumModuleCatalog.Modules).ToList();

                        var modules = db.CurriculumModules.Where(x => x.ModuleResponsibilities.Any(r => r.Member.UserId.Equals(member.UserId))).ToList();

                        foreach (var catalog in catalogs)
                        {
                            foreach (var module in catalog.Modules.ToList())
                            {
                                var m = modules.FirstOrDefault(x => x.Id == module.Id);
                                if (m == null)
                                {
                                    modules.Add(module);
                                }
                            }
                        }

                        var courses = db.Activities.OfType<Course>().Where(x =>
                            x.Organiser.Id == Model.Organiser.Id &&
                            x.Semester.Id == Model.Semester.Id &&
                            x.Dates.Any(d => d.Hosts.Any(m => m.Id == member.Id))).ToList();

                        if (courses.Any())
                        {
                            <tr>
                                <td>@member.ShortName</td>
                                <td>@member.Name</td>
                                <td>@member.FirstName</td>
                                <td>
                                    @foreach (var pd in pds)
                                    {
                                        <div>@pd.Segment.Description | @pd.Dates.Count </div>
                                    }
                                </td>
                                <td>
                                    <a href="@Url.Action("Responsibility", "Courses", new { memberId = member.Id, id = Model.Semester.Id})">@modules.Count</a>
                                </td>
                                <td>
                                    <a href="@Url.Action("MemberPlanWeekly", "Activity", new { memberId = member.Id, id = Model.Semester.Id})">@courses.Count</a>
                                </td>
                                <td></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>