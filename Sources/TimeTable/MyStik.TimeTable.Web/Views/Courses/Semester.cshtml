@using MyStik.TimeTable.Data
@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.OrganiserViewModel
@{
    ViewBag.Title = "Lehrangebot";

    @*
        var db = new TimeTableDbContext();

        var datesToDelete = new List<ActivityDate>();

        var match = false;
        if (Model.Organiser.ShortName == "FK 11" &&
            Model.Semester.Name == "WiSe 2025")
        {
            match = true;
            var org = db.Organisers.SingleOrDefault(x => x.Id == Model.Organiser.Id);
            var sem = db.Semesters.SingleOrDefault(x => x.Id == Model.Semester.Id);


            foreach (var c in Model.Courses)
            {
                var nDates = c.Course.Dates.Count();
                var occs = c.Course.Dates.Select(x => x.Occurrence).Distinct();
                var nOccs = occs.Count();
                var nDiff = nDates - nOccs;

                if (nDiff == 0)
                {
                    continue;
                }

                foreach (var occ in occs)
                {
                    var dates = db.ActivityDates.Where(x => x.Occurrence.Id == occ.Id).ToList();

                    if (dates.Count() == 1)
                    {
                        continue;
                    }

                    datesToDelete.Add(dates.First());
                }
            }

            //db.SaveChanges();
        }
        *@
}

@section styles
{
    <link href="@Url.Content("~/Assets/libs/datatables/dataTables.min.css")" rel="stylesheet" type="text/css" />
}


@section scripts
{
    <script src="@Url.Content("~/Assets/libs/datatables/dataTables.min.js")" type="text/javascript"></script>

    @if (ViewBag.UserRight.IsCourseAdmin)
    {
        <script>
            $(document).ready(function() {
                $('#tabCourses').DataTable({
                    dom: 'Bfrtip',
                    buttons: [
                        'copy', 'excel'
                    ],
                    "paging": false
                });
            });

            function onTogglePublished(id) {
                var elem = $("#togglePublish");
                if (elem.hasClass("text-success")) {

                    $.ajax(
                        {
                            type: "POST",
                            url: '@Url.Action("TogglePublished")',
                            data: {
                                id: id,
                                isPublished: false
                            },
                            success: function(data, success, xhr) {
                                elem.removeClass("text-success");
                                elem.removeClass("bi-check-square");

                                elem.addClass("text-danger");
                                elem.addClass("bi-x-square");
                            }
                        });


                } else {
                    $.ajax(
                        {
                            type: "POST",
                            url: '@Url.Action("TogglePublished")',
                            data: {
                                id: id,
                                isPublished: true
                            },
                            success: function(data, success, xhr) {
                                elem.removeClass("text-danger");
                                elem.removeClass("bi-x-square");

                                elem.addClass("text-success");
                                elem.addClass("bi-check-square");
                            }
                        });


                }
            }

            function onToggleLocked(id) {
                var elem = $("#toggleLocked");
                if (elem.hasClass("text-success")) {

                    $.ajax(
                        {
                            type: "POST",
                            url: '@Url.Action("ToggleLocked")',
                            data: {
                                id: id,
                                isLocked: true
                            },
                            success: function(data, success, xhr) {
                                elem.removeClass("text-success");
                                elem.removeClass("bi-unlock");

                                elem.addClass("text-danger");
                                elem.addClass("bi-lock");
                            }
                        });


                } else {
                    $.ajax(
                        {
                            type: "POST",
                            url: '@Url.Action("ToggleLocked")',
                            data: {
                                id: id,
                                isLocked: false
                            },
                            success: function(data, success, xhr) {
                                elem.removeClass("text-danger");
                                elem.removeClass("bi-lock");

                                elem.addClass("text-success");
                                elem.addClass("bi-unlock");
                            }
                        });


                }
            }

            function onToggleSubscribable(id) {
                var elem = $("#toggleSubscribable");
                if (elem.hasClass("text-success")) {

                    $.ajax(
                        {
                            type: "POST",
                            url: '@Url.Action("ToggleSubscribable")',
                            data: {
                                id: id,
                                isAvailable: false
                            },
                            success: function(data, success, xhr) {
                                elem.removeClass("text-success");

                                elem.addClass("text-danger");
                            }
                        });


                } else {
                    $.ajax(
                        {
                            type: "POST",
                            url: '@Url.Action("ToggleSubscribable")',
                            data: {
                                id: id,
                                isAvailable: true
                            },
                            success: function(data, success, xhr) {
                                elem.removeClass("text-danger");

                                elem.addClass("text-success");
                            }
                        });


                }
            }

        </script>
    }
    else
    {
        <script>
            $(document).ready(function() {
                $('#tabCourses').DataTable({
                    "paging": false
                });
            });
        </script>
    }

}

<div class="row">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i class="bi bi-grid"></i></a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dictionary")">Vorlesungsverzeichnis</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Semester", "Dictionary", new {semId=Model.Semester.Id})">@Model.Semester.Name</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Organiser", "Dictionary", new {orgId=Model.Organiser.Id, semId=Model.Semester.Id})">@Model.Organiser.ShortName</a></li>
            <li class="breadcrumb-item active" aria-current="page">Komplettes Lehrangebot</li>
        </ol>
    </nav>
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="alert alert-info">
                    <div class="row">
                        <div class="col-md-4">
                            <ul>
                                <li><i class="bi bi-check-square text-success"></i>: Lehrveranstaltung sichtbar</li>
                                <li><i class="bi bi-x-square text-danger"></i>: Lehrveranstaltung im Planungsmodus</li>
                            </ul>
                        </div>
                        <div class="col-md-4">
                            <ul>
                                <li><i class="bi bi-unlock text-success"></i>: Lehrende können Änderungen vornehmen</li>
                                <li><i class="bi bi-lock text-danger"></i>: Lehrende können keine Änderungen vornehmen</li>
                            </ul>
                        </div>
                        <div class="col-md-4">
                            <ul>
                                <li><i class="bi bi-pen-fill text-success"></i>: Studierende können sich eintragen</li>
                                <li><i class="bi bi-pen-fill text-danger"></i>: Studierende können sich nicht eintragen</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            @if (ViewBag.UserRight.IsCourseAdmin)
            {
                <div class="list-group">
                    <div class="list-group-item">
                        <a href="@Url.Action("SemesterReport", new { semId = Model.Semester.Id, orgId = Model.Organiser.Id })" class="btn btn-outline-primary">
                            <i class="bi bi-download"></i> Semesterbericht
                        </a>
                    </div>
                </div>
            }
            <table id="tabCourses" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Status</th>
                        <th>Kurzname</th>
                        <th>Titel</th>
                        <th>Kohorten</th>
                        <th>Abschnitt</th>
                        <th>Zeitraum</th>
                        <th>Raumangabe(n)</th>
                        <th>Lehrende</th>
                        <th>Platzkontingente</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var c in Model.Courses)
                    {
                        var show = !c.Course.IsProjected || (ViewBag.UserRight.IsCurriculumAdmin || ViewBag.UserRight.Member != null);

                        if (show)
                        {
                            var linkName = "Kein Kurzname";
                            if (!string.IsNullOrEmpty(c.Course.ShortName))
                            {
                                linkName = c.Course.ShortName;
                            }
                            <tr>
                                @if (ViewBag.UserRight.IsCourseAdmin)
                                {
                                    <td>
                                        <div class="btn-group">
                                            @if (c.Course.IsProjected)
                                            {
                                                <a href="javascript:onTogglePublished('@c.Course.Id.ToString()')" class="btn btn-sm btn-outline-dark"><i id="togglePublish" class="bi bi-x-square text-danger"></i></a>
                                            }
                                            else
                                            {
                                                <a href="javascript:onTogglePublished('@c.Course.Id.ToString()')" class="btn btn-sm btn-outline-dark"><i id="togglePublish" class="bi bi-check-square text-success"></i></a>
                                            }
                                            @if (c.Course.IsInternal)
                                            {
                                                <a href="javascript:onToggleLocked('@c.Course.Id.ToString()')" class="btn btn-sm btn-outline-dark"><i id="toggleLocked" class="bi bi-lock text-danger"></i></a>
                                            }
                                            else
                                            {
                                                <a href="javascript:onToggleLocked('@c.Course.Id.ToString()')" class="btn btn-sm btn-outline-dark"><i id="toggleLocked" class="bi bi-unlock text-success"></i></a>
                                            }
                                            @if (!c.Course.Occurrence.IsAvailable)
                                            {
                                                <a href="javascript:onToggleSubscribable('@c.Course.Occurrence.Id')" class="btn btn-sm btn-outline-dark"><i id="toggleSubscribable" class="bi bi-pen-fill text-danger"></i></a>
                                            }
                                            else
                                            {
                                                <a href="javascript:onToggleSubscribable('@c.Course.Occurrence.Id')" class="btn btn-sm btn-outline-dark"><i id="toggleSubscribable" class="bi bi-pen-fill text-success"></i></a>
                                            }
                                        </div>
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        @if (c.Course.IsProjected)
                                        {
                                            <i class="bi bi-x-square text-danger"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-check-square text-success"></i>
                                        }
                                        @if (c.Course.IsInternal)
                                        {
                                            <i class="bi bi-lock text-danger"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-unlock text-success"></i>
                                        }
                                        @if (!c.Course.Occurrence.IsAvailable)
                                        {
                                            <i class="bi bi-pen-fill text-danger"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-pen-fill text-success"></i>
                                        }
                                    </td>
                                }
                                <td>
                                    @Html.ActionLink(linkName, "Index", "Course", new { id = c.Course.Id }, null)
                                </td>
                                <td>
                                    @c.Course.Name
                                </td>
                                <td>
                                    @if (c.Course.LabelSet != null)
                                    {
                                        @Html.LabelList(c.Course)
                                    }
                                </td>
                                <td>
                                    @if (c.Course.Segment != null)
                                    {
                                        <div>@c.Course.Segment.Description</div>
                                    }
                                </td>
                                <td>
                                    @Html.DateList(c.Dates)
                                </td>
                                <td>
                                    @Html.RoomList(c.Rooms)
                                </td>
                                <td>
                                    @Html.LecturerList(c.Lecturers)
                                </td>
                                <td>
                                    @if (c.Course.Occurrence.SeatQuotas.Any())
                                    {
                                        foreach (var quota in c.Course.Occurrence.SeatQuotas)
                                        {
                                            <div>@quota.Summary</div>
                                        }
                                    }
                                    else
                                    {
                                        if (c.Course.Occurrence.Capacity < 1)
                                        {
                                            <div>Offene Liste</div>
                                        }
                                        else
                                        {
                                            <div>Alte Systematik: @c.Course.Occurrence.Capacity Plätze</div>
                                            /*
                                            foreach (var label in c.Course.LabelSet.ItemLabels)
                                            {
                                                var curr = db.Curricula.FirstOrDefault(x => x.LabelSet.ItemLabels.Any(l => l.Id == label.Id));
                                                if (curr != null)
                                                {
                                                    <div>Alte Systematik: @c.Course.Occurrence.Capacity Plätze</div>
                                                    <div>Kontingent für SG @curr.ShortName kann erstellt werden</div>
                                                }
                                                else
                                                {
                                                    <div>FEHLER: Kein Label für Studiengang - Kein Kontingent möglich</div>
                                                }
                                            }
                                            */
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>


        </div>
    </div>

</div>
@*
<div class="row">
    <div class="col-md-12">
        <ul>
            @foreach (var activityDate in datesToDelete)
            {
                <li>
                    <a href="@Url.Action("AdminNewDates", "Course", new { id = activityDate.Activity.Id })" target="_blank">@activityDate.Activity.ShortName</a>: 
                    @Html.TimeSpanWithDate(activityDate): 
                    <a href="@Url.Action("DeleteDateRepair", "Course", new { dateId = activityDate.Id })" target="_blank">Löschen</a>
                </li>
            }
        </ul>
    </div>
</div>
    *@