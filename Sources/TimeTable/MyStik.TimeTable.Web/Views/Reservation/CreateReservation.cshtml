@model MyStik.TimeTable.Web.Models.ReservationCreateModel
@{
    ViewBag.Title = "Raumreservierung anlegen";
}

@section styles
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/libs/cleditor/jquery.cleditor.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/libs/bootstrap-datepicker/css/bootstrap-datepicker3.min.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Assets/libs/bootstrap-timepicker/css/bootstrap-timepicker.min.css")" />
}


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4>Neue Raumreservierung anlegen (@ViewBag.Organiser2.ShortName)</h4>
            </div>
            <div class="list-group">
                <div class="list-group-item">
                    <div class="btn-group">
                        <a class="btn btn-outline-primary" href="@Url.Action("Index")"><i class="fa fa-arrow-left"></i> zurück</a>
                        <a class="btn btn-outline-primary" id="saveAll" href="#"><i class="fa fa-save"></i> Reservierung anlegen</a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h5>Allgemeine Angaben</h5>
                            </div>
                            <div class="card-body">
                                <div class="mb-3 row">
                                    @Html.LabelFor(model => model.Name, new { @class = "col-sm-4 col-form-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="mb-3 row">
                                    @Html.LabelFor(model => model.Description, new { @class = "col-sm-4 col-form-label" })
                                    <div class="col-sm-8">
                                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Beschreibung des Kurses" })
                                    </div>
                                </div>
                                <div class="mb-3 row">
                                    @Html.LabelFor(model => model.NewDate, new { @class = "col-sm-4 col-form-label" })
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(model => model.NewDate, new { @class = "form-control datepicker", onchange = "onDateChanged()" })

                                        @Html.ValidationMessageFor(m => m.NewDate)
                                    </div>
                                </div>
                                <div class="mb-3 row">
                                    @Html.LabelFor(model => model.NewBegin, new { @class = "col-sm-4 col-form-label" })
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(model => model.NewBegin, new { @class = "form-control timepicker timepicker-24", onchange = "onBeginChanged()" })
                                        @Html.ValidationMessageFor(m => m.NewBegin)
                                    </div>
                                </div>
                                <div class="mb-3 row">
                                    @Html.LabelFor(model => model.NewEnd, new { @class = "col-sm-4 col-form-label" })
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(model => model.NewEnd, new { @class = "form-control timepicker timepicker-24", onchange = "onEndChanged()" })
                                        @Html.ValidationMessageFor(m => m.NewEnd)
                                    </div>
                                </div>
                                <div class="mb-3 row">
                                    <label class="col-md-4">
                                        <input id="IsDaily" name="IsDaily" type="checkbox" value="false" />
                                        Termine bis zum Datum täglich generieren
                                    </label>
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(model => model.DailyEnd, new { @class = "form-control datepicker", onchange = "onDateChanged()" })

                                        @Html.ValidationMessageFor(m => m.DailyEnd)
                                    </div>
                                </div>
                                <div class="mb-3 row">
                                    <label class="col-md-4">
                                        <input id="IsWeekly" name="IsWeekly" type="checkbox" value="false" />
                                        Alle täglichen Termine bis zum Datum auf Wochenbasis generieren
                                    </label>
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(model => model.WeeklyEnd, new { @class = "form-control datepicker", onchange = "onDateChanged()" })

                                        @Html.ValidationMessageFor(m => m.WeeklyEnd)
                                    </div>
                                </div>
                                <div class="mb-3 row">
                                    <label class="col-sm-4 col-form-label" for="DozTable">Lehrende (Veranstalter)</label>
                                    <div class="col-sm-8">
                                        <div id="DozTable">
                                            <table class="table table-condensed">
                                                <thead>
                                                <tr>
                                                    <th>Fakultät</th>
                                                    <th>Name</th>
                                                    <th>
                                                    </th>
                                                </tr>
                                                <tr>
                                                    <th>
                                                        @Html.DropDownListFor(m => m.OrganiserId, (IEnumerable<SelectListItem>)ViewBag.Organiser, new { @class = "form-control form-select" })
                                                    </th>
                                                    <th>
                                                        <input type="text" class="form-control" id="DozId">
                                                    </th>
                                                    <th>
                                                    </th>
                                                </tr>

                                                </thead>
                                                <tbody id="dozList"></tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h5>Räume</h5>
                            </div>
                            <div id="roomTable">
                                <table class="table table-condensed">
                                    <thead>
                                    <tr>
                                        <th></th>
                                        <th>Nummer</th>
                                        <th>Plätze</th>
                                        <th>Status</th>
                                    </tr>
                                    </thead>
                                    <tbody>
                                    @foreach (var room in Model.Rooms.OrderBy(r => r.Number))
                                    {
                                        <tr>
                                            <td><input id="@room.Id" type="checkbox" onclick=" toggleDateCheck(this) " value=""></td>
                                            <td>@room.Number</td>
                                            <td>@room.Capacity</td>
                                            <td id="state_@room.Id">unbekannt</td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>







        @section Scripts {
            
            <script type="text/javascript" src="@Url.Content("~/Assets/libs/cleditor/jquery.cleditor.min.js")" type="text/javascript"></script>
            <script type="text/javascript" src="@Url.Content("~/Assets/libs/bootstrap-datepicker/js/bootstrap-datepicker.min.js")"></script>
            <script type="text/javascript" src="@Url.Content("~/Assets/libs/bootstrap-datepicker/locales/bootstrap-datepicker.de.min.js")"></script>
            <script type="text/javascript" src="@Url.Content("~/Assets/libs/bootstrap-timepicker/js/bootstrap-timepicker.min.js")"></script>
            <script type="text/javascript" src="@Url.Content("~/Assets/fillter/scripts/datepicker.js")"></script>

            <script>

        $(function () {
            $("#Description").cleditor();

            initDatePicker("datepicker", "@ViewBag.Culture.DateTimeFormat.ShortDatePattern", "@ViewBag.Culture.Name");


            $('.timepicker-24').timepicker({
                autoclose: true,
                minuteStep: 15,
                showSeconds: false,
                showMeridian: false
            });

            $('.timepicker').parent('.input-group').on('click', '.input-group-btn', function(e) {
                e.preventDefault();
                $(this).parent('.input-group').find('.timepicker').timepicker('showWidget');
            });


            $('#DozId').autocomplete({
                source: function (request, response) {

                    var org = $("#OrganiserId option:selected").val();

                    console.log(request.term);

                    $.ajax({
                        url: '@Url.Action("LecturerList", "Curriculum")',
                        type: 'POST',
                        //dataType: "json",

                        data: {
                            orgId: org,
                            name: request.term
                        },

                        success: function (data, success, xhr) {

                            console.log(data);

                            response($.map(data, function(item) {

                                return {
                                    text: item.id,
                                    label: item.name + " (" + item.shortname + ")",
                                    value: item.name + " (" + item.shortname + ")"
                                };
                            }));

                        },

                        error: function(data) { alert(data); },
                    });

                },
                select: function(event, ui) {

                    var orgText = $("#OrganiserId option:selected").text();


                    $("#dozList").append("<tr id=\""
                        + ui.item.text + "\"><td>"
                        + orgText + "</td><td>"
                        + ui.item.value + "</td><td><button class=\"btn btn-outline-primary\" onclick=\"deleteRow('"
                        + ui.item.text + "');\"><i class=\"fas fa-trash\"></i></button></td></tr>");

                },
            });



        });


        function onDateChanged() {
            onUpdateRoomState();
        }

        function onBeginChanged() {
            onUpdateRoomState();
        }

        function onEndChanged() {
            onUpdateRoomState();
        }


        function onUpdateRoomState() {

            var newDate = $("#NewDate").val();
            var newBegin = $("#NewBegin").val();
            var newEnd = $("#NewEnd").val();
            var isWeekly = $("#IsWeekly").val();


            var list = $("#roomTable > table > tbody > tr input[type='checkbox']").get();
            var n = list.length;
            var i;
            for (i = 0; i < n; i++) {

                $("#state_" + list[i].id).html("<i class=\"fa fa-spinner fa-spin\"></i>");


                if (isWeekly == "true") {
                    $.ajax(
                    {
                        type: "POST",
                        url: '@Url.Action("GetStateWeekly", "Room")',
                        data: {
                            dateId: null,
                            roomId: list[i].id,
                            date: newDate,
                            begin: newBegin,
                            end: newEnd
                        },
                        success: function (data, success, xhr) {
                            $("#state_" + data.RoomId).html(data.State);
                        }
                    });
                } else {
                    $.ajax(
                    {
                        type: "POST",
                        url: '@Url.Action("GetState", "Room")',
                        data: {
                            dateId: null,
                            roomId: list[i].id,
                            date: newDate,
                            begin: newBegin,
                            end: newEnd
                        },
                        success: function(data, success, xhr) {
                            $("#state_" + data.RoomId).html(data.State);
                        }
                    });

                }
            }


        }


        function toggleDateCheck(elem) {
            // das elem ist das HTML-Element
            // aus dem mache ich ein jQuery Element
            // dann erst kann ich die DOM Eigenschaft über attr ändern
            // damit sie später auch wieder über jQuery ausgewertet werden kann
            $("#" + elem.id).attr("checked", elem.checked);
        }

        $("#IsWeekly").change(function() {
            // this block sets value to checkbox control for "true" / "false"
            var chkVal = $("input[type='checkbox'][name='IsWeekly']").val();
            if (chkVal == 'false') $("input[type='checkbox'][name='IsWeekly']").val(true);
            else $("input[type='checkbox'][name='IsWeekly']").val(false);

            onUpdateRoomState();
        });


        $("#saveAll").click(function() {

            var orgId = "@Model.OrganiserId.ToString()";
            var name = $("#Name").val();
            var desc = $("#Description").val();
            var newDate = $("#NewDate").val();
            var newBegin = $("#NewBegin").val();
            var newEnd = $("#NewEnd").val();
            var isWeekly = $("#IsWeekly").is(':checked');
            var isDaily = $("#IsDaily").is(':checked');
            var dailyEnd = $("#DailyEnd").val();
            var weeklyEnd = $("#WeeklyEnd").val();

            var list = $("#roomTable > table > tbody > tr input[type='checkbox'][checked='checked']").get();
            var n = list.length;
            var roomList = new Array();
            var i;
            for (i = 0; i < n; i++) {
                roomList[i] = list[i].id;
            }

            var dozList = new Array();
            list = $("#DozTable > table > tbody > tr").get();
            n = list.length;
            if (n > 0) {
                for (var i = 0; i < n; i++) {
                    dozList[i] = list[i].id;
                }
            }



            $.ajax(
            {
                type: "POST",
                url: '@Url.Action("CreateReservation")',
                    data: {
                        OrganiserId: orgId,
                        name: name,
                        description: desc,
                        NewDate: newDate,
                        NewBegin: newBegin,
                        NewEnd: newEnd,
                        IsWeekly: isWeekly,
                        IsDaily: isDaily,
                        DailyEnd: dailyEnd,
                        WeeklyEnd: weeklyEnd,
                        RoomIds: roomList,
                        DozIds: dozList
                    },
                success: function(data, success, xhr) {
                    //if (data.result === 'Redirect')
                        window.location = data.url;
                }
            });
        });

        function deleteRow(id) {
            $("#" + id).remove();
        }


            </script>
        }
