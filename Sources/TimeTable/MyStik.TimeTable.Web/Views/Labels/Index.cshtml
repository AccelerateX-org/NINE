@using MyStik.TimeTable.Data
@model MyStik.TimeTable.Data.ActivityOrganiser

@{
    ViewBag.Title = Model.ShortName + " | Kohorten";

    //var db = new TimeTableDbContext();

    /*
    if (Request.IsLocal)
    {

        foreach (var c in Model.Curricula)
        {
            if (c.LabelSet != null)
            {
                foreach (var label in c.LabelSet.ItemLabels.ToList())
                {
                    c.LabelSet.ItemLabels.Remove(label);
                }
            }
        }

    }
    */

    /*
    var hasAW = false;
    var inst = db.Institutions.SingleOrDefault(x => x.Tag == "HM");
    if (inst != null && inst.LabelSet != null)
    {
        var label = inst.LabelSet.ItemLabels.SingleOrDefault(x => x.Name == "AW");
        if (label == null)
        {
            hasAW = false;
            label = new ItemLabel
            {
                Name = "AW",
            };
            inst.LabelSet.ItemLabels.Add(label);
            db.ItemLabels.Add(label);
        }
        else
        {
            hasAW = true;
        }
    }
    */

    //db.SaveChanges();


}

<div class="row">
    <div class="col-12">

        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i class="bi bi-grid"></i></a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "University")">Campus</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Campus", "University")">HM</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Faculty", "University", new { id = Model.Id })">@Model.ShortName</a></li>
                <li class="breadcrumb-item active" aria-current="page">Kohorten</li>
            </ol>
        </nav>

        <div class="card">
            <div class="list-group">
                <div class="list-group-item">
                    <div class="btn-group">
                        @if (ViewBag.UserRight.IsInstitutionAdmin && Model.Institution != null)
                        {
                            <a href="@Url.Action("AddInstitutionLabel", new { instId = Model.Institution.Id })" class="btn btn-outline-primary disabled">
                                <i class="bi bi-plus"></i> Neue Kohorte (@Model.Institution.Tag)
                            </a>
                        }
                        @if (ViewBag.UserRight.IsOrgAdmin)
                        {
                            <a href="@Url.Action("AddOrgLabel", new { orgId = Model.Id })" class="btn btn-outline-primary disabled">
                                <i class="bi bi-plus"></i> Neue Kohorte (@Model.ShortName)
                            </a>
                        }
                        @if (ViewBag.UserRight.IsCurriculumAdmin)
                        {
                            <div class="dropdown">
                                <button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Neue Kohorte für Studiengang
                                </button>
                                <ul class="dropdown-menu">
                                    @foreach (var c in Model.Curricula.Where(x => !x.IsDeprecated).OrderBy(x => x.ShortName))
                                    {
                                        <li>
                                            <a href="@Url.Action("AddLabel", new { currId = c.Id })" class="dropdown-item">
                                                @c.ShortName
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                            <a href="@Url.Action("AddOrgLabel", new { orgId = Model.Id })" class="btn btn-outline-primary disabled">
                                <i class="bi bi-binoculars"></i> Kohortenplanung
                            </a>
                        }
                    </div>
                </div>
            </div>

            <table class="table">
                <thead>
                    <tr>
                        <th>Ebene</th>
                        <th>Name</th>
                        <th>Beschreibung</th>
                        <th>Farbe</th>
                        <th># Nutzung</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                @if (Model.Institution != null)
                {
                    foreach (var label in Model.Institution.LabelSet.ItemLabels.OrderBy(x => x.Name))
                    {
                        <tr>
                            <td>@Model.Institution.Tag</td>
                            <td>@label.Name</td>
                            <td>@label.Description</td>
                            <td>@label.HtmlColor</td>
                            <td>@label.LabelSets.Count</td>
                            <td>
                                @if (ViewBag.UserRight.IsInstitutionAdmin)
                                {
                                    <a href="@Url.Action("EditLabel", new { currId = Model.Id, labelId = label.Id })" class="btn btn-sm btn-outline-primary">Ändern</a>
                                    <a href="@Url.Action("DeleteLabel", new { currId = Model.Id, labelId = label.Id })" class="btn btn-sm btn-outline-danger">Löschen</a>
                                }
                            </td>
                        </tr>
                    }
                }
                @foreach (var label in Model.LabelSet.ItemLabels.OrderBy(x => x.Name))
                {
                    <tr>
                        <td>@Model.ShortName</td>
                        <td>@label.Name</td>
                        <td>@label.Description</td>
                        <td>@label.HtmlColor</td>
                        <td>@label.LabelSets.Count</td>
                        <td>
                            @if (ViewBag.UserRight.IsOrgAdmin)
                            {
                                <a href="@Url.Action("EditLabel", new { currId = Model.Id, labelId = label.Id })" class="btn btn-sm btn-outline-primary">Ändern</a>
                                <a href="@Url.Action("DeleteLabel", new { currId = Model.Id, labelId = label.Id })" class="btn btn-sm btn-outline-danger">Löschen</a>
                            }
                        </td>
                    </tr>
                }
                @foreach (var curr in Model.Curricula.OrderBy(x => x.ShortName))
                {
                    if (curr.LabelSet != null)
                    {
                        foreach (var label in curr.LabelSet.ItemLabels.OrderBy(x => x.Name))
                        {
                            <tr>
                                <td>@curr.ShortName</td>
                                <td>@label.Name</td>
                                <td>@label.Description</td>
                                <td>@label.HtmlColor</td>
                                <td>@label.LabelSets.Count</td>
                                <td>
                                    @if (ViewBag.UserRight.IsCurriculumAdmin)
                                    {
                                        <a href="@Url.Action("EditLabel", new { currId = curr.Id, labelId = label.Id })" class="btn btn-sm btn-outline-primary">Ändern</a>
                                        <a href="@Url.Action("MergeLabel", new { currId = curr.Id, labelId = label.Id })" class="btn btn-sm btn-outline-primary">Übertragen</a>
                                        <a href="@Url.Action("DeleteLabel", new { currId = curr.Id, labelId = label.Id })" class="btn btn-sm btn-outline-danger">Löschen</a>
                                    }
                                </td>
                            </tr>
                        }
                    }
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

