@using MyStik.TimeTable.Web.Helpers
@model MyStik.TimeTable.Web.Models.OfficeHourSubscriptionViewModel

@{
    ViewBag.Title = "Sprechstunde";
    var now = DateTime.Now;
    var historicDates = Model.Dates.Where(x => x.Date.End <= now).OrderBy(x => x.Date.Begin).ToList();
    var futureDates = Model.Dates.Where(x => x.Date.End > now).OrderBy(x => x.Date.Begin).ToList();
}

<div class="panel panel-default">
    <div class="panel-body bg-fillter-lecturer">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <h1>Meine Sprechstundentermine im @Model.Semester.Name</h1>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8">
            <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="headingOne">
                        <h4 class="panel-title">
                            <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                Vergangene Termine
                            </a>
                        </h4>
                    </div>
                    <div id="collapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                        <div class="list-group">
                            @foreach (var date in historicDates)
                            {
                                <a href="@Url.Action("DateDetails", new {id = date.Date.Id})" class="list-group-item">
                                    <div class="list-group-item-heading">
                                        <h5>@Html.TimeSpanWithDate(date.Date)</h5>
                                    </div>
                                </a>
                            }
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="headingTwo">
                        <h4 class="panel-title">
                            <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                Zukünftige Termine
                            </a>
                        </h4>
                    </div>
                    <div id="collapseTwo" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingTwo">
                        <div class="list-group">
                            @foreach (var date in futureDates)
                            {
                                if (date.IsCancelled)
                                {
                                    <a class="list-group-item list-group-item-danger" href="@Url.Action("DateDetails", new {id = date.Date.Id})">
                                        <div class="list-group-item-heading">
                                            <h5>@Html.TimeSpanWithDate(date.Date) - abgesagt</h5>
                                        </div>
                                    </a>
                                }
                                else
                                {
                                    <a class="list-group-item" href="@Url.Action("DateDetails", new {id = date.Date.Id})">
                                        <div class="list-group-item-heading">
                                            <h5>@Html.TimeSpanWithDate(date.Date)</h5>
                                        </div>
                                        <div class="list-group-item-text">
                                            <ul class="fa-ul">
                                                @if (!string.IsNullOrEmpty(@date.Date.Title))
                                                {
                                                    <li><i class="fa fa-li fa-info-circle"></i>@date.Date.Title</li>
                                                }
                                                @if (date.Date.Slots.Any())
                                                {
                                                    <li><i class="fa fa-li fa-users"></i>Slotbuchung: @date.Subscriptions.Count von @date.Capacity Slots belegt</li>
                                                }
                                                else
                                                {
                                                    <li><i class="fa fa-li fa-users"></i>Offener Termin: @date.Subscriptions.Count von @date.Capacity Plätzen belegt</li>
                                                }
                                                <li><i class="fa fa-li fa-clock-o"></i>Eintragung möglich bis @date.EndOfSubscriptionPeriod</li>
                                            </ul>
                                        </div>
                                    </a>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>Verwaltung</h4>
                </div>
                <div class="list-group">
                    <a class="list-group-item" href="@Url.Action("EditOpenSystem", "OfficeHour", new {id = Model.OfficeHour.Id})">
                        <i class="fa fa-cogs"></i> Allgemeine Einstellungen ändern
                    </a>
                    <a class="list-group-item" href="@Url.Action("CreateDate", "OfficeHour", new {id = Model.OfficeHour.Id})">
                        <i class="fa fa-calendar"></i> Neuen Termin oder Terminserie anlegen
                    </a>
                    <a class="list-group-item" href="@Url.Action("SubscriptionList", "OfficeHour", new {id = Model.OfficeHour.Id})">
                        <i class="fa fa-download"></i> Teilnehmerliste (aller zukünftigen Termine)
                    </a>
                    <a class="list-group-item list-group-item-danger" href="@Url.Action("DeleteOfficeHour", "OfficeHour", new {id = Model.OfficeHour.Id})">
                        <i class="fa fa-trash-o"></i> Sprechstunde komplett löschen
                    </a>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>Allgemeine Einstellungen</h4>
                </div>
                <div class="list-group">
                    <div class="list-group-item">
                        <div class="list-group-item-heading">
                            <h5>Anzahl Eintragungen in zukünftigen Terminen: @Model.OfficeHour.FutureSubscriptions</h5>
                        </div>
                        <div class="list-group-item-text">
                            Das ist die Anzahl von Termine, die Studierende "auf Vorrat" buchen können.
                        </div>
                    </div>
                    <div class="list-group-item">
                        <div class="list-group-item-heading">
                            <h5>Beschreibungstext</h5>
                        </div>
                        <div class="list-group-item-text">
                            @Html.Raw(Model.OfficeHour.Description)
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>




